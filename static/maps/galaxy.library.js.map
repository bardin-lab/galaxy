{"version":3,"sources":["galaxy.library.js"],"names":["LibraryRouter","Backbone","Router","extend","initialize","this","routesHit","history","on","bind","trackPageview","routes","","page/:show_page","library/:library_id/permissions","folders/:folder_id/permissions","folders/:folder_id/datasets/:dataset_id","folders/:folder_id/datasets/:dataset_id/permissions","folders/:folder_id/download/:format","folders/:folder_id/import/:source","back","window","navigate","trigger","replace","url","getFragment","test","ga","Galaxy","root","LibraryPrefs","_baseMvc2","default","SessionStorageModel","defaults","without_restricted","sort_order","sort_by","folder_page_size","GalaxyLibrary","View","libraryToolbarView","libraryListView","library_router","libraryView","with_deleted","ga_code","i","s","o","g","r","a","m","q","push","arguments","l","Date","getElementsByTagName","insertBefore","document","folderToolbarView","config","folderListView","preferences","id","createElement","_libraryLibrarytoolbarView2","LibraryToolbarView","parentNode","_libraryLibrarylistView2","LibraryListView","show_page","libraries","render","$el","unbind","_libraryFoldertoolbarView2","FolderToolbarView","_libraryFolderlistView2","FolderListView","folder_id","format","$","find","length","_toastr2","download","dataset_id","datasetView","_libraryDatasetView2","LibraryDatasetView","show_version","show_permissions","ldda_id","library_id","_libraryLibraryView2","LibraryView","folderView","_libraryFolderView2","FolderView","source","showImportModal","start","pushState"],"mappings":"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","file":"../scripts/galaxy.library.js","sourcesContent":["// MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\n// === MAIN GALAXY LIBRARY MODULE ====\n// MMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMM\n\nimport mod_utils from \"utils/utils\";\nimport mod_toastr from \"libs/toastr\";\nimport mod_baseMVC from \"mvc/base-mvc\";\nimport mod_library_model from \"mvc/library/library-model\";\nimport mod_folderlist_view from \"mvc/library/library-folderlist-view\";\nimport mod_librarylist_view from \"mvc/library/library-librarylist-view\";\nimport mod_librarytoolbar_view from \"mvc/library/library-librarytoolbar-view\";\nimport mod_foldertoolbar_view from \"mvc/library/library-foldertoolbar-view\";\nimport mod_library_dataset_view from \"mvc/library/library-dataset-view\";\nimport mod_library_library_view from \"mvc/library/library-library-view\";\nimport mod_library_folder_view from \"mvc/library/library-folder-view\";\n// ============================================================================\n/**\n * The Data Libraries router. Takes care about triggering routes\n * and sends users to proper pieces of the application.\n */\nvar LibraryRouter = Backbone.Router.extend({\n    initialize: function() {\n        this.routesHit = 0;\n        // keep count of number of routes handled by the application\n        Backbone.history.on(\n            \"route\",\n            function() {\n                this.routesHit++;\n            },\n            this\n        );\n\n        this.bind(\"route\", this.trackPageview);\n    },\n\n    routes: {\n        \"\": \"libraries\",\n        \"page/:show_page\": \"libraries_page\",\n        \"library/:library_id/permissions\": \"library_permissions\",\n        \"folders/:folder_id/permissions\": \"folder_permissions\",\n        \"folders/:id\": \"folder_content\",\n        \"folders/:id/page/:show_page\": \"folder_page\",\n        \"folders/:folder_id/datasets/:dataset_id\": \"dataset_detail\",\n        \"folders/:folder_id/datasets/:dataset_id/permissions\": \"dataset_permissions\",\n        \"folders/:folder_id/datasets/:dataset_id/versions/:ldda_id\": \"dataset_version\",\n        \"folders/:folder_id/download/:format\": \"download\",\n        \"folders/:folder_id/import/:source\": \"import_datasets\"\n    },\n\n    /**\n     * If more than one route has been hit the user did not land on current\n     * page directly so we can go back safely. Otherwise go to the home page.\n     * Use replaceState if available so the navigation doesn't create an\n     * extra history entry\n     */\n    back: function() {\n        if (this.routesHit > 1) {\n            window.history.back();\n        } else {\n            this.navigate(\"#\", { trigger: true, replace: true });\n        }\n    },\n\n    /**\n     * Track every route change as a page view in Google Analytics.\n     */\n    trackPageview: function() {\n        var url = Backbone.history.getFragment();\n        //prepend slash\n        if (!/^\\//.test(url) && url != \"\") {\n            url = `/${url}`;\n        }\n        if (typeof ga !== \"undefined\") {\n            ga(\"send\", \"pageview\", `${Galaxy.root}library/list${url}`);\n        }\n    }\n});\n\n// ============================================================================\n/** session storage for library preferences */\nvar LibraryPrefs = mod_baseMVC.SessionStorageModel.extend({\n    defaults: {\n        with_deleted: false,\n        without_restricted: false,\n        sort_order: \"asc\",\n        sort_by: \"name\",\n        library_page_size: 20,\n        folder_page_size: 15\n    }\n});\n\n// ============================================================================\n/**\n * Main view of the Galaxy Data Libraries. Stores pointers to other subviews\n * and defines what router should do on the route triggers.\n */\nvar GalaxyLibrary = Backbone.View.extend({\n    libraryToolbarView: null,\n    libraryListView: null,\n    library_router: null,\n    libraryView: null,\n    folderToolbarView: null,\n    folderListView: null,\n    datasetView: null,\n\n    initialize: function() {\n        // This should go upstream in the js app once available\n        if (window.Galaxy.config.ga_code) {\n            ((i, s, o, g, r, a, m) => {\n                i[\"GoogleAnalyticsObject\"] = r;\n                (i[r] =\n                    i[r] ||\n                    function() {\n                        (i[r].q = i[r].q || []).push(arguments);\n                    }),\n                    (i[r].l = 1 * new Date());\n                (a = s.createElement(o)), (m = s.getElementsByTagName(o)[0]);\n                a.async = 1;\n                a.src = g;\n                m.parentNode.insertBefore(a, m);\n            })(window, document, \"script\", \"//www.google-analytics.com/analytics.js\", \"ga\");\n            ga(\"create\", window.Galaxy.config.ga_code, \"auto\");\n            ga(\"send\", \"pageview\");\n        }\n\n        Galaxy.libraries = this;\n\n        this.preferences = new LibraryPrefs({ id: \"global-lib-prefs\" });\n\n        this.library_router = new LibraryRouter();\n\n        this.library_router.on(\"route:libraries\", () => {\n            if (Galaxy.libraries.libraryToolbarView) {\n                Galaxy.libraries.libraryToolbarView.$el.unbind(\"click\");\n            }\n            Galaxy.libraries.libraryToolbarView = new mod_librarytoolbar_view.LibraryToolbarView();\n            Galaxy.libraries.libraryListView = new mod_librarylist_view.LibraryListView();\n        });\n\n        this.library_router.on(\"route:libraries_page\", show_page => {\n            if (Galaxy.libraries.libraryToolbarView === null) {\n                Galaxy.libraries.libraryToolbarView = new mod_librarytoolbar_view.LibraryToolbarView();\n                Galaxy.libraries.libraryListView = new mod_librarylist_view.LibraryListView({ show_page: show_page });\n            } else {\n                Galaxy.libraries.libraryListView.render({\n                    show_page: show_page\n                });\n            }\n        });\n\n        this.library_router.on(\"route:folder_content\", id => {\n            if (Galaxy.libraries.folderToolbarView) {\n                Galaxy.libraries.folderToolbarView.$el.unbind(\"click\");\n            }\n            Galaxy.libraries.folderToolbarView = new mod_foldertoolbar_view.FolderToolbarView({ id: id });\n            Galaxy.libraries.folderListView = new mod_folderlist_view.FolderListView({ id: id });\n        });\n\n        this.library_router.on(\"route:folder_page\", (id, show_page) => {\n            if (Galaxy.libraries.folderToolbarView === null) {\n                Galaxy.libraries.folderToolbarView = new mod_foldertoolbar_view.FolderToolbarView({ id: id });\n                Galaxy.libraries.folderListView = new mod_folderlist_view.FolderListView({\n                    id: id,\n                    show_page: show_page\n                });\n            } else {\n                Galaxy.libraries.folderListView.render({\n                    id: id,\n                    show_page: parseInt(show_page)\n                });\n            }\n        });\n\n        this.library_router.on(\"route:download\", (folder_id, format) => {\n            if ($(\"#folder_list_body\").find(\":checked\").length === 0) {\n                mod_toastr.info(\"You must select at least one dataset to download\");\n                Galaxy.libraries.library_router.navigate(`folders/${folder_id}`, { trigger: true, replace: true });\n            } else {\n                Galaxy.libraries.folderToolbarView.download(format);\n                Galaxy.libraries.library_router.navigate(`folders/${folder_id}`, { trigger: false, replace: true });\n            }\n        });\n\n        this.library_router.on(\"route:dataset_detail\", (folder_id, dataset_id) => {\n            if (Galaxy.libraries.datasetView) {\n                Galaxy.libraries.datasetView.$el.unbind(\"click\");\n            }\n            Galaxy.libraries.datasetView = new mod_library_dataset_view.LibraryDatasetView({\n                id: dataset_id,\n                show_version: false,\n                show_permissions: false\n            });\n        });\n\n        this.library_router.on(\"route:dataset_version\", (folder_id, dataset_id, ldda_id) => {\n            if (Galaxy.libraries.datasetView) {\n                Galaxy.libraries.datasetView.$el.unbind(\"click\");\n            }\n            Galaxy.libraries.datasetView = new mod_library_dataset_view.LibraryDatasetView({\n                id: dataset_id,\n                ldda_id: ldda_id,\n                show_version: true\n            });\n        });\n\n        this.library_router.on(\"route:dataset_permissions\", (folder_id, dataset_id) => {\n            if (Galaxy.libraries.datasetView) {\n                Galaxy.libraries.datasetView.$el.unbind(\"click\");\n            }\n            Galaxy.libraries.datasetView = new mod_library_dataset_view.LibraryDatasetView({\n                id: dataset_id,\n                show_permissions: true\n            });\n        });\n\n        this.library_router.on(\"route:library_permissions\", library_id => {\n            if (Galaxy.libraries.libraryView) {\n                Galaxy.libraries.libraryView.$el.unbind(\"click\");\n            }\n            Galaxy.libraries.libraryView = new mod_library_library_view.LibraryView({\n                id: library_id,\n                show_permissions: true\n            });\n        });\n\n        this.library_router.on(\"route:folder_permissions\", folder_id => {\n            if (Galaxy.libraries.folderView) {\n                Galaxy.libraries.folderView.$el.unbind(\"click\");\n            }\n            Galaxy.libraries.folderView = new mod_library_folder_view.FolderView({\n                id: folder_id,\n                show_permissions: true\n            });\n        });\n\n        this.library_router.on(\"route:import_datasets\", (folder_id, source) => {\n            if (Galaxy.libraries.folderToolbarView && Galaxy.libraries.folderListView) {\n                Galaxy.libraries.folderToolbarView.showImportModal({\n                    source: source\n                });\n            } else {\n                Galaxy.libraries.folderToolbarView = new mod_foldertoolbar_view.FolderToolbarView({ id: folder_id });\n                Galaxy.libraries.folderListView = new mod_folderlist_view.FolderListView({ id: folder_id });\n                Galaxy.libraries.folderToolbarView.showImportModal({\n                    source: source\n                });\n            }\n        });\n\n        Backbone.history.start({ pushState: false });\n    }\n});\n\nexport default {\n    GalaxyApp: GalaxyLibrary\n};\n"]}