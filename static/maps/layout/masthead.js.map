{"version":3,"sources":["layout/masthead.js"],"names":["View","Backbone","extend","initialize","options","self","this","setElement","_template","$navbarBrandLink","$","$navbarBrandImage","$navbarBrandTitle","$navbarTabs","$quoteMeter","collection","_menu2","default","Collection","on","model","Tab","render","$el","m","fetch","Galaxy","frame","_scratchbook2","callback","quotaMeter","_userQuotameter2","UserQuotaMeter","user","el","e","$download_link","target","closest","length","append","hide","attr","text","each","preventDefault","get","q","html","brand","logo_url","logo_src"],"mappings":"+PAKIA,EAAOC,SAASD,KAAKE,QACrBC,WAAY,SAASC,GACjB,IAAIC,EAAOC,KACXA,KAAKF,QAAUA,EACfE,KAAKC,WAAWD,KAAKE,aACrBF,KAAKG,iBAAmBH,KAAKI,EAAE,sBAC/BJ,KAAKK,kBAAoBL,KAAKI,EAAE,uBAChCJ,KAAKM,kBAAoBN,KAAKI,EAAE,uBAChCJ,KAAKO,YAAcP,KAAKI,EAAE,gBAC1BJ,KAAKQ,YAAcR,KAAKI,EAAE,0BAG1BJ,KAAKS,WAAa,IAAIC,EAAAC,QAAKC,WAC3BZ,KAAKS,WAdbI,GAAA,MAAA,SAAAC,GACWnB,EAAAA,YAAcC,OAAO,IAAAc,EAAAC,QAAAI,KAAAD,MAAAA,IAAAE,SAAAC,OAExBJ,GAAId,QAAO,WACXA,EAAKD,YAAUA,UAEfe,GAAA,WAAKV,SAAAA,GACLJ,EAAKM,WAAAA,KAAoB,SAAAa,GACpBZ,EAAAA,OAkBAa,MAAMnB,KAAKF,SAZhBsB,OAAAC,MAAKZ,KACAI,MADL,IAAAS,EAAAX,SAEQZ,WAAKQ,KAAAA,aAODgB,OAAAA,WAAAA,KAAAC,WAAA,IAAAC,EAAAd,QAAAe,gBACHZ,MAFDM,OAAAO,KAGHC,GACAT,KAAMX,cAIPC,EAAAA,QADwBI,GAA5B,QAAA,SAAAgB,GAcQ,IAAIC,EAAiB1B,EAAEyB,EAAEE,QAAQC,QAAQ,eAVjD,GAAAF,EAAAG,SACA,IAAA7B,EAAA,uBAAA6B,QACOT,EAAAA,QAAaU,OACTd,EAAOO,aACLnB,KAAAA,KAAAA,YAFb2B,QAMA/B,EACKS,uBAAYuB,KAAK,MAAAN,EAAAM,KAAA,SACVN,EAAAA,oBAGI1B,GAAAA,eAAA,WAKH,IAAAiC,EAAA,GAQD,GAPAjC,EAAAA,WAAEkC,KAAA,SAAAxB,GACFe,IAAEU,EAAAA,EAAAA,IAAF,mBAAAzB,EAAA0B,IAAA,iBAAA1B,GACH2B,IAEDJ,GAAgBI,EAAhB,OAGY3B,KAARuB,EACA,OAAOA,KAKPrB,OAAA,WAKhBA,OAJahB,KAAAM,kBAAAoC,KAAA,WAAA1C,KAAAF,QAAA6C,OAAA,KAAA3C,KAAAF,QAAA6C,OAAA,KACJ3C,KA1BLG,iBAAAiC,KAAA,OAAApC,KAAAF,QAAA8C,UA2BH5C,KAnE2BK,kBAAA+B,KAAA,MAAApC,KAAAF,QAAA+C,UAyExB7C,KAAKwB,WAAWR,SAJpBA,MAIId,UAAA,WACA,MA1EwB,uVAkG5BR,KAAMA","file":"../../scripts/layout/masthead.js","sourcesContent":["import Menu from \"layout/menu\";\nimport Scratchbook from \"layout/scratchbook\";\nimport QuotaMeter from \"mvc/user/user-quotameter\";\n\n/** Masthead **/\nvar View = Backbone.View.extend({\n    initialize: function(options) {\n        var self = this;\n        this.options = options;\n        this.setElement(this._template());\n        this.$navbarBrandLink = this.$(\".navbar-brand-link\");\n        this.$navbarBrandImage = this.$(\".navbar-brand-image\");\n        this.$navbarBrandTitle = this.$(\".navbar-brand-title\");\n        this.$navbarTabs = this.$(\".navbar-tabs\");\n        this.$quoteMeter = this.$(\".quota-meter-container\");\n\n        // build tabs\n        this.collection = new Menu.Collection();\n        this.collection\n            .on(\"add\", model => {\n                self.$navbarTabs.append(new Menu.Tab({ model: model }).render().$el);\n            })\n            .on(\"reset\", () => {\n                self.$navbarTabs.empty();\n            })\n            .on(\"dispatch\", callback => {\n                self.collection.each(m => {\n                    callback(m);\n                });\n            })\n            .fetch(this.options);\n\n        // scratchbook\n        Galaxy.frame = this.frame = new Scratchbook({\n            collection: this.collection\n        });\n\n        // set up the quota meter (And fetch the current user data from trans)\n        // add quota meter to masthead\n        Galaxy.quotaMeter = this.quotaMeter = new QuotaMeter.UserQuotaMeter({\n            model: Galaxy.user,\n            el: this.$quoteMeter\n        });\n\n        // loop through beforeunload functions if the user attempts to unload the page\n        $(window)\n            .on(\"click\", e => {\n                var $download_link = $(e.target).closest(\"a[download]\");\n                if ($download_link.length == 1) {\n                    if ($(\"iframe[id=download]\").length === 0) {\n                        $(\"body\").append(\n                            $(\"<iframe/>\")\n                                .attr(\"id\", \"download\")\n                                .hide()\n                        );\n                    }\n                    $(\"iframe[id=download]\").attr(\"src\", $download_link.attr(\"href\"));\n                    e.preventDefault();\n                }\n            })\n            .on(\"beforeunload\", () => {\n                var text = \"\";\n                self.collection.each(model => {\n                    var q = model.get(\"onbeforeunload\") && model.get(\"onbeforeunload\")();\n                    if (q) {\n                        text += `${q} `;\n                    }\n                });\n                if (text !== \"\") {\n                    return text;\n                }\n            });\n    },\n\n    render: function() {\n        this.$navbarBrandTitle.html(`Galaxy ${(this.options.brand && `/ ${this.options.brand}`) || \"\"}`);\n        this.$navbarBrandLink.attr(\"href\", this.options.logo_url);\n        this.$navbarBrandImage.attr(\"src\", this.options.logo_src);\n        this.quotaMeter.render();\n        return this;\n    },\n\n    /** body template */\n    _template: function() {\n        return (\n            '<div id=\"masthead\" class=\"navbar navbar-fixed-top navbar-inverse\">' +\n            '<div class=\"navbar-header\">' +\n            '<div class=\"navbar-tabs\"/>' +\n            \"</div>\" +\n            '<div class=\"navbar-brand\">' +\n            '<a class=\"navbar-brand-link\">' +\n            '<img class=\"navbar-brand-image\"/>' +\n            '<span class=\"navbar-brand-title\"/>' +\n            \"</a>\" +\n            \"</div>\" +\n            '<div class=\"quota-meter-container\"/>' +\n            '<div class=\"navbar-icons\"/>' +\n            \"</div>\"\n        );\n    }\n});\n\nexport default {\n    View: View\n};\n"]}