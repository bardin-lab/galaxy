{"version":3,"sources":["layout/router.js"],"names":["$","Router","Backbone","extend","initialize","page","options","this","push","url","data","__identifer","Math","random","toString","substr","param","Galaxy","params","execute","callback","args","name","debug","queryObj","_queryStringParsing2","default","parse","pop","authenticate","access_denied","status","persistent"],"mappings":"sPACIA,EAAAA,EAAAA,QAIAC,EAASC,SAASD,OAAOE,QAGzBC,WAAY,SAASC,EAAMC,GACvBC,KAAKF,KAAOA,EACZE,KAAKD,QAAUA,GAInBE,KAAM,SAASC,EAAKC,IAChBA,EAAOA,OACFC,YAAcC,KAAKC,SACnBC,SAAS,IACTC,OAAO,GAjBhBf,IAAJ,GAAIA,EAAAA,QAAAA,KAAJ,IAAA,IAmBQS,GAAOT,EAAEgB,MAAMN,GAAM,GACrBO,OAAOC,OAASR,EAhBpBT,KAAAA,SAASC,GAASD,SAAOE,KAIrBgB,QAAA,SAAAC,EAAAC,EAAAC,GACAL,OAAAM,MAAKjB,kBAALc,EAAAC,EAAAC,GACH,IAN+BE,EAAAC,EAAAC,QAAAC,MAAAN,EAAAO,OAwB5BP,EAAKb,KAAKgB,GAhBdJ,IACMb,KAAAsB,aAAcnB,EAAMY,GACtBZ,EAAOA,MAAPH,KAAAc,GAIAZ,KAAOA,kBAoBXoB,aAAc,SAASR,EAAMC,GAd7B,OAAA,GAGIQ,cAAIN,WACJH,KAAAA,KAAKb,QACL,IAAIY,EAAAA,QAAAA,SACAW,OAAI,SACAX,QAAAA,sEACHY,YAAM,kBAMfH","file":"../../scripts/layout/router.js","sourcesContent":["import jQuery from \"jquery\";\nvar $ = jQuery;\nimport QUERY_STRING from \"utils/query-string-parsing\";\nimport Ui from \"mvc/ui/ui-misc\";\n\nvar Router = Backbone.Router.extend({\n    // TODO: not many client routes at this point - fill and remove from server.\n    // since we're at root here, this may be the last to be routed entirely on the client.\n    initialize: function(page, options) {\n        this.page = page;\n        this.options = options;\n    },\n\n    /** helper to push a new navigation state */\n    push: function(url, data) {\n        data = data || {};\n        data.__identifer = Math.random()\n            .toString(36)\n            .substr(2);\n        url += url.indexOf(\"?\") == -1 ? \"?\" : \"&\";\n        url += $.param(data, true);\n        Galaxy.params = data;\n        this.navigate(url, { trigger: true });\n    },\n\n    /** override to parse query string into obj and send to each route */\n    execute: function(callback, args, name) {\n        Galaxy.debug(\"router execute:\", callback, args, name);\n        var queryObj = QUERY_STRING.parse(args.pop());\n        args.push(queryObj);\n        if (callback) {\n            if (this.authenticate(args, name)) {\n                callback.apply(this, args);\n            } else {\n                this.access_denied();\n            }\n        }\n    },\n\n    authenticate: function(args, name) {\n        return true;\n    },\n\n    access_denied: function() {\n        this.page.display(\n            new Ui.Message({\n                status: \"danger\",\n                message: \"You must be logged in with proper credentials to make this request.\",\n                persistent: true\n            })\n        );\n    }\n});\n\nexport default Router;\n"]}