{"version":3,"sources":["mvc/toolshed/repository-queue-view.js"],"names":["View","Backbone","extend","el","defaults","initialize","options","that","this","model","_toolshedModel2","default","RepoQueue","listenTo","render","fetch","repo_queue_template","templateRepoQueue","models","$el","html","_localization2","repositories","_util2","queueLength","$","bindEvents","on","attr","title","queue","JSON","parse","repo_queue","hasOwnProperty","queue_key","repository_id","repository","id","remove","stringify","localStorage","repository_metadata","history","trigger","replace","installFromQueue","params","Object","install_tool_dependencies","install_repository_dependencies","install_resolver_dependencies","tool_panel_section","shed_tool_conf","changeset_revision","tool_shed_repository_ids","tool_shed_url","split","changeset","root","undefined","queueKey","post","Galaxy","iri_params","data","console","repository_queue","loadFromQueue","new_route","reDraw","empty","RepoQueueView","join"],"mappings":"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","file":"../../../scripts/mvc/toolshed/repository-queue-view.js","sourcesContent":["import _l from \"utils/localization\";\nimport toolshed_model from \"mvc/toolshed/toolshed-model\";\nimport toolshed_util from \"mvc/toolshed/util\";\nvar View = Backbone.View.extend({\n    el: \"#center\",\n\n    defaults: [{}],\n\n    initialize: function(options) {\n        var that = this;\n        this.model = new toolshed_model.RepoQueue();\n        this.listenTo(this.model, \"sync\", this.render);\n        this.model.fetch();\n        that.render();\n    },\n\n    render: function(options) {\n        var that = this;\n        var repo_queue_template = that.templateRepoQueue;\n        var repositories = that.model.models;\n        that.$el.html(\n            repo_queue_template({\n                title: _l(\"Repository Installation Queue\"),\n                repositories: repositories,\n                queue: toolshed_util.queueLength()\n            })\n        );\n        $(\"#center\").css(\"overflow\", \"auto\");\n        that.bindEvents();\n    },\n\n    bindEvents: function() {\n        var that = this;\n        $(\".install_one\").on(\"click\", function() {\n            var repository_metadata = that.loadFromQueue($(this).attr(\"data-repokey\"));\n            that.installFromQueue(repository_metadata, $(this).attr(\"data-repokey\"));\n        });\n        $(\".remove_one\").on(\"click\", function() {\n            var queue_key = $(this).attr(\"data-repokey\");\n            var repo_queue = JSON.parse(localStorage.repositories);\n            if (repo_queue.hasOwnProperty(queue_key)) {\n                var repository_id = repo_queue[queue_key].repository.id;\n                delete repo_queue[queue_key];\n                $(`#queued_repository_${repository_id}`).remove();\n            }\n            localStorage.repositories = JSON.stringify(repo_queue);\n        });\n        $(\"#clear_queue\").on(\"click\", () => {\n            localStorage.repositories = \"{}\";\n        });\n        $(\"#from_workflow\").on(\"click\", () => {\n            Backbone.history.navigate(\"workflows\", {\n                trigger: true,\n                replace: true\n            });\n        });\n    },\n\n    installFromQueue: function(repository_metadata, queue_key) {\n        var that = this;\n        var params = Object();\n        params.install_tool_dependencies = repository_metadata.install_tool_dependencies;\n        params.install_repository_dependencies = repository_metadata.install_repository_dependencies;\n        params.install_resolver_dependencies = repository_metadata.install_resolver_dependencies;\n        params.tool_panel_section = repository_metadata.tool_panel_section;\n        params.shed_tool_conf = repository_metadata.shed_tool_conf;\n        params.repositories = JSON.stringify([\n            [repository_metadata.repository.id, repository_metadata.changeset_revision]\n        ]);\n        params.tool_shed_repository_ids = JSON.stringify([repository_metadata.repository.id]);\n        params.tool_shed_url = queue_key.split(\"|\")[0];\n        params.changeset = repository_metadata.changeset_revision;\n        var url = `${Galaxy.root}api/tool_shed_repositories/install?async=True`;\n        $(`#queued_repository_${repository_metadata.repository.id}`).remove();\n        if (localStorage.repositories) {\n            if (queue_key === undefined) {\n                queue_key = toolshed_util.queueKey(repository_metadata);\n            }\n            var repository_queue = JSON.parse(localStorage.repositories);\n            if (repository_queue.hasOwnProperty(queue_key)) {\n                delete repository_queue[queue_key];\n                localStorage.repositories = JSON.stringify(repository_queue);\n            }\n        }\n\n        $.post(url, params, data => {\n            var iri_params = JSON.parse(data);\n            var repositories = iri_params.repositories;\n            var new_route = `status/r/${repositories.join(\"|\")}`;\n            $.post(`${Galaxy.root}admin_toolshed/install_repositories`, iri_params, data => {\n                console.log(\"Initializing repository installation succeeded\");\n            });\n            Backbone.history.navigate(new_route, {\n                trigger: true,\n                replace: true\n            });\n        });\n    },\n\n    loadFromQueue: function(queue_key) {\n        var repository_queue = JSON.parse(localStorage.repositories);\n        if (repository_queue.hasOwnProperty(queue_key)) {\n            return repository_queue[queue_key];\n        }\n        return undefined;\n    },\n\n    reDraw: function(options) {\n        this.$el.empty();\n        this.initialize(options);\n        this.model.fetch();\n        this.render(options);\n    },\n\n    templateRepoQueue: _.template(\n        [\n            '<div class=\"unified-panel-header\" id=\"panel_header\" unselectable=\"on\">',\n            '<div class=\"unified-panel-header-inner\"><%= title %></div>',\n            '<div class=\"unified-panel-header-inner\" style=\"position: absolute; right: 5px; top: 0px;\"><a href=\"#/queue\">Repository Queue (<%= queue %>)</a></div>',\n            \"</div>\",\n            '<div class=\"tab-pane\" id=\"panel_header\" id=\"repository_queue\">',\n            '<table id=\"queued_repositories\" class=\"grid\" border=\"0\" cellpadding=\"2\" cellspacing=\"2\" width=\"100%\">',\n            '<thead id=\"grid-table-header\">',\n            \"<tr>\",\n            '<th class=\"datasetRow\">Name</th>',\n            '<th class=\"datasetRow\">Owner</th>',\n            '<th class=\"datasetRow\">Revision</th>',\n            '<th class=\"datasetRow\">ToolShed</th>',\n            '<th class=\"datasetRow\">Install</th>',\n            '<th class=\"datasetRow\"><input class=\"btn btn-primary\" type=\"submit\" id=\"clear_queue\" name=\"clear_queue\" value=\"Clear queue\" /></th>',\n            \"</tr>\",\n            \"</thead>\",\n            \"<tbody>\",\n            \"<% _.each(repositories, function(repository) { %>\",\n            '<tr id=\"queued_repository_<%= repository.get(\"id\") %>\">',\n            '<td class=\"datasetRow\"><%= repository.get(\"repository\").name %></td>',\n            '<td class=\"datasetRow\"><%= repository.get(\"repository\").owner %></td>',\n            '<td class=\"datasetRow\"><%= repository.get(\"changeset_revision\") %></td>',\n            '<td class=\"datasetRow\"><%= repository.get(\"tool_shed_url\") %></td>',\n            '<td class=\"datasetRow\">',\n            '<input class=\"btn btn-primary install_one\" data-repokey=\"<%= repository.get(\"queue_key\") %>\" type=\"submit\" id=\"install_repository_<%= repository.get(\"id\") %>\" name=\"install_repository\" value=\"Install now\" />',\n            \"</td>\",\n            '<td class=\"datasetRow\">',\n            '<input class=\"btn btn-primary remove_one\" data-repokey=\"<%= repository.get(\"queue_key\") %>\" type=\"submit\" id=\"unqueue_repository_<%= repository.get(\"id\") %>\" name=\"unqueue_repository\" value=\"Remove from queue\" />',\n            \"</td>\",\n            \"</tr>\",\n            \"<% }); %>\",\n            \"</tbody>\",\n            \"</table>\",\n            '<input type=\"button\" class=\"btn btn-primary\" id=\"from_workflow\" value=\"Add from workflow\" />',\n            \"</div>\"\n        ].join(\"\")\n    )\n});\n\nexport default {\n    RepoQueueView: View\n};\n"]}