{"version":3,"sources":["mvc/library/library-library-view.js"],"names":["LibraryView","Backbone","View","extend","el","model","options","events","click .toolbtn_save_permissions","initialize","this","_","id","fetchLibrary","_libraryModel2","default","Library","fetch","success","that","show_permissions","showPermissions","error","response","responseJSON","_toastr2","err_msg","onclick","Galaxy","libraries","back","library_router","undefined","fetched_permissions","access_library_role_list","length","set","is_unrestricted","is_admin","user","isAdmin","template","templateLibraryPermissions","library","$","get","root","self","done","prepareSelectBoxes","fail","_serializeRoles","role_list","i","selected_access_library_roles","add_library_item_role_list","selected_manage_library_roles","manage_library_role_list","selected_modify_library_roles","modify_library_role_list","accessSelectObject","_uiSelect2","_createSelectOptions","addSelectObject","manageSelectObject","modifySelectObject","selected_add_item_roles","init_data","is_library_access","initialData","css","multiple","ajax","minimumInputLength","placeholder","container","term","page","dataType","quietMillis","data","page_limit","total","results","roles","more","formatResult","role","name","initSelection","element","callback","val","split","each","item","push","makeDatasetPrivate","select_options","post","removeDatasetRestrictions","_extractIds","roles_list","ids_list","savePermissions","event","access_ids","$el","select2","add_ids","manage_ids","modify_ids","access_ids[]","add_ids[]","manage_ids[]","modify_ids[]","join"],"mappings":"+QAGIA,EAAcC,SAASC,KAAKC,QAC5BC,GAAI,UAEJC,MAAO,KAEPC,WAEAC,QACIC,kCAAmC,mBAGvCC,WAAY,SAASH,GACjBI,KAAKJ,QAAUK,EAAER,OAAOO,KAAKJ,QAASA,GAClCI,KAAKJ,QAAQM,IACbF,KAAKG,gBAIbA,aAAc,SAASP,GAfvBD,KAAAA,QAHmCM,EAAAR,OAAAO,KAAAJ,QAAAA,GAoB/BI,KAAKL,MAAQ,IAAIS,EAAAC,QAAkBC,SAfvCV,GAAAA,KALmCA,QAAAM,KAOnCL,IAAAA,EAAQG,KACJA,KAAAL,MAAAY,OAR+BC,QAAA,WA0BnBC,EAAKb,QAAQc,kBAfjBD,EAAAE,mBAGJC,MAAA,SAAKT,EAALU,QACH,IAAAA,EAAAC,aAf8BC,EAAAV,QAAAO,MAAAC,EAAAC,aAAAE,QAAA,0BAAA,IAiCfC,QAAS,WAffC,OAAAC,UAASvB,eAASwB,UAE5BL,EAAAV,QAAAO,MAAA,4CAAA,IAGWK,QAAX,WACAC,OAAiBC,UAAAE,eAAAD,cAQLT,gBAAA,SAAAf,GACIqB,KAAAA,QAAAA,EAAAA,OAAAA,KAASrB,QAAAA,GACLsB,EAAAA,YAAAA,cAFRI,IAAgFtB,KAAAJ,QAAhF2B,sBAKG,IAANvB,KANDJ,QAMO2B,oBAAAC,yBAAAC,OACHzB,KAAAL,MAAA+B,KAAAC,iBAAiB,IAETT,KAAAA,MAAAA,KAAAA,iBAAiBG,KAG5B,IAAAO,GAAA,EACJV,OAAAW,OApBYD,EAAjBV,OAAAW,KAAAC,WAuCA,IAAIC,EAAW/B,KAAKgC,6BAfxBrB,KAAAA,IAAAA,KAAAA,GAAiBsB,QAAAjC,KAAAL,MAASC,SAASgC,KAE/BM,IAAAA,EAAElC,KAiBFkC,EAAEC,IAAOjB,OAAOkB,KAAhB,iBAAqCC,EAAKnC,GAA1C,8BAfAoC,KAAI,SAAAf,GACAc,EAAIE,oBACAhB,oBAAiBI,MAGpBa,KAAA,WACJzB,EAAAV,QAAAO,MAAA,sEAGGgB,EAAAA,yBAAkBC,UAEtBK,EAAA,WAAIH,IAAAA,WAAgBC,SAGpBS,gBAAIJ,SAAJK,GAGQL,IAAAA,IAFRH,KAEQG,EAAKE,EAAAA,EAAAA,EAAAA,OAAmBI,IACpBpB,EAAAA,KAAAA,EAAqBA,GAAAA,GAArBA,IAAqBA,EAAAA,GAAAA,IAE5B,OACAiB,GAiBTD,mBAAoB,SAAS3C,GAbzBsC,KAAAA,QAAEjC,EAAAR,OAAAO,KAAFJ,QAAAA,GACA,IAAA2B,EAAAvB,KAAAJ,QAAA2B,oBACAW,EAAElC,KAgBE4C,EAAgC5C,KAAKyC,gBAAgBlB,EAAoBC,0BAbjFiB,EAAiBzC,KAAAyC,gBAAAlB,EAAoBsB,4BACjCC,EAAA9C,KAAAyC,gBAAAlB,EAAAwB,0BACAC,EAA8BvB,KAA9BgB,gBAA2ClB,EAAA0B,0BAE1CZ,EAAAa,mBAAA,IAAAC,EAAA9C,QAAAb,KACDQ,KAAAoD,qBAAApD,KAAA,cAAA4C,GAAA,IAgBAP,EAAKgB,gBAAkB,IAAIF,EAAA9C,QAAWb,KAb1C+C,KAAAA,qBAAoBvC,KAAA,WAASJ,GAAS,IAElCyC,EAAAiB,mBAAI/B,IAAsB4B,EAAA9C,QAAKT,KAC/BI,KAAIqC,qBAAJrC,KAAA,cAAA8C,GAAA,IAEAT,EAAAkB,mBAAIX,IAAAA,EAAAA,QAAgCpD,KACpCQ,KAAIwD,qBAAAA,KAA0B,cAAKf,GAAoCI,KAIvER,qBAAKa,SAALb,EAA0BnC,EAAIuD,EAAAC,GAgE1BC,OA7DJtB,GAA2B,IAAtBgB,GAAsBK,GAM3BrB,mBAAKkB,EA7G0BK,IAAA1D,EAuH3B2D,UAAU,EALlBT,YAAAA,yBACIM,UAAAA,EAAAA,IAAoBA,KAApBA,IAAoBA,GACpBI,MACIC,IAAAA,OAAAA,KAAAA,iBACAH,EAFiB1D,GACjB6D,kDADiBL,EAIjBM,SAAAA,OACAC,YAAW5B,IACXyB,KAAM,SAAAI,EAAAC,GAIFC,OACAC,EAAAA,EACAC,WAAM,GACFH,KAAAA,IAGII,QAAAA,SAAAA,EAAYJ,GACZA,IAAAA,EAHG,GAGHA,EAAWG,EAAAE,MAElB,OAbCC,QAAAH,EAAAI,MAAAC,KAAAA,KAgBEC,aAAA,SAAAC,GACA,OAAAA,EAAOC,KAAP,UAAkBR,EAAKI,MAG/BE,gBAAAA,SAAwCC,GACpC,OAAAA,EAAUA,MAMdE,cAAe,SAASC,EAASC,GAAjCF,IAAAA,KACI7C,EAAA8C,EAAAE,MAAAC,MAAA,MAAAC,KAAA,WACA,IAAAC,EAAArF,KAAAmF,MAAA,KACAb,EAAAgB,MACIhB,GAAAA,EAAJ,GACEU,KAAQE,EAAR,OAGMhF,EAAAA,IAGPyD,YANDF,EAOAwB,iBAASX,YAUrBiB,mBAAoB,WAHhB,IAAAlD,EAAOmD,KACVtD,EAzKkCuD,KAAAvE,OAAAkB,KAyKlC,0BAzKkCC,EAAAnC,GAyKlC,oCAKQoC,KAAK,SAAAf,GAHdgE,EAAAA,MAAAA,KAAoB5D,iBAAA,IACZU,EAAAA,iBACMnB,oBAAVK,IAGQc,EAAAA,QAAK1B,QAAAA,wCAAgB6B,KAArB,WAGAzB,EAAAV,QAAAO,MAAWJ,kEAKtBkF,0BAxLkC,WA2L/B,IAAIrD,EAAOrC,KADf0F,EAAAA,KAAAA,OAAAA,KAAAA,0BAA2BrD,EAAAnC,GAA3BwF,2CACIpD,KAAID,SAAAA,GACFoD,EAAQvE,MAAOkB,KAAjBT,iBAAA,IAEQU,EAAK1C,iBACL0C,oBAAqBd,IAAAR,EAAAV,QAArBG,QAAA,iDAHRgC,KAQKA,WACGzB,EAAAV,QAAAO,MAAWA,uEAIvB+E,YAAAA,SAAaC,GAET,IAAA,IADAC,KACKlD,EAAIA,EAAIiD,OAAWnE,EAAXkB,GAAuBA,EAAAA,IAChCkD,EAAAA,KAASP,EAAKM,GAAAA,IAElB,OAAAC,GAEJC,gBAAAA,SAAiBC,GACb,IAAA1D,EAAIA,KAEJ2D,EAAIA,KAAaL,YAAKA,KAAYzC,mBAAKA,IAAmB+C,QAAIC,SAC9DC,EAAIA,KAAUR,YAAKA,KAAYtC,gBAAKA,IAAgB4C,QAAIC,SACxDE,EAAIA,KAAaT,YAAKA,KAAYrC,mBAAKA,IAAmB2C,QAAIC,SAC9DG,EAAIA,KAAaV,YAAKA,KAAYpC,mBAAKA,IAAmB0C,QAAIC,SAE9DhE,EAAAA,KAAAhB,OAAUA,KAAVgB,iBAAAG,EAAAnC,GAAAgC,uCACIoE,eAAAN,EACAO,YAAAJ,EACAK,eAAAJ,EACAK,eAAAJ,IAGI/D,KAAA,SAAAf,GAEIA,EAAAA,iBADJA,oBAAAA,IAKHiB,EAAAA,QAAKhC,QAAM,wBAbhBgC,KAAA,WAxN+BzB,EAAAV,QAAAO,MAAA,qEA8RlCoB,2BAAA,WA9RL,OAAA/B,EAAA8B,UA6OgB,wCAqDZzC,6BAnDY,eACA,oJACA,6BACA,kBACA,YACA,OACA,SACA,OACA,gDACA,QACA,oCACA,wBACA,yKACA,iBACA,+IACA,SACA,SACA,8BACA,+BACA,6CACA,8DACA,iDACA,yKACA,SACA,6DACA,8DACA,iDACA,iHACA,SACA,oDACA,wDACA,iDACA,sGACA,SACA,8CACA,8DACA,iDACA,gGACA,SACA,iLACA,iCACA,aACA,YACA,SACA,UACFoH,KAAK,mBAMfpH,YAAaA","file":"../../../scripts/mvc/library/library-library-view.js","sourcesContent":["import mod_toastr from \"libs/toastr\";\nimport mod_library_model from \"mvc/library/library-model\";\nimport mod_select from \"mvc/ui/ui-select\";\nvar LibraryView = Backbone.View.extend({\n    el: \"#center\",\n\n    model: null,\n\n    options: {},\n\n    events: {\n        \"click .toolbtn_save_permissions\": \"savePermissions\"\n    },\n\n    initialize: function(options) {\n        this.options = _.extend(this.options, options);\n        if (this.options.id) {\n            this.fetchLibrary();\n        }\n    },\n\n    fetchLibrary: function(options) {\n        this.options = _.extend(this.options, options);\n        this.model = new mod_library_model.Library({\n            id: this.options.id\n        });\n        var that = this;\n        this.model.fetch({\n            success: function() {\n                if (that.options.show_permissions) {\n                    that.showPermissions();\n                }\n            },\n            error: function(model, response) {\n                if (typeof response.responseJSON !== \"undefined\") {\n                    mod_toastr.error(`${response.responseJSON.err_msg} Click this to go back.`, \"\", {\n                        onclick: function() {\n                            Galaxy.libraries.library_router.back();\n                        }\n                    });\n                } else {\n                    mod_toastr.error(\"An error occurred. Click this to go back.\", \"\", {\n                        onclick: function() {\n                            Galaxy.libraries.library_router.back();\n                        }\n                    });\n                }\n            }\n        });\n    },\n\n    showPermissions: function(options) {\n        this.options = _.extend(this.options, options);\n        $(\".tooltip\").remove();\n\n        if (this.options.fetched_permissions !== undefined) {\n            if (this.options.fetched_permissions.access_library_role_list.length === 0) {\n                this.model.set({ is_unrestricted: true });\n            } else {\n                this.model.set({ is_unrestricted: false });\n            }\n        }\n        var is_admin = false;\n        if (Galaxy.user) {\n            is_admin = Galaxy.user.isAdmin();\n        }\n        var template = this.templateLibraryPermissions();\n        this.$el.html(template({ library: this.model, is_admin: is_admin }));\n\n        var self = this;\n        $.get(`${Galaxy.root}api/libraries/${self.id}/permissions?scope=current`)\n            .done(fetched_permissions => {\n                self.prepareSelectBoxes({\n                    fetched_permissions: fetched_permissions\n                });\n            })\n            .fail(() => {\n                mod_toastr.error(\"An error occurred while attempting to fetch library permissions.\");\n            });\n\n        $(\"#center [data-toggle]\").tooltip();\n        //hack to show scrollbars\n        $(\"#center\").css(\"overflow\", \"auto\");\n    },\n\n    _serializeRoles: function(role_list) {\n        var selected_roles = [];\n        for (var i = 0; i < role_list.length; i++) {\n            selected_roles.push(`${role_list[i][1]}:${role_list[i][0]}`);\n        }\n        return selected_roles;\n    },\n\n    prepareSelectBoxes: function(options) {\n        this.options = _.extend(this.options, options);\n        var fetched_permissions = this.options.fetched_permissions;\n        var self = this;\n\n        var selected_access_library_roles = this._serializeRoles(fetched_permissions.access_library_role_list);\n        var selected_add_item_roles = this._serializeRoles(fetched_permissions.add_library_item_role_list);\n        var selected_manage_library_roles = this._serializeRoles(fetched_permissions.manage_library_role_list);\n        var selected_modify_library_roles = this._serializeRoles(fetched_permissions.modify_library_role_list);\n\n        self.accessSelectObject = new mod_select.View(\n            this._createSelectOptions(this, \"access_perm\", selected_access_library_roles, true)\n        );\n        self.addSelectObject = new mod_select.View(\n            this._createSelectOptions(this, \"add_perm\", selected_add_item_roles, false)\n        );\n        self.manageSelectObject = new mod_select.View(\n            this._createSelectOptions(this, \"manage_perm\", selected_manage_library_roles, false)\n        );\n        self.modifySelectObject = new mod_select.View(\n            this._createSelectOptions(this, \"modify_perm\", selected_modify_library_roles, false)\n        );\n    },\n\n    _createSelectOptions: function(self, id, init_data, is_library_access) {\n        is_library_access = is_library_access === true ? is_library_access : false;\n        var select_options = {\n            minimumInputLength: 0,\n            css: id,\n            multiple: true,\n            placeholder: \"Click to select a role\",\n            container: self.$el.find(`#${id}`),\n            ajax: {\n                url: `${Galaxy.root}api/libraries/${\n                    self.id\n                }/permissions?scope=available&is_library_access=${is_library_access}`,\n                dataType: \"json\",\n                quietMillis: 100,\n                data: function(term, page) {\n                    // page is the one-based page number tracked by Select2\n                    return {\n                        q: term, //search term\n                        page_limit: 10, // page size\n                        page: page // page number\n                    };\n                },\n                results: function(data, page) {\n                    var more = page * 10 < data.total; // whether or not there are more results available\n                    // notice we return the value of more so Select2 knows if more results can be loaded\n                    return { results: data.roles, more: more };\n                }\n            },\n            formatResult: function roleFormatResult(role) {\n                return `${role.name} type: ${role.type}`;\n            },\n\n            formatSelection: function roleFormatSelection(role) {\n                return role.name;\n            },\n            initSelection: function(element, callback) {\n                // the input tag has a value attribute preloaded that points to a preselected role's id\n                // this function resolves that id attribute to an object that select2 can render\n                // using its formatResult renderer - that way the role name is shown preselected\n                var data = [];\n                $(element.val().split(\",\")).each(function() {\n                    var item = this.split(\":\");\n                    data.push({\n                        id: item[0],\n                        name: item[1]\n                    });\n                });\n                callback(data);\n            },\n            // initialData: init_data.join(','),\n            initialData: init_data,\n            dropdownCssClass: \"bigdrop\" // apply css that makes the dropdown taller\n        };\n\n        return select_options;\n    },\n\n    makeDatasetPrivate: function() {\n        var self = this;\n        $.post(`${Galaxy.root}api/libraries/datasets/${self.id}/permissions?action=make_private`)\n            .done(fetched_permissions => {\n                self.model.set({ is_unrestricted: false });\n                self.showPermissions({\n                    fetched_permissions: fetched_permissions\n                });\n                mod_toastr.success(\"The dataset is now private to you.\");\n            })\n            .fail(() => {\n                mod_toastr.error(\"An error occurred while attempting to make dataset private.\");\n            });\n    },\n\n    removeDatasetRestrictions: function() {\n        var self = this;\n        $.post(`${Galaxy.root}api/libraries/datasets/${self.id}/permissions?action=remove_restrictions`)\n            .done(fetched_permissions => {\n                self.model.set({ is_unrestricted: true });\n                self.showPermissions({\n                    fetched_permissions: fetched_permissions\n                });\n                mod_toastr.success(\"Access to this dataset is now unrestricted.\");\n            })\n            .fail(() => {\n                mod_toastr.error(\"An error occurred while attempting to make dataset unrestricted.\");\n            });\n    },\n\n    _extractIds: function(roles_list) {\n        var ids_list = [];\n        for (var i = roles_list.length - 1; i >= 0; i--) {\n            ids_list.push(roles_list[i].id);\n        }\n        return ids_list;\n    },\n    savePermissions: function(event) {\n        var self = this;\n\n        var access_ids = this._extractIds(this.accessSelectObject.$el.select2(\"data\"));\n        var add_ids = this._extractIds(this.addSelectObject.$el.select2(\"data\"));\n        var manage_ids = this._extractIds(this.manageSelectObject.$el.select2(\"data\"));\n        var modify_ids = this._extractIds(this.modifySelectObject.$el.select2(\"data\"));\n\n        $.post(`${Galaxy.root}api/libraries/${self.id}/permissions?action=set_permissions`, {\n            \"access_ids[]\": access_ids,\n            \"add_ids[]\": add_ids,\n            \"manage_ids[]\": manage_ids,\n            \"modify_ids[]\": modify_ids\n        })\n            .done(fetched_permissions => {\n                //fetch dataset again\n                self.showPermissions({\n                    fetched_permissions: fetched_permissions\n                });\n                mod_toastr.success(\"Permissions saved.\");\n            })\n            .fail(() => {\n                mod_toastr.error(\"An error occurred while attempting to set library permissions.\");\n            });\n    },\n\n    templateLibraryPermissions: function() {\n        return _.template(\n            [\n                '<div class=\"library_style_container\">',\n                '<div id=\"library_toolbar\">',\n                '<a href=\"#\">',\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Go back to the list of Libraries\" class=\"btn btn-default primary-button\" type=\"button\">',\n                '<span class=\"fa fa-list\"/>',\n                \"&nbsp;Libraries\",\n                \"</button>\",\n                \"</a>\",\n                \"</div>\",\n                \"<h1>\",\n                'Library: <%= _.escape(library.get(\"name\")) %>',\n                \"</h1>\",\n                '<div class=\"alert alert-warning\">',\n                \"<% if (is_admin) { %>\",\n                \"You are logged in as an <strong>administrator</strong> therefore you can manage any library on this Galaxy instance. Please make sure you understand the consequences.\",\n                \"<% } else { %>\",\n                \"You can assign any number of roles to any of the following permission types. However please read carefully the implications of such actions.\",\n                \"<% }%>\",\n                \"</div>\",\n                '<div class=\"dataset_table\">',\n                \"<h2>Library permissions</h2>\",\n                \"<h4>Roles that can access the library</h4>\",\n                '<div id=\"access_perm\" class=\"access_perm roles-selection\"/>',\n                '<div class=\"alert alert-info roles-selection\">',\n                \"User with <strong>any</strong> of these roles can access this library. If there are no access roles set on the library it is considered <strong>unrestricted</strong>.\",\n                \"</div>\",\n                \"<h4>Roles that can manage permissions on this library</h4>\",\n                '<div id=\"manage_perm\" class=\"manage_perm roles-selection\"/>',\n                '<div class=\"alert alert-info roles-selection\">',\n                \"User with <strong>any</strong> of these roles can manage permissions on this library (includes giving access).\",\n                \"</div>\",\n                \"<h4>Roles that can add items to this library</h4>\",\n                '<div id=\"add_perm\" class=\"add_perm roles-selection\"/>',\n                '<div class=\"alert alert-info roles-selection\">',\n                \"User with <strong>any</strong> of these roles can add items to this library (folders and datasets).\",\n                \"</div>\",\n                \"<h4>Roles that can modify this library</h4>\",\n                '<div id=\"modify_perm\" class=\"modify_perm roles-selection\"/>',\n                '<div class=\"alert alert-info roles-selection\">',\n                \"User with <strong>any</strong> of these roles can modify this library (name, synopsis, etc.).\",\n                \"</div>\",\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Save modifications made on this page\" class=\"btn btn-default toolbtn_save_permissions primary-button\" type=\"button\">',\n                '<span class=\"fa fa-floppy-o\"/>',\n                \"&nbsp;Save\",\n                \"</button>\",\n                \"</div>\",\n                \"</div>\"\n            ].join(\"\")\n        );\n    }\n});\n\nexport default {\n    LibraryView: LibraryView\n};\n"]}