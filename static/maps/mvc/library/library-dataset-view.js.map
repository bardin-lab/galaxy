{"version":3,"sources":["mvc/library/library-dataset-view.js"],"names":["LibraryDatasetView","Backbone","View","extend","el","model","options","defaults","edit_mode","events","click .toolbtn_modify_dataset","click .toolbtn_cancel_modifications","click .toolbtn-download-dataset","click .toolbtn-import-dataset","click .copy-link-to-clipboard","click .make-private","click .toolbtn_save_modifications","select_genome","select_extension","list_extensions","auto","id","text","description","list_genomes","this","_","fetchExtAndGenomes","fetchDataset","_libraryModel2","default","Item","self","success","show_permissions","showPermissions","show_version","fetchVersion","render","error","response","responseJSON","err_msg","back","_toastr2","Galaxy","libraries","library_router","$","remove","onclick","html","get","tooltip","ldda_id","$el","template","Ldda","ldda","url","urlRoot","fetch","renderVersion","templateVersion","item","enableModification","templateModifyDataset","renderSelectBoxes","data","processDownload","file_ext","method","param","downloadDataset","each","root","ld_ids","inputs","pair","appendTo","info","refreshUserHistoriesList","templateBulkImportInModal","modal","show","closing_events","title","_localization2","body","histories","models","buttons","importIntoHistory","hide","callback","Close","GalaxyHistories","length","warning","window","location","importCurrentIntoHistory","disableButton","new_history_name","val","post","name","done","new_history","history_id","xhr","status","find","enableButton","processImportToHistory","historyItem","HistoryItem","jQuery","getJSON","save","content","source","templateDatasetPermissions","undefined","fetched_permissions","access_dataset_roles","set","is_unrestricted","is_admin","config","is_admin_user","prepareSelectBoxes","css","_serializeRoles","role_list","selected_roles","i","push","replace","selector","initialData","accessSelectObject","_uiSelect2","modifySelectObject","modify_item_roles","manageSelectObject","minimumInputLength","multiple","placeholder","manage_dataset_roles","_generate_select_options","role","select_options","initSelection","formatResult","type","formatSelection","dropdownCssClass","split","dataType","container","q","term","page_limit","join","page","results","more","total","saveModifications","roles","is_changed","ld","new_name","new_info","new_message","new_genome_build","select2","new_ext","dataset_view","patch","href","makeDatasetPrivate","e","preventDefault","lastIndexOf","prompt","removeDatasetRestrictions","fail","_extractIds","ids_list","roles_list","access_ids","modify_ids","savePermissions","event","manage_ids","access_ids[]","manage_ids[]","modify_ids[]","_utils2","datatypes","key","extension","genomes","description_url","sort","a","b","unshift","current_genome","genome_build","templateDataset","value","current_ext"],"mappings":"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ACA,UACA,kDACA,OACA,qCACA,2EACA,QACA,UACA,4CACA,OACA,yCACA,qEACA,QACA,UACA,iDACA,OACA,oCACA,0EACA,QACA,UACA,mCACA,OACA,+BACA,4DACA,QACA,UACA,sCACA,OACA,mCACA,+DACA,QACA,UACA,qCACA,OACA,kCACA,8DACA,QACA,UACA,gCACA,OACA,4BACA,yDACA,QACA,UACA,2CACA,OACA,4BACA,yDACA,QACA,UACA,4CACA,OACA,6BACA,0DACA,QACA,UACA,WAEA,sCACA,8BACA,qBACA,0CACA,SACA,UAEA,sCACA,+BACA,qBACA,0CACA,SACA,UAEA,QACA,qBACA,SACA,SAEA,wCACA,QACA,6BACA,OACA,iEACA,wKACA,WACA,OACA,SACA,UAEA,SAEA,UACFoK,KAAK,MAIfrG,gBAAiB,WACb,OAAOrC,EAAE8B,UAGD,wCACA,6BACA,2EACA,qJACA,+CACA,uBACA,YACA,MACA,SAGA,0BACA,6EACA,4DACA,uCACA,2GACA,iBACA,gFACA,UACA,YACA,QAEA,8HAEA,8BACA,2DACA,OACA,2EACA,6CACA,QACA,oCACA,OACA,iCACA,iDACA,QACA,UACA,wCACA,OACA,oCACA,qDACA,QACA,UACA,qCACA,OACA,4BACA,kDACA,QACA,UACA,yCACA,OACA,2CACA,sDACA,QACA,UACA,uCACA,OACA,mCACA,oDACA,QACA,UACA,+CACA,OACA,kCACA,wEACA,QACA,UACA,kDACA,OACA,qCACA,2EACA,QACA,UACA,4CACA,OACA,yCACA,qEACA,QACA,UACA,iDACA,OACA,oCACA,0EACA,QACA,UACA,mCACA,OACA,+BACA,4DACA,QACA,UACA,sCACA,OACA,2CACA,+DACA,QACA,UACA,qCACA,OACA,iDACA,8DACA,QACA,UACA,gCACA,OACA,4BACA,yDACA,QACA,UACA,WACA,QACA,qBACA,SACA,SAEA,SAEA,UACF4G,KAAK,MAIflG,sBAAuB,WACnB,OAAOxC,EAAE8B,UAGD,wCACA,6BACA,kLACA,oCACA,eACA,YACA,8KACA,uCACA,aACA,YACA,SAGA,0BACA,6EACA,4DACA,uCACA,2GACA,iBACA,gFACA,UACA,YACA,QAEA,8BACA,2DACA,OACA,oHACA,oIACA,QACA,OACA,iCACA,OACA,0EACA,QACA,QACA,OACA,oCACA,OACA,oEACA,QACA,QACA,OACA,4BACA,kDACA,QACA,OACA,2CACA,sDACA,QACA,OACA,mCACA,oDACA,QACA,mBACA,kCACA,wEACA,QACA,qCACA,yDACA,2EACA,iBACA,+BACA,UACA,QACA,OACA,yCACA,qEACA,QACA,OACA,oCACA,0EACA,QACA,OACA,+BACA,yJACA,QACA,OACA,mCACA,+DACA,QACA,OACA,yCACA,8IACA,QAEA,gCACA,OACA,4BACA,yDACA,QACA,UACA,WACA,QACA,qBACA,SACA,SACA,SAEA,UACF4G,KAAK,MAIf1C,2BAA4B,WACxB,OAAOhG,EAAE8B,UAGD,wCACA,6BACA,2EACA,mJACA,qCACA,wBACA,YACA,MACA,SAGA,0BACA,6EACA,4DACA,uCACA,2GACA,iBACA,gFACA,UACA,YACA,QAEA,sDACA,oCACA,wBACA,yKACA,iBACA,+IACA,UACA,SACA,8BACA,uCACA,kDACA,mEACA,8KACA,QACA,uCACA,+LACA,4CACA,yHACA,iBACA,oGACA,UACA,6CACA,mEACA,iDACA,qFACA,mGACA,mGACA,SACA,4DACA,mEACA,iDACA,sLACA,SACA,iLACA,uCACA,aACA,YACA,SAEA,UACF4G,KAAK,MAIflF,0BAA2B,WACvB,OAAOxD,EAAE8B,UAED,QACA,mCACA,mBACA,qHACA,8CACA,mGACA,YACA,YACA,SACA,mCACA,kBACA,4GACA,WACA,SACA,UACF4G,KAAK,mBAMfpK,mBAAoBA","file":"../../../scripts/mvc/library/library-dataset-view.js","sourcesContent":["import _l from \"utils/localization\";\nimport mod_toastr from \"libs/toastr\";\nimport mod_library_model from \"mvc/library/library-model\";\nimport mod_utils from \"utils/utils\";\nimport mod_select from \"mvc/ui/ui-select\";\nvar LibraryDatasetView = Backbone.View.extend({\n    el: \"#center\",\n\n    model: null,\n\n    options: {},\n\n    defaults: {\n        edit_mode: false\n    },\n\n    events: {\n        \"click .toolbtn_modify_dataset\": \"enableModification\",\n        \"click .toolbtn_cancel_modifications\": \"render\",\n        \"click .toolbtn-download-dataset\": \"downloadDataset\",\n        \"click .toolbtn-import-dataset\": \"importIntoHistory\",\n        \"click .copy-link-to-clipboard\": \"copyToClipboard\",\n        \"click .make-private\": \"makeDatasetPrivate\",\n        \"click .remove-restrictions\": \"removeDatasetRestrictions\",\n        \"click .toolbtn_save_permissions\": \"savePermissions\",\n        \"click .toolbtn_save_modifications\": \"saveModifications\"\n    },\n\n    // genome select\n    select_genome: null,\n\n    // extension select\n    select_extension: null,\n\n    // extension types\n    list_extensions: [],\n\n    // datatype placeholder for extension auto-detection\n    auto: {\n        id: \"auto\",\n        text: \"Auto-detect\",\n        description:\n            \"This system will try to detect the file type automatically.\" +\n            \" If your file is not detected properly as one of the known formats,\" +\n            \" it most likely means that it has some format problems (e.g., different\" +\n            \" number of columns on different rows). You can still coerce the system\" +\n            \" to set your data to the format you think it should be.\" +\n            \" You can also upload compressed files, which will automatically be decompressed.\"\n    },\n\n    // genomes\n    list_genomes: [],\n\n    initialize: function(options) {\n        this.options = _.extend(this.options, options);\n        this.fetchExtAndGenomes();\n        if (this.options.id) {\n            this.fetchDataset();\n        }\n    },\n\n    fetchDataset: function(options) {\n        this.options = _.extend(this.options, options);\n        this.model = new mod_library_model.Item({\n            id: this.options.id\n        });\n        var self = this;\n        this.model.fetch({\n            success: function() {\n                if (self.options.show_permissions) {\n                    self.showPermissions();\n                } else if (self.options.show_version) {\n                    self.fetchVersion();\n                } else {\n                    self.render();\n                }\n            },\n            error: function(model, response) {\n                if (typeof response.responseJSON !== \"undefined\") {\n                    mod_toastr.error(`${response.responseJSON.err_msg} Click this to go back.`, \"\", {\n                        onclick: function() {\n                            Galaxy.libraries.library_router.back();\n                        }\n                    });\n                } else {\n                    mod_toastr.error(\"An error occurred. Click this to go back.\", \"\", {\n                        onclick: function() {\n                            Galaxy.libraries.library_router.back();\n                        }\n                    });\n                }\n            }\n        });\n    },\n\n    render: function(options) {\n        this.options = _.extend(this.options, options);\n        $(\".tooltip\").remove();\n        var template = this.templateDataset();\n        this.$el.html(template({ item: this.model }));\n        $(\".peek\").html(this.model.get(\"peek\"));\n        $(\"#center [data-toggle]\").tooltip();\n    },\n\n    fetchVersion: function(options) {\n        this.options = _.extend(this.options, options);\n        var self = this;\n        if (!this.options.ldda_id) {\n            this.render();\n            mod_toastr.error(\"Library dataset version requested but no id provided.\");\n        } else {\n            this.ldda = new mod_library_model.Ldda({\n                id: this.options.ldda_id\n            });\n            this.ldda.url = `${this.ldda.urlRoot + this.model.id}/versions/${this.ldda.id}`;\n            this.ldda.fetch({\n                success: function() {\n                    self.renderVersion();\n                },\n                error: function(model, response) {\n                    if (typeof response.responseJSON !== \"undefined\") {\n                        mod_toastr.error(response.responseJSON.err_msg);\n                    } else {\n                        mod_toastr.error(\"An error occurred.\");\n                    }\n                }\n            });\n        }\n    },\n\n    renderVersion: function() {\n        $(\".tooltip\").remove();\n        var template = this.templateVersion();\n        this.$el.html(template({ item: this.model, ldda: this.ldda }));\n        $(\".peek\").html(this.ldda.get(\"peek\"));\n    },\n\n    enableModification: function() {\n        $(\".tooltip\").remove();\n        var template = this.templateModifyDataset();\n        this.$el.html(template({ item: this.model }));\n        this.renderSelectBoxes({\n            genome_build: this.model.get(\"genome_build\"),\n            file_ext: this.model.get(\"file_ext\")\n        });\n        $(\".peek\").html(this.model.get(\"peek\"));\n        $(\"#center [data-toggle]\").tooltip();\n    },\n\n    downloadDataset: function() {\n        var url = `${Galaxy.root}api/libraries/datasets/download/uncompressed`;\n        var data = { ld_ids: this.id };\n        this.processDownload(url, data);\n    },\n\n    processDownload: function(url, data, method) {\n        //url and data options required\n        if (url && data) {\n            //data can be string of parameters or array/object\n            data = typeof data == \"string\" ? data : $.param(data);\n            //split params into form inputs\n            var inputs = \"\";\n            $.each(data.split(\"&\"), function() {\n                var pair = this.split(\"=\");\n                inputs += `<input type=\"hidden\" name=\"${pair[0]}\" value=\"${pair[1]}\" />`;\n            });\n            //send request\n            $(`<form action=\"${url}\" method=\"${method || \"post\"}\">${inputs}</form>`)\n                .appendTo(\"body\")\n                .submit()\n                .remove();\n\n            mod_toastr.info(\"Your download will begin soon.\");\n        }\n    },\n\n    importIntoHistory: function() {\n        this.refreshUserHistoriesList(self => {\n            var template = self.templateBulkImportInModal();\n            self.modal = Galaxy.modal;\n            self.modal.show({\n                closing_events: true,\n                title: _l(\"Import into History\"),\n                body: template({ histories: self.histories.models }),\n                buttons: {\n                    Import: function() {\n                        self.importCurrentIntoHistory();\n                    },\n                    Close: function() {\n                        Galaxy.modal.hide();\n                    }\n                }\n            });\n        });\n    },\n\n    refreshUserHistoriesList: function(callback) {\n        var self = this;\n        this.histories = new mod_library_model.GalaxyHistories();\n        this.histories.fetch({\n            success: function(histories) {\n                if (histories.length === 0) {\n                    mod_toastr.warning(\"You have to create history first. Click this to do so.\", \"\", {\n                        onclick: function() {\n                            window.location = Galaxy.root;\n                        }\n                    });\n                } else {\n                    callback(self);\n                }\n            },\n            error: function(model, response) {\n                if (typeof response.responseJSON !== \"undefined\") {\n                    mod_toastr.error(response.responseJSON.err_msg);\n                } else {\n                    mod_toastr.error(\"An error occurred.\");\n                }\n            }\n        });\n    },\n\n    importCurrentIntoHistory: function() {\n        this.modal.disableButton(\"Import\");\n        var new_history_name = this.modal.$(\"input[name=history_name]\").val();\n        var self = this;\n        if (new_history_name !== \"\") {\n            $.post(`${Galaxy.root}api/histories`, {\n                name: new_history_name\n            })\n                .done(new_history => {\n                    self.processImportToHistory(new_history.id);\n                })\n                .fail((xhr, status, error) => {\n                    mod_toastr.error(\"An error occurred.\");\n                })\n                .always(() => {\n                    self.modal.enableButton(\"Import\");\n                });\n        } else {\n            var history_id = $(this.modal.$el)\n                .find(\"select[name=dataset_import_single] option:selected\")\n                .val();\n            this.processImportToHistory(history_id);\n            this.modal.enableButton(\"Import\");\n        }\n    },\n\n    processImportToHistory: function(history_id) {\n        var historyItem = new mod_library_model.HistoryItem();\n        historyItem.url = `${historyItem.urlRoot + history_id}/contents`;\n        // set the used history as current so user will see the last one\n        // that he imported into in the history panel on the 'analysis' page\n        jQuery.getJSON(`${Galaxy.root}history/set_as_current?id=${history_id}`);\n        // save the dataset into selected history\n        historyItem.save(\n            { content: this.id, source: \"library\" },\n            {\n                success: function() {\n                    Galaxy.modal.hide();\n                    mod_toastr.success(\"Dataset imported. Click this to start analyzing it.\", \"\", {\n                        onclick: function() {\n                            window.location = Galaxy.root;\n                        }\n                    });\n                },\n                error: function(model, response) {\n                    if (typeof response.responseJSON !== \"undefined\") {\n                        mod_toastr.error(`Dataset not imported. ${response.responseJSON.err_msg}`);\n                    } else {\n                        mod_toastr.error(\"An error occured. Dataset not imported. Please try again.\");\n                    }\n                }\n            }\n        );\n    },\n\n    showPermissions: function(options) {\n        var template = this.templateDatasetPermissions();\n        var self = this;\n        this.options = _.extend(this.options, options);\n        $(\".tooltip\").remove();\n        if (this.options.fetched_permissions !== undefined) {\n            if (this.options.fetched_permissions.access_dataset_roles.length === 0) {\n                this.model.set({ is_unrestricted: true });\n            } else {\n                this.model.set({ is_unrestricted: false });\n            }\n        }\n        this.$el.html(\n            template({\n                item: this.model,\n                is_admin: Galaxy.config.is_admin_user\n            })\n        );\n        $.get(`${Galaxy.root}api/libraries/datasets/${self.id}/permissions?scope=current`)\n            .done(fetched_permissions => {\n                self.prepareSelectBoxes({\n                    fetched_permissions: fetched_permissions,\n                    is_admin: Galaxy.config.is_admin_user\n                });\n            })\n            .fail(() => {\n                mod_toastr.error(\"An error occurred while attempting to fetch dataset permissions.\");\n            });\n        $(\"#center [data-toggle]\").tooltip();\n        $(\"#center\").css(\"overflow\", \"auto\");\n    },\n\n    _serializeRoles: function(role_list) {\n        var selected_roles = [];\n        for (var i = 0; i < role_list.length; i++) {\n            // Replace the : and , in role's name since these are select2 separators for initialData\n            selected_roles.push(`${role_list[i][1]}:${role_list[i][0].replace(\":\", \" \").replace(\",\", \" &\")}`);\n        }\n        return selected_roles;\n    },\n\n    prepareSelectBoxes: function(options) {\n        this.options = _.extend(this.options, options);\n        this.accessSelectObject = new mod_select.View(\n            this._generate_select_options({\n                selector: \"access_perm\",\n                initialData: this._serializeRoles(this.options.fetched_permissions.access_dataset_roles)\n            })\n        );\n        this.modifySelectObject = new mod_select.View(\n            this._generate_select_options({\n                selector: \"modify_perm\",\n                initialData: this._serializeRoles(this.options.fetched_permissions.modify_item_roles)\n            })\n        );\n        this.manageSelectObject = new mod_select.View(\n            this._generate_select_options({\n                selector: \"manage_perm\",\n                initialData: this._serializeRoles(this.options.fetched_permissions.manage_dataset_roles)\n            })\n        );\n    },\n\n    _generate_select_options: function(options) {\n        var select_options = {\n            minimumInputLength: 0,\n            multiple: true,\n            placeholder: \"Click to select a role\",\n            formatResult: function roleFormatResult(role) {\n                return `${role.name} type: ${role.type}`;\n            },\n            formatSelection: function roleFormatSelection(role) {\n                return role.name;\n            },\n            initSelection: function(element, callback) {\n                // the input tag has a value attribute preloaded that points to a preselected role's id\n                // this function resolves that id attribute to an object that select2 can render\n                // using its formatResult renderer - that way the role name is shown preselected\n                var data = [];\n                $(element.val().split(\",\")).each(function() {\n                    var item = this.split(\":\");\n                    data.push({\n                        id: item[0],\n                        name: item[1]\n                    });\n                });\n                callback(data);\n            },\n            dropdownCssClass: \"bigdrop\" // apply css that makes the dropdown taller\n        };\n        select_options.container = this.$el.find(`#${options.selector}`);\n        select_options.css = options.selector;\n        select_options.initialData = options.initialData.join(\",\");\n        select_options.ajax = {\n            url: `${Galaxy.root}api/libraries/datasets/${this.id}/permissions?scope=available`,\n            dataType: \"json\",\n            quietMillis: 100,\n            data: function(term, page) {\n                // page is the one-based page number tracked by Select2\n                return {\n                    q: term, //search term\n                    page_limit: 10, // page size, should be same as used in 'more' variable below\n                    page: page // page number\n                };\n            },\n            results: function(data, page) {\n                var more = page * 10 < data.total; // whether or not there are more results available\n                // notice we return the value of more so Select2 knows if more results can be loaded\n                return { results: data.roles, more: more };\n            }\n        };\n        return select_options;\n    },\n\n    /**\n     * Save the changes made to the library dataset.\n     */\n    saveModifications: function(options) {\n        var is_changed = false;\n        var ld = this.model;\n        var new_name = this.$el.find(\".input_dataset_name\").val();\n        if (typeof new_name !== \"undefined\" && new_name !== ld.get(\"name\")) {\n            if (new_name.length > 0) {\n                ld.set(\"name\", new_name);\n                is_changed = true;\n            } else {\n                mod_toastr.warning(\"Library dataset name has to be at least 1 character long.\");\n                return;\n            }\n        }\n        var new_info = this.$el.find(\".input_dataset_misc_info\").val();\n        if (typeof new_info !== \"undefined\" && new_info !== ld.get(\"misc_info\")) {\n            ld.set(\"misc_info\", new_info);\n            is_changed = true;\n        }\n        var new_message = this.$el.find(\".input_dataset_message\").val();\n        if (typeof new_message !== \"undefined\" && new_message !== ld.get(\"message\")) {\n            ld.set(\"message\", new_message);\n            is_changed = true;\n        }\n        var new_genome_build = this.select_genome.$el.select2(\"data\").id;\n        if (typeof new_genome_build !== \"undefined\" && new_genome_build !== ld.get(\"genome_build\")) {\n            ld.set(\"genome_build\", new_genome_build);\n            is_changed = true;\n        }\n        var new_ext = this.select_extension.$el.select2(\"data\").id;\n        if (typeof new_ext !== \"undefined\" && new_ext !== ld.get(\"file_ext\")) {\n            ld.set(\"file_ext\", new_ext);\n            is_changed = true;\n        }\n        var dataset_view = this;\n        if (is_changed) {\n            ld.save(null, {\n                patch: true,\n                success: function(ld) {\n                    dataset_view.render();\n                    mod_toastr.success(\"Changes to library dataset saved.\");\n                },\n                error: function(model, response) {\n                    if (typeof response.responseJSON !== \"undefined\") {\n                        mod_toastr.error(response.responseJSON.err_msg);\n                    } else {\n                        mod_toastr.error(\"An error occured while attempting to update the library dataset.\");\n                    }\n                }\n            });\n        } else {\n            dataset_view.render();\n            mod_toastr.info(\"Nothing has changed.\");\n        }\n    },\n\n    copyToClipboard: function(e) {\n        e.preventDefault();\n        var href = Backbone.history.location.href;\n        if (href.lastIndexOf(\"/permissions\") !== -1) {\n            href = href.substr(0, href.lastIndexOf(\"/permissions\"));\n        }\n        window.prompt(\"Copy to clipboard: Ctrl+C, Enter\", href);\n    },\n\n    makeDatasetPrivate: function() {\n        var self = this;\n        $.post(`${Galaxy.root}api/libraries/datasets/${self.id}/permissions?action=make_private`)\n            .done(fetched_permissions => {\n                self.model.set({ is_unrestricted: false });\n                self.showPermissions({\n                    fetched_permissions: fetched_permissions\n                });\n                mod_toastr.success(\"The dataset is now private to you.\");\n            })\n            .fail(() => {\n                mod_toastr.error(\"An error occurred while attempting to make dataset private.\");\n            });\n    },\n\n    removeDatasetRestrictions: function() {\n        var self = this;\n        $.post(`${Galaxy.root}api/libraries/datasets/${self.id}/permissions?action=remove_restrictions`)\n            .done(fetched_permissions => {\n                self.model.set({ is_unrestricted: true });\n                self.showPermissions({\n                    fetched_permissions: fetched_permissions\n                });\n                mod_toastr.success(\"Access to this dataset is now unrestricted.\");\n            })\n            .fail(() => {\n                mod_toastr.error(\"An error occurred while attempting to make dataset unrestricted.\");\n            });\n    },\n\n    /**\n     * Extract the role ids from Select2 elements's 'data'\n     */\n    _extractIds: function(roles_list) {\n        var ids_list = [];\n        for (var i = roles_list.length - 1; i >= 0; i--) {\n            ids_list.push(roles_list[i].id);\n        }\n        return ids_list;\n    },\n\n    /**\n     * Save the permissions for roles entered in the select boxes.\n     */\n    savePermissions: function(event) {\n        var self = this;\n        var access_ids = this._extractIds(this.accessSelectObject.$el.select2(\"data\"));\n        var manage_ids = this._extractIds(this.manageSelectObject.$el.select2(\"data\"));\n        var modify_ids = this._extractIds(this.modifySelectObject.$el.select2(\"data\"));\n        $.post(`${Galaxy.root}api/libraries/datasets/${self.id}/permissions?action=set_permissions`, {\n            \"access_ids[]\": access_ids,\n            \"manage_ids[]\": manage_ids,\n            \"modify_ids[]\": modify_ids\n        })\n            .done(fetched_permissions => {\n                self.showPermissions({\n                    fetched_permissions: fetched_permissions\n                });\n                mod_toastr.success(\"Permissions saved.\");\n            })\n            .fail(() => {\n                mod_toastr.error(\"An error occurred while attempting to set dataset permissions.\");\n            });\n    },\n\n    /**\n     * If needed request all extensions and/or genomes from Galaxy\n     * and save them in sorted arrays.\n     */\n    fetchExtAndGenomes: function() {\n        var self = this;\n        if (this.list_genomes.length == 0) {\n            mod_utils.get({\n                url: `${Galaxy.root}api/datatypes?extension_only=False`,\n                success: function(datatypes) {\n                    for (var key in datatypes) {\n                        self.list_extensions.push({\n                            id: datatypes[key].extension,\n                            text: datatypes[key].extension,\n                            description: datatypes[key].description,\n                            description_url: datatypes[key].description_url\n                        });\n                    }\n                    self.list_extensions.sort((a, b) => (a.id > b.id ? 1 : a.id < b.id ? -1 : 0));\n                    self.list_extensions.unshift(self.auto);\n                }\n            });\n        }\n        if (this.list_extensions.length == 0) {\n            mod_utils.get({\n                url: `${Galaxy.root}api/genomes`,\n                success: function(genomes) {\n                    for (var key in genomes) {\n                        self.list_genomes.push({\n                            id: genomes[key][1],\n                            text: genomes[key][0]\n                        });\n                    }\n                    self.list_genomes.sort((a, b) => (a.id > b.id ? 1 : a.id < b.id ? -1 : 0));\n                }\n            });\n        }\n    },\n\n    renderSelectBoxes: function(options) {\n        // This won't work properly unlesss we already have the data fetched.\n        // See this.fetchExtAndGenomes()\n        // TODO switch to common resources:\n        // https://trello.com/c/dIUE9YPl/1933-ui-common-resources-and-data-into-galaxy-object\n        var self = this;\n        var current_genome = \"?\";\n        var current_ext = \"auto\";\n        if (typeof options !== \"undefined\") {\n            if (typeof options.genome_build !== \"undefined\") {\n                current_genome = options.genome_build;\n            }\n            if (typeof options.file_ext !== \"undefined\") {\n                current_ext = options.file_ext;\n            }\n        }\n        this.select_genome = new mod_select.View({\n            css: \"dataset-genome-select\",\n            data: self.list_genomes,\n            container: self.$el.find(\"#dataset_genome_select\"),\n            value: current_genome\n        });\n        this.select_extension = new mod_select.View({\n            css: \"dataset-extension-select\",\n            data: self.list_extensions,\n            container: self.$el.find(\"#dataset_extension_select\"),\n            value: current_ext\n        });\n    },\n\n    templateDataset: function() {\n        return _.template(\n            [\n                // CONTAINER START\n                '<div class=\"library_style_container\">',\n                '<div id=\"library_toolbar\">',\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Download dataset\" class=\"btn btn-default toolbtn-download-dataset primary-button toolbar-item\" type=\"button\">',\n                '<span class=\"fa fa-download\"></span>',\n                \"&nbsp;Download\",\n                \"</button>\",\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Import dataset into history\" class=\"btn btn-default toolbtn-import-dataset primary-button toolbar-item\" type=\"button\">',\n                '<span class=\"fa fa-book\"></span>',\n                \"&nbsp;to History\",\n                \"</button>\",\n                '<% if (item.get(\"can_user_modify\")) { %>',\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Modify library item\" class=\"btn btn-default toolbtn_modify_dataset primary-button toolbar-item\" type=\"button\">',\n                '<span class=\"fa fa-pencil\"></span>',\n                \"&nbsp;Modify\",\n                \"</button>\",\n                \"<% } %>\",\n                '<% if (item.get(\"can_user_manage\")) { %>',\n                '<a href=\"#folders/<%- item.get(\"folder_id\") %>/datasets/<%- item.id %>/permissions\">',\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Manage permissions\" class=\"btn btn-default toolbtn_change_permissions primary-button toolbar-item\" type=\"button\">',\n                '<span class=\"fa fa-group\"></span>',\n                \"&nbsp;Permissions\",\n                \"</button>\",\n                \"</a>\",\n                \"<% } %>\",\n                \"</div>\",\n\n                // BREADCRUMBS\n                '<ol class=\"breadcrumb\">',\n                '<li><a title=\"Return to the list of libraries\" href=\"#\">Libraries</a></li>',\n                '<% _.each(item.get(\"full_path\"), function(path_item) { %>',\n                \"<% if (path_item[0] != item.id) { %>\",\n                '<li><a title=\"Return to this folder\" href=\"#/folders/<%- path_item[0] %>\"><%- path_item[1] %></a> </li> ',\n                \"<% } else { %>\",\n                '<li class=\"active\"><span title=\"You are here\"><%- path_item[1] %></span></li>',\n                \"<% } %>\",\n                \"<% }); %>\",\n                \"</ol>\",\n\n                '<% if (item.get(\"is_unrestricted\")) { %>',\n                \"<div>\",\n                'This dataset is unrestricted so everybody with the link can access it. Just share <span class=\"copy-link-to-clipboard\"><a href=\"\"a>this page</a></span>.',\n                \"</div>\",\n                \"<% } %>\",\n\n                // TABLE START\n                '<div class=\"dataset_table\">',\n                '<table class=\"grid table table-striped table-condensed\">',\n                \"<tr>\",\n                '<th class=\"dataset-first-column\" scope=\"row\" id=\"id_row\" data-id=\"<%= _.escape(item.get(\"ldda_id\")) %>\">Name</th>',\n                '<td><%= _.escape(item.get(\"name\")) %></td>',\n                \"</tr>\",\n                '<% if (item.get(\"file_ext\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Data type</th>',\n                '<td><%= _.escape(item.get(\"file_ext\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (item.get(\"genome_build\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Genome build</th>',\n                '<td><%= _.escape(item.get(\"genome_build\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (item.get(\"file_size\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Size</th>',\n                '<td><%= _.escape(item.get(\"file_size\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (item.get(\"date_uploaded\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Date uploaded (UTC)</th>',\n                '<td><%= _.escape(item.get(\"date_uploaded\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (item.get(\"uploaded_by\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Uploaded by</th>',\n                '<td><%= _.escape(item.get(\"uploaded_by\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (item.get(\"metadata_data_lines\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Data Lines</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"metadata_data_lines\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (item.get(\"metadata_comment_lines\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Comment Lines</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"metadata_comment_lines\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (item.get(\"metadata_columns\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Number of Columns</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"metadata_columns\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (item.get(\"metadata_column_types\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Column Types</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"metadata_column_types\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (item.get(\"message\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Message</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"message\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (item.get(\"misc_blurb\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Misc. blurb</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"misc_blurb\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (item.get(\"misc_info\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Misc. info</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"misc_info\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (item.get(\"tags\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Tags</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"tags\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if ( item.get(\"uuid\") !== \"ok\" ) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">UUID</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"uuid\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if ( item.get(\"state\") !== \"ok\" ) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">State</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"state\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                \"</table>\",\n\n                '<% if (item.get(\"job_stderr\")) { %>',\n                \"<h4>Job Standard Error</h4>\",\n                '<pre class=\"code\">',\n                '<%= _.escape(item.get(\"job_stderr\")) %>',\n                \"</pre>\",\n                \"<% } %>\",\n\n                '<% if (item.get(\"job_stdout\")) { %>',\n                \"<h4>Job Standard Output</h4>\",\n                '<pre class=\"code\">',\n                '<%= _.escape(item.get(\"job_stdout\")) %>',\n                \"</pre>\",\n                \"<% } %>\",\n\n                \"<div>\",\n                '<pre class=\"peek\">',\n                \"</pre>\",\n                \"</div>\",\n\n                '<% if (item.get(\"has_versions\")) { %>',\n                \"<div>\",\n                \"<h3>Expired versions:</h3>\",\n                \"<ul>\",\n                '<% _.each(item.get(\"expired_versions\"), function(version) { %>',\n                '<li><a title=\"See details of this version\" href=\"#folders/<%- item.get(\"folder_id\") %>/datasets/<%- item.id %>/versions/<%- version[0] %>\"><%- version[1] %></a></li>',\n                \"<% }) %>\",\n                \"<ul>\",\n                \"</div>\",\n                \"<% } %>\",\n                // TABLE END\n                \"</div>\",\n                // CONTAINER END\n                \"</div>\"\n            ].join(\"\")\n        );\n    },\n\n    templateVersion: function() {\n        return _.template(\n            [\n                // CONTAINER START\n                '<div class=\"library_style_container\">',\n                '<div id=\"library_toolbar\">',\n                '<a href=\"#folders/<%- item.get(\"folder_id\") %>/datasets/<%- item.id %>\">',\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Go to latest dataset\" class=\"btn btn-default primary-button toolbar-item\" type=\"button\">',\n                '<span class=\"fa fa-caret-left fa-lg\"></span>',\n                \"&nbsp;Latest dataset\",\n                \"</button>\",\n                \"<a>\",\n                \"</div>\",\n\n                // BREADCRUMBS\n                '<ol class=\"breadcrumb\">',\n                '<li><a title=\"Return to the list of libraries\" href=\"#\">Libraries</a></li>',\n                '<% _.each(item.get(\"full_path\"), function(path_item) { %>',\n                \"<% if (path_item[0] != item.id) { %>\",\n                '<li><a title=\"Return to this folder\" href=\"#/folders/<%- path_item[0] %>\"><%- path_item[1] %></a> </li> ',\n                \"<% } else { %>\",\n                '<li class=\"active\"><span title=\"You are here\"><%- path_item[1] %></span></li>',\n                \"<% } %>\",\n                \"<% }); %>\",\n                \"</ol>\",\n\n                '<div class=\"alert alert-warning\">This is an expired version of the library dataset: <%= _.escape(item.get(\"name\")) %></div>',\n                // DATASET START\n                '<div class=\"dataset_table\">',\n                '<table class=\"grid table table-striped table-condensed\">',\n                \"<tr>\",\n                '<th scope=\"row\" id=\"id_row\" data-id=\"<%= _.escape(ldda.id) %>\">Name</th>',\n                '<td><%= _.escape(ldda.get(\"name\")) %></td>',\n                \"</tr>\",\n                '<% if (ldda.get(\"file_ext\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Data type</th>',\n                '<td><%= _.escape(ldda.get(\"file_ext\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (ldda.get(\"genome_build\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Genome build</th>',\n                '<td><%= _.escape(ldda.get(\"genome_build\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (ldda.get(\"file_size\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Size</th>',\n                '<td><%= _.escape(ldda.get(\"file_size\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (ldda.get(\"date_uploaded\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Date uploaded (UTC)</th>',\n                '<td><%= _.escape(ldda.get(\"date_uploaded\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (ldda.get(\"uploaded_by\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Uploaded by</th>',\n                '<td><%= _.escape(ldda.get(\"uploaded_by\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (ldda.get(\"metadata_data_lines\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Data Lines</th>',\n                '<td scope=\"row\"><%= _.escape(ldda.get(\"metadata_data_lines\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (ldda.get(\"metadata_comment_lines\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Comment Lines</th>',\n                '<td scope=\"row\"><%= _.escape(ldda.get(\"metadata_comment_lines\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (ldda.get(\"metadata_columns\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Number of Columns</th>',\n                '<td scope=\"row\"><%= _.escape(ldda.get(\"metadata_columns\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (ldda.get(\"metadata_column_types\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Column Types</th>',\n                '<td scope=\"row\"><%= _.escape(ldda.get(\"metadata_column_types\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (ldda.get(\"message\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Message</th>',\n                '<td scope=\"row\"><%= _.escape(ldda.get(\"message\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (ldda.get(\"misc_blurb\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Miscellaneous blurb</th>',\n                '<td scope=\"row\"><%= _.escape(ldda.get(\"misc_blurb\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (ldda.get(\"misc_info\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Miscellaneous information</th>',\n                '<td scope=\"row\"><%= _.escape(ldda.get(\"misc_info\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                '<% if (item.get(\"tags\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Tags</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"tags\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                \"</table>\",\n                \"<div>\",\n                '<pre class=\"peek\">',\n                \"</pre>\",\n                \"</div>\",\n                // DATASET END\n                \"</div>\",\n                // CONTAINER END\n                \"</div>\"\n            ].join(\"\")\n        );\n    },\n\n    templateModifyDataset: function() {\n        return _.template(\n            [\n                // CONTAINER START\n                '<div class=\"library_style_container\">',\n                '<div id=\"library_toolbar\">',\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Cancel modifications\" class=\"btn btn-default toolbtn_cancel_modifications primary-button toolbar-item\" type=\"button\">',\n                '<span class=\"fa fa-times\"></span>',\n                \"&nbsp;Cancel\",\n                \"</button>\",\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Save modifications\" class=\"btn btn-default toolbtn_save_modifications primary-button toolbar-item\" type=\"button\">',\n                '<span class=\"fa fa-floppy-o\"></span>',\n                \"&nbsp;Save\",\n                \"</button>\",\n                \"</div>\",\n\n                // BREADCRUMBS\n                '<ol class=\"breadcrumb\">',\n                '<li><a title=\"Return to the list of libraries\" href=\"#\">Libraries</a></li>',\n                '<% _.each(item.get(\"full_path\"), function(path_item) { %>',\n                \"<% if (path_item[0] != item.id) { %>\",\n                '<li><a title=\"Return to this folder\" href=\"#/folders/<%- path_item[0] %>\"><%- path_item[1] %></a> </li> ',\n                \"<% } else { %>\",\n                '<li class=\"active\"><span title=\"You are here\"><%- path_item[1] %></span></li>',\n                \"<% } %>\",\n                \"<% }); %>\",\n                \"</ol>\",\n\n                '<div class=\"dataset_table\">',\n                '<table class=\"grid table table-striped table-condensed\">',\n                \"<tr>\",\n                '<th class=\"dataset-first-column\" scope=\"row\" id=\"id_row\" data-id=\"<%= _.escape(item.get(\"ldda_id\")) %>\">Name</th>',\n                '<td><input class=\"input_dataset_name form-control\" type=\"text\" placeholder=\"name\" value=\"<%= _.escape(item.get(\"name\")) %>\"></td>',\n                \"</tr>\",\n                \"<tr>\",\n                '<th scope=\"row\">Data type</th>',\n                \"<td>\",\n                '<span id=\"dataset_extension_select\" class=\"dataset-extension-select\" />',\n                \"</td>\",\n                \"</tr>\",\n                \"<tr>\",\n                '<th scope=\"row\">Genome build</th>',\n                \"<td>\",\n                '<span id=\"dataset_genome_select\" class=\"dataset-genome-select\" />',\n                \"</td>\",\n                \"</tr>\",\n                \"<tr>\",\n                '<th scope=\"row\">Size</th>',\n                '<td><%= _.escape(item.get(\"file_size\")) %></td>',\n                \"</tr>\",\n                \"<tr>\",\n                '<th scope=\"row\">Date uploaded (UTC)</th>',\n                '<td><%= _.escape(item.get(\"date_uploaded\")) %></td>',\n                \"</tr>\",\n                \"<tr>\",\n                '<th scope=\"row\">Uploaded by</th>',\n                '<td><%= _.escape(item.get(\"uploaded_by\")) %></td>',\n                \"</tr>\",\n                '<tr scope=\"row\">',\n                '<th scope=\"row\">Data Lines</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"metadata_data_lines\")) %></td>',\n                \"</tr>\",\n                '<th scope=\"row\">Comment Lines</th>',\n                '<% if (item.get(\"metadata_comment_lines\") === \"\") { %>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"metadata_comment_lines\")) %></td>',\n                \"<% } else { %>\",\n                '<td scope=\"row\">unknown</td>',\n                \"<% } %>\",\n                \"</tr>\",\n                \"<tr>\",\n                '<th scope=\"row\">Number of Columns</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"metadata_columns\")) %></td>',\n                \"</tr>\",\n                \"<tr>\",\n                '<th scope=\"row\">Column Types</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"metadata_column_types\")) %></td>',\n                \"</tr>\",\n                \"<tr>\",\n                '<th scope=\"row\">Message</th>',\n                '<td scope=\"row\"><input class=\"input_dataset_message form-control\" type=\"text\" placeholder=\"message\" value=\"<%= _.escape(item.get(\"message\")) %>\"></td>',\n                \"</tr>\",\n                \"<tr>\",\n                '<th scope=\"row\">Misc. blurb</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"misc_blurb\")) %></td>',\n                \"</tr>\",\n                \"<tr>\",\n                '<th scope=\"row\">Misc. information</th>',\n                '<td><input class=\"input_dataset_misc_info form-control\" type=\"text\" placeholder=\"info\" value=\"<%= _.escape(item.get(\"misc_info\")) %>\"></td>',\n                \"</tr>\",\n                //TODO: add functionality to modify tags here\n                '<% if (item.get(\"tags\")) { %>',\n                \"<tr>\",\n                '<th scope=\"row\">Tags</th>',\n                '<td scope=\"row\"><%= _.escape(item.get(\"tags\")) %></td>',\n                \"</tr>\",\n                \"<% } %>\",\n                \"</table>\",\n                \"<div>\",\n                '<pre class=\"peek\">',\n                \"</pre>\",\n                \"</div>\",\n                \"</div>\",\n                // CONTAINER END\n                \"</div>\"\n            ].join(\"\")\n        );\n    },\n\n    templateDatasetPermissions: function() {\n        return _.template(\n            [\n                // CONTAINER START\n                '<div class=\"library_style_container\">',\n                '<div id=\"library_toolbar\">',\n                '<a href=\"#folders/<%- item.get(\"folder_id\") %>/datasets/<%- item.id %>\">',\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Go back to dataset\" class=\"btn btn-default primary-button toolbar-item\" type=\"button\">',\n                '<span class=\"fa fa-file-o\"></span>',\n                \"&nbsp;Dataset Details\",\n                \"</button>\",\n                \"<a>\",\n                \"</div>\",\n\n                // BREADCRUMBS\n                '<ol class=\"breadcrumb\">',\n                '<li><a title=\"Return to the list of libraries\" href=\"#\">Libraries</a></li>',\n                '<% _.each(item.get(\"full_path\"), function(path_item) { %>',\n                \"<% if (path_item[0] != item.id) { %>\",\n                '<li><a title=\"Return to this folder\" href=\"#/folders/<%- path_item[0] %>\"><%- path_item[1] %></a> </li> ',\n                \"<% } else { %>\",\n                '<li class=\"active\"><span title=\"You are here\"><%- path_item[1] %></span></li>',\n                \"<% } %>\",\n                \"<% }); %>\",\n                \"</ol>\",\n\n                '<h1>Dataset: <%= _.escape(item.get(\"name\")) %></h1>',\n                '<div class=\"alert alert-warning\">',\n                \"<% if (is_admin) { %>\",\n                \"You are logged in as an <strong>administrator</strong> therefore you can manage any dataset on this Galaxy instance. Please make sure you understand the consequences.\",\n                \"<% } else { %>\",\n                \"You can assign any number of roles to any of the following permission types. However please read carefully the implications of such actions.\",\n                \"<% } %>\",\n                \"</div>\",\n                '<div class=\"dataset_table\">',\n                \"<h2>Library-related permissions</h2>\",\n                \"<h4>Roles that can modify the library item</h4>\",\n                '<div id=\"modify_perm\" class=\"modify_perm roles-selection\"></div>',\n                '<div class=\"alert alert-info roles-selection\">User with <strong>any</strong> of these roles can modify name, metadata, and other information about this library item.</div>',\n                \"<hr/>\",\n                \"<h2>Dataset-related permissions</h2>\",\n                '<div class=\"alert alert-warning\">Changes made below will affect <strong>every</strong> library item that was created from this dataset and also every history this dataset is part of.</div>',\n                '<% if (!item.get(\"is_unrestricted\")) { %>',\n                '<p>You can <span class=\"remove-restrictions\"><a href=\"\">remove all access restrictions</a></span> on this dataset.</p>',\n                \"<% } else { %>\",\n                '<p>You can <span class=\"make-private\"><a href=\"\">make this dataset private</a></span> to you.</p>',\n                \"<% } %>\",\n                \"<h4>Roles that can access the dataset</h4>\",\n                '<div id=\"access_perm\" class=\"access_perm roles-selection\"></div>',\n                '<div class=\"alert alert-info roles-selection\">',\n                \"User has to have <strong>all these roles</strong> in order to access this dataset.\",\n                \" Users without access permission <strong>cannot</strong> have other permissions on this dataset.\",\n                \" If there are no access roles set on the dataset it is considered <strong>unrestricted</strong>.\",\n                \"</div>\",\n                \"<h4>Roles that can manage permissions on the dataset</h4>\",\n                '<div id=\"manage_perm\" class=\"manage_perm roles-selection\"></div>',\n                '<div class=\"alert alert-info roles-selection\">',\n                \"User with <strong>any</strong> of these roles can manage permissions of this dataset. If you remove yourself you will lose the ability manage this dataset unless you are an admin.\",\n                \"</div>\",\n                '<button data-toggle=\"tooltip\" data-placement=\"top\" title=\"Save modifications made on this page\" class=\"btn btn-default toolbtn_save_permissions primary-button\" type=\"button\">',\n                '<span class=\"fa fa-floppy-o\"></span>',\n                \"&nbsp;Save\",\n                \"</button>\",\n                \"</div>\",\n                // CONTAINER END\n                \"</div>\"\n            ].join(\"\")\n        );\n    },\n\n    templateBulkImportInModal: function() {\n        return _.template(\n            [\n                \"<div>\",\n                '<div class=\"library-modal-item\">',\n                \"Select history: \",\n                '<select id=\"dataset_import_single\" name=\"dataset_import_single\" style=\"width:50%; margin-bottom: 1em; \" autofocus>',\n                \"<% _.each(histories, function(history) { %>\",\n                '<option value=\"<%= _.escape(history.get(\"id\")) %>\"><%= _.escape(history.get(\"name\")) %></option>',\n                \"<% }); %>\",\n                \"</select>\",\n                \"</div>\",\n                '<div class=\"library-modal-item\">',\n                \"or create new: \",\n                '<input type=\"text\" name=\"history_name\" value=\"\" placeholder=\"name of the new history\" style=\"width:50%;\">',\n                \"</input>\",\n                \"</div>\",\n                \"</div>\"\n            ].join(\"\")\n        );\n    }\n});\n\nexport default {\n    LibraryDatasetView: LibraryDatasetView\n};\n"]}