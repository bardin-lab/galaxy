{"version":3,"sources":["mvc/user/user-preferences.js"],"names":["Model","Backbone","extend","initialize","options","user_id","Galaxy","user","id","this","set","information","title","_localization2","default","description","url","icon","redirect","password","permissions","submit_title","communication","submit_icon","href","root","onclick","window","modal","show","custom_builds","hide","location","session_csrf_token","View","model","setElement","render","self","config","$","getJSON","data","$preferences","addClass","append","_","escape","email","$table","_queryStringParsing2","get","status","message","prepend","_uiMisc2","Message","$el","use_remote_user","_addLink","has_user_tool_filters","_templateFooter","action","$row","_templateLink","$a","on","attr","find","nice_total_disk_usage","enable_quotas","quota"],"mappings":"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","file":"../../../scripts/mvc/user/user-preferences.js","sourcesContent":["import _l from \"utils/localization\";\n/** User Preferences view */\nimport Form from \"mvc/form/form-view\";\nimport Ui from \"mvc/ui/ui-misc\";\nimport QueryStringParsing from \"utils/query-string-parsing\";\n/** Contains descriptive dictionaries describing user forms */\nvar Model = Backbone.Model.extend({\n    initialize: function(options) {\n        options = options || {};\n        options.user_id = options.user_id || Galaxy.user.id;\n        this.set({\n            user_id: options.user_id,\n            information: {\n                title: _l(\"Manage information\"),\n                description: \"Edit your email, addresses and custom parameters or change your username.\",\n                url: `api/users/${options.user_id}/information/inputs`,\n                icon: \"fa-user\",\n                redirect: \"user\"\n            },\n            password: {\n                title: _l(\"Change password\"),\n                description: _l(\"Allows you to change your login credentials.\"),\n                icon: \"fa-unlock-alt\",\n                url: `api/users/${options.user_id}/password/inputs`,\n                submit_title: \"Save password\",\n                redirect: \"user\"\n            },\n            communication: {\n                title: _l(\"Change communication settings\"),\n                description: _l(\"Enable or disable the communication feature to chat with other users.\"),\n                url: `api/users/${options.user_id}/communication/inputs`,\n                icon: \"fa-comments-o\",\n                redirect: \"user\"\n            },\n            permissions: {\n                title: _l(\"Set dataset permissions for new histories\"),\n                description:\n                    \"Grant others default access to newly created histories. Changes made here will only affect histories created after these settings have been stored.\",\n                url: `api/users/${options.user_id}/permissions/inputs`,\n                icon: \"fa-users\",\n                submit_title: \"Save permissions\",\n                redirect: \"user\"\n            },\n            api_key: {\n                title: _l(\"Manage API key\"),\n                description: _l(\"Access your current API key or create a new one.\"),\n                url: `api/users/${options.user_id}/api_key/inputs`,\n                icon: \"fa-key\",\n                submit_title: \"Create a new key\",\n                submit_icon: \"fa-check\"\n            },\n            toolbox_filters: {\n                title: _l(\"Manage Toolbox filters\"),\n                description: _l(\"Customize your Toolbox by displaying or omitting sets of Tools.\"),\n                url: `api/users/${options.user_id}/toolbox_filters/inputs`,\n                icon: \"fa-filter\",\n                submit_title: \"Save filters\",\n                redirect: \"user\"\n            },\n            openids: {\n                title: _l(\"Manage OpenIDs\"),\n                description: _l(\"Associate OpenIDs with your account.\"),\n                icon: \"fa-openid\",\n                onclick: function() {\n                    window.location.href = `${Galaxy.root}openids/list`;\n                }\n            },\n            custom_builds: {\n                title: _l(\"Manage custom builds\"),\n                description: _l(\"Add or remove custom builds using history datasets.\"),\n                icon: \"fa-cubes\",\n                onclick: function() {\n                    window.location.href = `${Galaxy.root}custom_builds`;\n                }\n            },\n            logout: {\n                title: _l(\"Sign out\"),\n                description: _l(\"Click here to sign out of all sessions.\"),\n                icon: \"fa-sign-out\",\n                onclick: function() {\n                    Galaxy.modal.show({\n                        title: _l(\"Sign out\"),\n                        body: \"Do you want to continue and sign out of all active sessions?\",\n                        buttons: {\n                            Cancel: function() {\n                                Galaxy.modal.hide();\n                            },\n                            \"Sign out\": function() {\n                                window.location.href = `${Galaxy.root}user/logout?session_csrf_token=${\n                                    Galaxy.session_csrf_token\n                                }`;\n                            }\n                        }\n                    });\n                }\n            }\n        });\n    }\n});\n\n/** View of the main user preference panel with links to individual user forms */\nvar View = Backbone.View.extend({\n    title: _l(\"User Preferences\"),\n    initialize: function() {\n        this.model = new Model();\n        this.setElement(\"<div/>\");\n        this.render();\n    },\n\n    render: function() {\n        var self = this;\n        var config = Galaxy.config;\n        $.getJSON(`${Galaxy.root}api/users/${Galaxy.user.id}`, data => {\n            self.$preferences = $(\"<div/>\")\n                .addClass(\"ui-panel\")\n                .append($(\"<h2/>\").append(\"User preferences\"))\n                .append($(\"<p/>\").append(`You are logged in as <strong>${_.escape(data.email)}</strong>.`))\n                .append((self.$table = $(\"<table/>\").addClass(\"ui-panel-table\")));\n            var message = QueryStringParsing.get(\"message\");\n            var status = QueryStringParsing.get(\"status\");\n            if (message && status) {\n                self.$preferences.prepend(new Ui.Message({ message: message, status: status }).$el);\n            }\n            if (!config.use_remote_user) {\n                self._addLink(\"information\");\n                self._addLink(\"password\");\n            }\n            if (config.enable_communication_server) {\n                self._addLink(\"communication\");\n            }\n            self._addLink(\"custom_builds\");\n            self._addLink(\"permissions\");\n            self._addLink(\"api_key\");\n            if (config.has_user_tool_filters) {\n                self._addLink(\"toolbox_filters\");\n            }\n            if (config.enable_openid && !config.use_remote_user) {\n                self._addLink(\"openids\");\n            }\n            if (Galaxy.session_csrf_token) {\n                self._addLink(\"logout\");\n            }\n            self.$preferences.append(self._templateFooter(data));\n            self.$el.empty().append(self.$preferences);\n        });\n    },\n\n    _addLink: function(action) {\n        var options = this.model.get(action);\n        var $row = $(this._templateLink(options));\n        var $a = $row.find(\"a\");\n        if (options.onclick) {\n            $a.on(\"click\", () => {\n                options.onclick();\n            });\n        } else {\n            $a.attr(\"href\", `${Galaxy.root}user/${action}`);\n        }\n        this.$table.append($row);\n    },\n\n    _templateLink: function(options) {\n        return `<tr><td><div class=\"ui-panel-icon fa ${\n            options.icon\n        }\"></td><td><a class=\"ui-panel-anchor\" href=\"javascript:void(0)\">${\n            options.title\n        }</a><div class=\"ui-form-info\">${options.description}</div></td></tr>`;\n    },\n\n    _templateFooter: function(options) {\n        return `<p class=\"ui-panel-footer\">You are using <strong>${\n            options.nice_total_disk_usage\n        }</strong> of disk space in this Galaxy instance. ${\n            Galaxy.config.enable_quotas ? `Your disk quota is: <strong>${options.quota}</strong>. ` : \"\"\n        }Is your usage more than expected? See the <a href=\"https://galaxyproject.org/learn/managing-datasets/\" target=\"_blank\">documentation</a> for tips on how to find all of the data in your account.</p>`;\n    }\n});\n\nexport default {\n    View: View,\n    Model: Model\n};\n"]}