{"version":3,"sources":["mvc/user/user-custom-builds.js"],"names":["Collection","Backbone","extend","comparator","a","b","get","View","initialize","options","self","this","history_id","Galaxy","currHistoryPanel","model","id","Model","url","root","collection","user","message","_uiMisc2","default","Message","installed_builds","Select","value","empty_text","error_text","table","_uiTable2","cls","selectable","setElement","$","$el","optional","$installed","onchange","text","addClass","append","addHeader","listenTo","_renderTable","$form","$help","_renderForm","delAll","tooltip","onclick","sort","each","add","undefined","ButtonIcon","initial_type","form","_localization2","inputs","type","destroy","label","help","test_param","name","cases","area","data","status","title","create","_renderHelp","input_field","wait","success","response","update","error","len_type","err","html","responseJSON","_templateFasta","input_id","match","field_list","empty","length","show","hide","_templateLen"],"mappings":"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","file":"../../../scripts/mvc/user/user-custom-builds.js","sourcesContent":["import _l from \"utils/localization\";\n/** This class renders the chart configuration form. */\nimport Utils from \"utils/utils\";\nimport Ui from \"mvc/ui/ui-misc\";\nimport Form from \"mvc/form/form-view\";\nimport Table from \"mvc/ui/ui-table\";\nvar Collection = Backbone.Collection.extend({\n    comparator: function(a, b) {\n        a = a.get(\"name\");\n        b = b.get(\"name\");\n        return a > b ? 1 : a < b ? -1 : 0;\n    }\n});\n\nvar View = Backbone.View.extend({\n    initialize: function(options) {\n        var self = this;\n        var history_id = Galaxy.currHistoryPanel && Galaxy.currHistoryPanel.model.id;\n        this.model = new Backbone.Model();\n        this.model.url = `${Galaxy.root}api/histories/${history_id}/custom_builds_metadata`;\n        this.collection = new Collection();\n        this.collection.url = `${Galaxy.root}api/users/${Galaxy.user.id}/custom_builds`;\n        this.message = new Ui.Message({});\n        this.installed_builds = new Ui.Select.View({\n            optional: true,\n            onchange: function() {\n                self.installed_builds.value(null);\n            },\n            empty_text: \"List of available builds:\",\n            error_text: \"No system installed builds available.\"\n        });\n        this.table = new Table.View({ cls: \"grid\", selectable: false });\n        this.table.addHeader(\"Name\");\n        this.table.addHeader(\"Key\");\n        this.table.addHeader(\"Number of chroms/contigs\");\n        this.table.addHeader(\"\");\n        this.table.appendHeader();\n        this.setElement(\n            $(\"<div/>\")\n                .append($(\"<h4/>\").text(\"Current Custom Builds\"))\n                .append(this.table.$el)\n                .append(\n                    (this.$installed = $(\"<div/>\")\n                        .append(\n                            $(\"<h4/>\")\n                                .text(\"System Installed Builds\")\n                                .addClass(\"ui-margin-top\")\n                        )\n                        .append(this.installed_builds.$el))\n                )\n                .append(\n                    $(\"<h4/>\")\n                        .text(\"Add a Custom Build\")\n                        .addClass(\"ui-margin-top\")\n                )\n                .append(\n                    $(\"<span/>\")\n                        .addClass(\"ui-column\")\n                        .append(\n                            $(\"<div/>\")\n                                .addClass(\"ui-column-left\")\n                                .append(this.message.$el)\n                                .append((this.$form = $(\"<div/>\").addClass(\"ui-margin-top\")))\n                        )\n                        .append((this.$help = $(\"<div/>\").addClass(\"ui-column-right\")))\n                )\n        );\n        this.listenTo(this.collection, \"add remove reset\", () => {\n            self._renderTable();\n        });\n        this.listenTo(this.model, \"change\", () => {\n            self._renderForm();\n        });\n        this.collection.fetch();\n        this.model.fetch();\n    },\n\n    render: function() {\n        this._renderTable();\n        this._renderForm();\n    },\n\n    _renderTable: function() {\n        var self = this;\n        this.table.delAll();\n        this.collection.sort();\n        this.collection.each(model => {\n            self.table.add(model.get(\"name\"));\n            self.table.add(model.id);\n            self.table.add(model.get(\"count\") !== undefined ? model.get(\"count\") : \"Processing...\");\n            self.table.add(\n                new Ui.ButtonIcon({\n                    icon: \"fa-trash-o\",\n                    cls: \"ui-button-icon-plain\",\n                    tooltip: _l(\"Delete custom build.\"),\n                    onclick: function() {\n                        model.destroy();\n                    }\n                }).$el\n            );\n            self.table.append(model.id);\n        });\n    },\n\n    _renderForm: function() {\n        var self = this;\n        var initial_type = \"fasta\";\n        var form = new Form({\n            inputs: [\n                {\n                    type: \"text\",\n                    name: \"name\",\n                    label: \"Name\",\n                    help: \"Specify a build name e.g. Hamster.\"\n                },\n                {\n                    type: \"text\",\n                    name: \"id\",\n                    label: \"Key\",\n                    help: \"Specify a build key e.g. hamster_v1.\"\n                },\n                {\n                    name: \"len\",\n                    type: \"conditional\",\n                    test_param: {\n                        name: \"type\",\n                        label: \"Definition\",\n                        help: _l(\"Provide the data source.\"),\n                        type: \"select\",\n                        value: initial_type,\n                        data: [\n                            {\n                                value: \"fasta\",\n                                label: \"FASTA-file from history\"\n                            },\n                            {\n                                value: \"file\",\n                                label: \"Len-file from disk\"\n                            },\n                            {\n                                value: \"text\",\n                                label: \"Len-file by copy/paste\"\n                            }\n                        ]\n                    },\n                    cases: [\n                        {\n                            value: \"fasta\",\n                            inputs: [\n                                {\n                                    type: \"select\",\n                                    name: \"value\",\n                                    label: \"FASTA-file\",\n                                    data: this.model.get(\"fasta_hdas\")\n                                }\n                            ]\n                        },\n                        {\n                            value: \"file\",\n                            inputs: [\n                                {\n                                    type: \"upload\",\n                                    name: \"value\",\n                                    label: \"Len-file\",\n                                    data: this.model.get(\"len_hdas\")\n                                }\n                            ]\n                        },\n                        {\n                            value: \"text\",\n                            inputs: [\n                                {\n                                    type: \"text\",\n                                    area: true,\n                                    name: \"value\",\n                                    label: \"Edit/Paste\"\n                                }\n                            ]\n                        }\n                    ]\n                }\n            ],\n            buttons: {\n                save: new Ui.Button({\n                    icon: \"fa-save\",\n                    tooltip: _l(\"Create new Build\"),\n                    title: _l(\"Save\"),\n                    cls: \"btn btn-primary ui-clear-float\",\n                    onclick: function() {\n                        var data = form.data.create();\n                        if (!data.id || !data.name) {\n                            self.message.update({\n                                message: \"All inputs are required.\",\n                                status: \"danger\"\n                            });\n                        } else {\n                            self.collection.create(data, {\n                                wait: true,\n                                success: function(response) {\n                                    if (response.get(\"message\")) {\n                                        self.message.update({\n                                            message: response.get(\"message\"),\n                                            status: \"warning\"\n                                        });\n                                    } else {\n                                        self.message.update({\n                                            message: \"Successfully added a new custom build.\",\n                                            status: \"success\"\n                                        });\n                                    }\n                                },\n                                error: function(response, err) {\n                                    var message = err && err.responseJSON && err.responseJSON.err_msg;\n                                    self.message.update({\n                                        message: message || \"Failed to create custom build.\",\n                                        status: \"danger\"\n                                    });\n                                }\n                            });\n                        }\n                    }\n                })\n            },\n            onchange: function() {\n                var input_id = form.data.match(\"len|type\");\n                if (input_id) {\n                    var input_field = form.field_list[input_id];\n                    self._renderHelp(input_field.value());\n                }\n            }\n        });\n        this.$form.empty().append(form.$el);\n        var installed_builds = this.model.get(\"installed_builds\");\n        if (installed_builds && installed_builds.length) {\n            this.$installed.show();\n            this.installed_builds.update(this.model.get(\"installed_builds\"));\n        } else {\n            this.$installed.hide();\n        }\n        this._renderHelp(initial_type);\n    },\n\n    _renderHelp: function(len_type) {\n        this.$help\n            .empty()\n            .addClass(\"alert alert-info\")\n            .html(len_type == \"fasta\" ? this._templateFasta() : this._templateLen());\n    },\n\n    _templateLen: function() {\n        return (\n            \"<h4>Length Format</h4>\" +\n            \"<p>\" +\n            \"The length format is two-column, separated by whitespace, of the form:\" +\n            \"<pre>chrom/contig   length of chrom/contig</pre>\" +\n            \"</p>\" +\n            \"<p>\" +\n            \"For example, the first few entries of <em>mm9.len</em> are as follows:\" +\n            \"<pre>\" +\n            \"chr1    197195432\\n\" +\n            \"chr2    181748087\\n\" +\n            \"chr3    159599783\\n\" +\n            \"chr4    155630120\\n\" +\n            \"chr5    152537259\" +\n            \"</pre>\" +\n            \"</p>\" +\n            \"<p>Trackster uses this information to populate the select box for chrom/contig, and\" +\n            \"to set the maximum basepair of the track browser. You may either upload a .len file\" +\n            \"of this format (Len File option), or directly enter the information into the box \" +\n            \"(Len Entry option).</p>\"\n        );\n    },\n\n    _templateFasta: function() {\n        return (\n            \"<h4>FASTA format</h4>\" +\n            \"<p>\" +\n            \"This is a multi-fasta file from your current history that provides the genome\" +\n            \"sequences for each chromosome/contig in your build.\" +\n            \"</p>\" +\n            \"<p>\" +\n            \"Here is a snippet from an example multi-fasta file:\" +\n            \"<pre>\" +\n            \">chr1\\n\" +\n            \"ATTATATATAAGACCACAGAGAGAATATTTTGCCCGG...\\n\\n\" +\n            \">chr2\\n\" +\n            \"GGCGGCCGCGGCGATATAGAACTACTCATTATATATA...\\n\\n\" +\n            \"...\" +\n            \"</pre>\" +\n            \"</p>\"\n        );\n    }\n});\n\nexport default {\n    View: View\n};\n"]}