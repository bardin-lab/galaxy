{"version":3,"sources":["mvc/ui/ui-misc.js"],"names":["Label","Backbone","View","extend","tagName","initialize","options","this","model","Model","setElement","$","listenTo","render","title","new_title","set","value","get","$el","removeClass","addClass","Message","message","status","cls","persistent","fade","update","timeout","clearTimeout","self","setTimeout","_","escape","UnescapedMessage","messageForDisplay","Input","type","placeholder","disabled","readonly","visible","area","color","events","input","new_val","attr","id","datalist","css","length","autocomplete","source","response","change","request","_onchange","each","val","attr_name","removeAttr","Hidden","undefined","append","Upload","$info","text","hide","_readFile","$file","$text","file","target","reader","FileReader","e","Button","show","$wait","ButtonCheck","ButtonMenu","ButtonLink","files","Checkbox","RadioButton","Radio","Select","wait","result","Drilldown","readAsText","ButtonDefault","Modal","ButtonIcon","_uiButtons2","default","_uiOptions2","Slider"],"mappings":"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","file":"../../../scripts/mvc/ui/ui-misc.js","sourcesContent":["/**\n *  This class contains backbone wrappers for basic ui elements such as Images, Labels, Buttons, Input fields etc.\n */\nimport Select from \"mvc/ui/ui-select-default\";\nimport Slider from \"mvc/ui/ui-slider\";\nimport Options from \"mvc/ui/ui-options\";\nimport Drilldown from \"mvc/ui/ui-drilldown\";\nimport Buttons from \"mvc/ui/ui-buttons\";\nimport Modal from \"mvc/ui/ui-modal\";\n\n/** Label wrapper */\nexport var Label = Backbone.View.extend({\n    tagName: \"label\",\n    initialize: function(options) {\n        this.model = (options && options.model) || new Backbone.Model(options);\n        this.tagName = options.tagName || this.tagName;\n        this.setElement($(`<${this.tagName}/>`));\n        this.listenTo(this.model, \"change\", this.render, this);\n        this.render();\n    },\n    title: function(new_title) {\n        this.model.set(\"title\", new_title);\n    },\n    value: function() {\n        return this.model.get(\"title\");\n    },\n    render: function() {\n        this.$el\n            .removeClass()\n            .addClass(\"ui-label\")\n            .addClass(this.model.get(\"cls\"))\n            .html(this.model.get(\"title\"));\n        return this;\n    }\n});\n\n/** Displays messages used e.g. in the tool form */\nexport var Message = Backbone.View.extend({\n    initialize: function(options) {\n        this.model =\n            (options && options.model) ||\n            new Backbone.Model({\n                message: null,\n                status: \"info\",\n                cls: \"\",\n                persistent: false,\n                fade: true\n            }).set(options);\n        this.listenTo(this.model, \"change\", this.render, this);\n        this.render();\n    },\n    update: function(options) {\n        this.model.set(options);\n    },\n    render: function() {\n        this.$el\n            .removeClass()\n            .addClass(\"ui-message\")\n            .addClass(this.model.get(\"cls\"));\n        var status = this.model.get(\"status\");\n        if (this.model.get(\"large\")) {\n            this.$el.addClass(\n                `${(status == \"success\" && \"done\") || (status == \"danger\" && \"error\") || status}messagelarge`\n            );\n        } else {\n            this.$el.addClass(\"alert\").addClass(`alert-${status}`);\n        }\n        if (this.model.get(\"message\")) {\n            this.$el.html(this.messageForDisplay());\n            this.$el[this.model.get(\"fade\") ? \"fadeIn\" : \"show\"]();\n            this.timeout && window.clearTimeout(this.timeout);\n            if (!this.model.get(\"persistent\")) {\n                var self = this;\n                this.timeout = window.setTimeout(() => {\n                    self.model.set(\"message\", \"\");\n                }, 3000);\n            }\n        } else {\n            this.$el.fadeOut();\n        }\n        return this;\n    },\n    messageForDisplay: function() {\n        return _.escape(this.model.get(\"message\"));\n    }\n});\n\nexport var UnescapedMessage = Message.extend({\n    messageForDisplay: function() {\n        return this.model.get(\"message\");\n    }\n});\n\n/** Renders an input element used e.g. in the tool form */\nexport var Input = Backbone.View.extend({\n    initialize: function(options) {\n        this.model =\n            (options && options.model) ||\n            new Backbone.Model({\n                type: \"text\",\n                placeholder: \"\",\n                disabled: false,\n                readonly: false,\n                visible: true,\n                cls: \"\",\n                area: false,\n                color: null,\n                style: null\n            }).set(options);\n        this.tagName = this.model.get(\"area\") ? \"textarea\" : \"input\";\n        this.setElement($(`<${this.tagName}/>`));\n        this.listenTo(this.model, \"change\", this.render, this);\n        this.render();\n    },\n    events: {\n        input: \"_onchange\"\n    },\n    value: function(new_val) {\n        new_val !== undefined && this.model.set(\"value\", typeof new_val === \"string\" ? new_val : \"\");\n        return this.model.get(\"value\");\n    },\n    render: function() {\n        var self = this;\n        this.$el\n            .removeClass()\n            .addClass(`ui-${this.tagName}`)\n            .addClass(this.model.get(\"cls\"))\n            .addClass(this.model.get(\"style\"))\n            .attr(\"id\", this.model.id)\n            .attr(\"type\", this.model.get(\"type\"))\n            .attr(\"placeholder\", this.model.get(\"placeholder\"))\n            .css(\"color\", this.model.get(\"color\") || \"\")\n            .css(\"border-color\", this.model.get(\"color\") || \"\");\n        var datalist = this.model.get(\"datalist\");\n        if ($.isArray(datalist) && datalist.length > 0) {\n            this.$el.autocomplete({\n                source: function(request, response) {\n                    response(self.model.get(\"datalist\"));\n                },\n                change: function() {\n                    self._onchange();\n                }\n            });\n        }\n        if (this.model.get(\"value\") !== this.$el.val()) {\n            this.$el.val(this.model.get(\"value\"));\n        }\n        _.each([\"readonly\", \"disabled\"], attr_name => {\n            self.model.get(attr_name) ? self.$el.attr(attr_name, true) : self.$el.removeAttr(attr_name);\n        });\n        this.$el[this.model.get(\"visible\") ? \"show\" : \"hide\"]();\n        return this;\n    },\n    _onchange: function() {\n        this.value(this.$el.val());\n        this.model.get(\"onchange\") && this.model.get(\"onchange\")(this.model.get(\"value\"));\n    }\n});\n\n/** Creates a hidden element input field used e.g. in the tool form */\nexport var Hidden = Backbone.View.extend({\n    initialize: function(options) {\n        this.model = (options && options.model) || new Backbone.Model(options);\n        this.setElement(\n            $(\"<div/>\")\n                .append((this.$info = $(\"<div/>\")))\n                .append((this.$hidden = $(\"<div/>\")))\n        );\n        this.listenTo(this.model, \"change\", this.render, this);\n        this.render();\n    },\n    value: function(new_val) {\n        new_val !== undefined && this.model.set(\"value\", new_val);\n        return this.model.get(\"value\");\n    },\n    render: function() {\n        this.$el.attr(\"id\", this.model.id);\n        this.$hidden.val(this.model.get(\"value\"));\n        this.model.get(\"info\") ? this.$info.show().text(this.model.get(\"info\")) : this.$info.hide();\n        return this;\n    }\n});\n\n/** Creates a upload element input field */\nexport var Upload = Backbone.View.extend({\n    initialize: function(options) {\n        var self = this;\n        this.model = (options && options.model) || new Backbone.Model(options);\n        this.setElement(\n            $(\"<div/>\")\n                .append((this.$info = $(\"<div/>\")))\n                .append(\n                    (this.$file = $(\"<input/>\")\n                        .attr(\"type\", \"file\")\n                        .addClass(\"ui-margin-bottom\"))\n                )\n                .append(\n                    (this.$text = $(\"<textarea/>\")\n                        .addClass(\"ui-textarea\")\n                        .attr(\"disabled\", true))\n                )\n                .append((this.$wait = $(\"<i/>\").addClass(\"fa fa-spinner fa-spin\")))\n        );\n        this.listenTo(this.model, \"change\", this.render, this);\n        this.$file.on(\"change\", e => {\n            self._readFile(e);\n        });\n        this.render();\n    },\n    value: function(new_val) {\n        new_val !== undefined && this.model.set(\"value\", new_val);\n        return this.model.get(\"value\");\n    },\n    render: function() {\n        this.$el.attr(\"id\", this.model.id);\n        this.model.get(\"info\") ? this.$info.show().text(this.model.get(\"info\")) : this.$info.hide();\n        this.model.get(\"value\") ? this.$text.text(this.model.get(\"value\")).show() : this.$text.hide();\n        this.model.get(\"wait\") ? this.$wait.show() : this.$wait.hide();\n        return this;\n    },\n    _readFile: function(e) {\n        var self = this;\n        var file = e.target.files && e.target.files[0];\n        if (file) {\n            var reader = new FileReader();\n            reader.onload = function() {\n                self.model.set({ wait: false, value: this.result });\n            };\n            this.model.set({ wait: true, value: null });\n            reader.readAsText(file);\n        }\n    }\n});\n\n/* Make more Ui stuff directly available at this namespace (for backwards\n * compatibility).  We should eliminate this practice, though, and just require\n * what we need where we need it, allowing for better package optimization.\n */\n\nexport let Button = Buttons.ButtonDefault;\nexport let ButtonIcon = Buttons.ButtonIcon;\nexport let ButtonCheck = Buttons.ButtonCheck;\nexport let ButtonMenu = Buttons.ButtonMenu;\nexport let ButtonLink = Buttons.ButtonLink;\nexport let Checkbox = Options.Checkbox;\nexport let RadioButton = Options.RadioButton;\nexport let Radio = Options.Radio;\nexport { Select, Slider, Drilldown };\n\nexport default {\n    Button: Buttons.ButtonDefault,\n    ButtonIcon: Buttons.ButtonIcon,\n    ButtonCheck: Buttons.ButtonCheck,\n    ButtonMenu: Buttons.ButtonMenu,\n    ButtonLink: Buttons.ButtonLink,\n    Input: Input,\n    Label: Label,\n    Message: Message,\n    UnescapedMessage: UnescapedMessage,\n    Upload: Upload,\n    Modal: Modal,\n    RadioButton: Options.RadioButton,\n    Checkbox: Options.Checkbox,\n    Radio: Options.Radio,\n    Select: Select,\n    Hidden: Hidden,\n    Slider: Slider,\n    Drilldown: Drilldown\n};\n"]}