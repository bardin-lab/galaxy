{"version":3,"sources":["mvc/ui/ui-modal.js"],"names":["View","Backbone","extend","className","optionsDefault","container","body","backdrop","title","cls","closing_events","initialize","options","this","_","defaults","$","prepend","el","render","show","_this","visible","$el","fadeIn","document","e","hide","$backdrop","canceled","fadeOut","closing_callback","off","$header","$dialog","$body","$buttons","html","_template","removeClass","addClass","empty","buttonList","counter","each","buttons","name","callback","attr","$button","self","append","$footer","title_separator","removeAttr","css","height","window","width","getButton","enableButton","prop","disableButton","showButton","hideButton","scrollTop"],"mappings":"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","file":"../../../scripts/mvc/ui/ui-modal.js","sourcesContent":["export var View = Backbone.View.extend({\n    className: \"ui-modal\",\n\n    // defaults\n    optionsDefault: {\n        container: \"body\",\n        title: \"ui-modal\",\n        cls: \"ui-modal\",\n        body: \"\",\n        backdrop: true,\n        height: null,\n        width: null,\n        closing_events: false,\n        closing_callback: null,\n        title_separator: true\n    },\n\n    // button list\n    buttonList: {},\n\n    // initialize\n    initialize: function(options) {\n        this.options = _.defaults(options || {}, this.optionsDefault);\n        $(this.options.container).prepend(this.el);\n        // optional render\n        if (options) {\n            this.render();\n        }\n    },\n\n    /**\n     * Displays modal\n     */\n    show: function(options) {\n        if (options) {\n            this.options = _.defaults(options, this.optionsDefault);\n            this.render();\n        }\n        if (!this.visible) {\n            this.visible = true;\n            this.$el.fadeIn(\"fast\");\n        }\n        if (this.options.closing_events) {\n            $(document).on(\"keyup.ui-modal\", e => {\n                if (e.keyCode == 27) {\n                    this.hide(true);\n                }\n            });\n            this.$backdrop.on(\"click\", () => {\n                this.hide(true);\n            });\n        }\n    },\n\n    /**\n     * Hide modal\n     */\n    hide: function(canceled) {\n        this.visible = false;\n        this.$el.fadeOut(\"fast\");\n        if (this.options.closing_callback) {\n            this.options.closing_callback(canceled);\n        }\n        $(document).off(\"keyup.ui-modal\");\n        this.$backdrop.off(\"click\");\n    },\n\n    /**\n     * Render modal\n     */\n    render: function() {\n        var self = this;\n        this.$el.html(this._template());\n\n        // link elements\n        this.$header = this.$(\".modal-header\");\n        this.$dialog = this.$(\".modal-dialog\");\n        this.$body = this.$(\".modal-body\");\n        this.$footer = this.$(\".modal-footer\");\n        this.$backdrop = this.$(\".modal-backdrop\");\n        this.$buttons = this.$(\".buttons\");\n\n        if (this.options.body == \"progress\") {\n            this.options.body = $(\n                '<div class=\"progress progress-striped active\">' +\n                    '<div class=\"progress-bar progress-bar-info\" style=\"width:100%\"/>' +\n                    \"</div>\"\n            );\n        }\n\n        // fix main content\n        this.$el\n            .removeClass()\n            .addClass(\"modal\")\n            .addClass(this.options.cls);\n        this.$header.find(\".title\").html(this.options.title);\n        this.$body.html(this.options.body);\n\n        // append buttons\n        this.$buttons.empty();\n        this.buttonList = {};\n        if (this.options.buttons) {\n            var counter = 0;\n            $.each(this.options.buttons, (name, callback) => {\n                var $button = $(\"<button/>\")\n                    .attr(\"id\", `button-${counter++}`)\n                    .text(name)\n                    .click(callback);\n                self.$buttons.append($button).append(\"&nbsp;\");\n                self.buttonList[name] = $button;\n            });\n        } else {\n            this.$footer.hide();\n        }\n\n        // configure background, separator line\n        this.$backdrop[(this.options.backdrop && \"addClass\") || \"removeClass\"](\"in\");\n        this.$header[(!this.options.title_separator && \"addClass\") || \"removeClass\"](\"no-separator\");\n\n        // fix dimensions\n        // note: because this is a singleton, we need to clear inline styles from any previous invocations\n        this.$body.removeAttr(\"style\");\n        if (this.options.height) {\n            this.$body.css(\"height\", this.options.height);\n            this.$body.css(\"overflow\", \"hidden\");\n        } else {\n            this.$body.css(\"max-height\", $(window).height() / 2);\n        }\n        if (this.options.width) {\n            this.$dialog.css(\"width\", this.options.width);\n        }\n    },\n\n    /**\n     * Returns the button dom\n     * @param{String}   name    - Button name/title\n     */\n    getButton: function(name) {\n        return this.buttonList[name];\n    },\n\n    /**\n     * Enables a button\n     * @param{String}   name    - Button name/title\n     */\n    enableButton: function(name) {\n        this.getButton(name).prop(\"disabled\", false);\n    },\n\n    /**\n     * Disables a button\n     * @param{String}   name    - Button name/title\n     */\n    disableButton: function(name) {\n        this.getButton(name).prop(\"disabled\", true);\n    },\n\n    /**\n     * Show a button\n     * @param{String}   name    - Button name/title\n     */\n    showButton: function(name) {\n        this.getButton(name).show();\n    },\n\n    /**\n     * Hide a button\n     * @param{String}   name    - Button name/title\n     */\n    hideButton: function(name) {\n        this.getButton(name).hide();\n    },\n\n    /**\n     * Returns scroll top for body element\n     */\n    scrollTop: function() {\n        return this.$body.scrollTop();\n    },\n\n    /**\n     * Returns the modal template\n     */\n    _template: function() {\n        return (\n            '<div class=\"modal-backdrop fade\"/>' +\n            '<div class=\"modal-dialog\">' +\n            '<div class=\"modal-content\">' +\n            '<div class=\"modal-header\">' +\n            '<h4 class=\"title\"/>' +\n            \"</div>\" +\n            '<div class=\"modal-body\"/>' +\n            '<div class=\"modal-footer\">' +\n            '<div class=\"buttons\"/>' +\n            \"</div>\" +\n            \"</div>\" +\n            \"</div>\"\n        );\n    }\n});\n\nexport default {\n    View: View\n};\n"]}