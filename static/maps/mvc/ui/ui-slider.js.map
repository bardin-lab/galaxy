{"version":3,"sources":["mvc/ui/ui-slider.js"],"names":["View","Backbone","extend","initialize","options","self","this","model","Model","id","_utils2","default","uid","min","max","step","precise","split","value","_template","$","onchange","on","set","val","setElement","pressed","attr","which","e","v","get","$text","preventDefault","event","indexOf","attributes","opts","has_slider","$slider","render","slider","ui","hide","listenTo","new_val","isNaN","trigger","undefined","_isParameter","Math","round","String","substring"],"mappings":"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","file":"../../../scripts/mvc/ui/ui-slider.js","sourcesContent":["import Utils from \"utils/utils\";\n\nvar View = Backbone.View.extend({\n    initialize: function(options) {\n        var self = this;\n        this.model =\n            (options && options.model) ||\n            new Backbone.Model({\n                id: Utils.uid(),\n                min: null,\n                max: null,\n                step: null,\n                precise: false,\n                split: 10000,\n                value: null,\n                onchange: function() {}\n            }).set(options);\n\n        // create new element\n        this.setElement(this._template());\n        this.$el.attr(\"id\", this.model.id);\n        this.$text = this.$(\".ui-form-slider-text\");\n        this.$slider = this.$(\".ui-form-slider-element\");\n\n        // add text field event\n        var pressed = [];\n        this.$text\n            .on(\"change\", function() {\n                self.value($(this).val());\n            })\n            .on(\"keyup\", e => {\n                pressed[e.which] = false;\n            })\n            .on(\"keydown\", function(e) {\n                var v = e.which;\n                pressed[v] = true;\n                if (self.model.get(\"is_workflow\") && pressed[16] && v == 52) {\n                    self.value(\"$\");\n                    event.preventDefault();\n                } else if (\n                    !(\n                        v == 8 ||\n                        v == 9 ||\n                        v == 13 ||\n                        v == 37 ||\n                        v == 39 ||\n                        (v >= 48 && v <= 57 && !pressed[16]) ||\n                        (v >= 96 && v <= 105) ||\n                        ((v == 190 || v == 110) &&\n                            $(this)\n                                .val()\n                                .indexOf(\".\") == -1 &&\n                            self.model.get(\"precise\")) ||\n                        ((v == 189 || v == 109) &&\n                            $(this)\n                                .val()\n                                .indexOf(\"-\") == -1) ||\n                        self._isParameter($(this).val()) ||\n                        pressed[91] ||\n                        pressed[17]\n                    )\n                ) {\n                    event.preventDefault();\n                }\n            });\n\n        // build slider, cannot be rebuild in render\n        var opts = this.model.attributes;\n        this.has_slider = opts.max !== null && opts.min !== null && opts.max > opts.min;\n        var step = opts.step;\n        if (!step) {\n            if (opts.precise && this.has_slider) {\n                step = (opts.max - opts.min) / opts.split;\n            } else {\n                step = 1.0;\n            }\n        }\n        if (this.has_slider) {\n            this.$text.addClass(\"ui-form-slider-left\");\n            this.$slider.slider({ min: opts.min, max: opts.max, step: step }).on(\"slide\", (event, ui) => {\n                self.value(ui.value);\n            });\n        } else {\n            this.$slider.hide();\n        }\n\n        // add listeners\n        this.listenTo(this.model, \"change\", this.render, this);\n        this.render();\n    },\n\n    render: function() {\n        var value = this.model.get(\"value\");\n        this.has_slider && this.$slider.slider(\"value\", value);\n        value !== this.$text.val() && this.$text.val(value);\n    },\n\n    /** Set and return the current value */\n    value: function(new_val) {\n        var options = this.model.attributes;\n        if (new_val !== undefined) {\n            if (new_val !== null && new_val !== \"\" && !this._isParameter(new_val)) {\n                isNaN(new_val) && (new_val = 0);\n                !options.precise && (new_val = Math.round(new_val));\n                options.max !== null && (new_val = Math.min(new_val, options.max));\n                options.min !== null && (new_val = Math.max(new_val, options.min));\n            }\n            this.model.set(\"value\", new_val);\n            this.model.trigger(\"change\");\n            options.onchange(new_val);\n        }\n        return this.model.get(\"value\");\n    },\n\n    /** Return true if the field contains a workflow parameter i.e. $('name') */\n    _isParameter: function(value) {\n        return this.model.get(\"is_workflow\") && String(value).substring(0, 1) === \"$\";\n    },\n\n    /** Slider template */\n    _template: function() {\n        return (\n            '<div class=\"ui-form-slider\">' +\n            '<input class=\"ui-form-slider-text\" type=\"text\"/>' +\n            '<div class=\"ui-form-slider-element\"/>' +\n            \"</div>\"\n        );\n    }\n});\n\nexport default {\n    View: View\n};\n"]}