{"version":3,"sources":["mvc/upload/collection/collection-view.js"],"names":["Backbone","View","extend","upload_size","collection","_uploadModel2","default","Collection","counter","announce","success","error","running","reset","this","initialize","app","self","options","list_extensions","list_genomes","ui_button","ftp_upload_site","currentFtp","_template","_uiMisc2","Button","uploadbox","select","icon","btnFtp","id","onclick","_eventFtp","btnCreate","title","setElement","_eventCreate","_localization2","_eventStart","_eventStop","btnReset","btnStart","btnClose","btnBuild","_eventBuild","_","each","btnStop","$","prepend","button","$el","nginx_upload_path","index","file","_eventAnnounce","toData","get","history_id","progress","percentage","message","_eventError","addClass","ondragover","container","select_extension","_uiSelect2","css","data","ftp","filter","ext","composite_files","default_extension","extension","updateExtension","value","onchange","text","collectionType","e","target","list","placement","select_genome","default_genome","genome","updateGenome","model","_eventRemove","_updateScreen","new_model","Model","file_name","name","size","file_mode","file_path","path","file_size","file_data","upload_row","render","_eventProgress","it","set","_uploadPercentage","hids","pluck","status","_eventSuccess","upload_completed","Galaxy","currHistoryPanel","refreshContents","info","_eventComplete","allHids","forEach","models","upload","push","apply","map","hid","getByHid","selection","constructor","historyId","buildCollection","_eventReset","modal","visible","empty","append","_uploadFtp2","onadd","ftp_file","add","mode","currentHistory","html","defaults_only","updateCollectionType","compatible","enable_build","enable_reset","enable_start","enable_sources","btnLocal","show_table"],"mappings":"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","file":"../../../../scripts/mvc/upload/collection/collection-view.js","sourcesContent":["import _l from \"utils/localization\";\n/** Renders contents of the collection uploader */\nimport Utils from \"utils/utils\";\nimport UploadModel from \"mvc/upload/upload-model\";\nimport UploadRow from \"mvc/upload/collection/collection-row\";\nimport UploadFtp from \"mvc/upload/upload-ftp\";\nimport UploadExtension from \"mvc/upload/upload-extension\";\nimport Popover from \"mvc/ui/ui-popover\";\nimport Select from \"mvc/ui/ui-select\";\nimport Ui from \"mvc/ui/ui-misc\";\nimport LIST_COLLECTION_CREATOR from \"mvc/collection/list-collection-creator\";\nimport \"utils/uploadbox\";\nexport default Backbone.View.extend({\n    // current upload size in bytes\n    upload_size: 0,\n\n    // contains upload row models\n    collection: new UploadModel.Collection(),\n\n    // keeps track of the current uploader state\n    counter: {\n        announce: 0,\n        success: 0,\n        error: 0,\n        running: 0,\n        reset: function() {\n            this.announce = this.success = this.error = this.running = 0;\n        }\n    },\n\n    initialize: function(app) {\n        var self = this;\n        this.app = app;\n        this.options = app.options;\n        this.list_extensions = app.list_extensions;\n        this.list_genomes = app.list_genomes;\n        this.ui_button = app.ui_button;\n        this.ftp_upload_site = app.currentFtp();\n        this.setElement(this._template());\n\n        // append buttons to dom\n        this.btnLocal = new Ui.Button({\n            id: \"btn-local\",\n            title: _l(\"Choose local files\"),\n            onclick: function() {\n                self.uploadbox.select();\n            },\n            icon: \"fa fa-laptop\"\n        });\n        this.btnFtp = new Ui.Button({\n            id: \"btn-ftp\",\n            title: _l(\"Choose FTP files\"),\n            onclick: function() {\n                self._eventFtp();\n            },\n            icon: \"fa fa-folder-open-o\"\n        });\n        this.btnCreate = new Ui.Button({\n            id: \"btn-new\",\n            title: \"Paste/Fetch data\",\n            onclick: function() {\n                self._eventCreate();\n            },\n            icon: \"fa fa-edit\"\n        });\n        this.btnStart = new Ui.Button({\n            id: \"btn-start\",\n            title: _l(\"Start\"),\n            onclick: function() {\n                self._eventStart();\n            }\n        });\n        this.btnBuild = new Ui.Button({\n            id: \"btn-build\",\n            title: _l(\"Build\"),\n            onclick: function() {\n                self._eventBuild();\n            }\n        });\n        this.btnStop = new Ui.Button({\n            id: \"btn-stop\",\n            title: _l(\"Pause\"),\n            onclick: function() {\n                self._eventStop();\n            }\n        });\n        this.btnReset = new Ui.Button({\n            id: \"btn-reset\",\n            title: _l(\"Reset\"),\n            onclick: function() {\n                self._eventReset();\n            }\n        });\n        this.btnClose = new Ui.Button({\n            id: \"btn-close\",\n            title: _l(\"Close\"),\n            onclick: function() {\n                self.app.modal.hide();\n            }\n        });\n        _.each(\n            [\n                this.btnLocal,\n                this.btnFtp,\n                this.btnCreate,\n                this.btnStop,\n                this.btnReset,\n                this.btnStart,\n                this.btnBuild,\n                this.btnClose\n            ],\n            button => {\n                self.$(\".upload-buttons\").prepend(button.$el);\n            }\n        );\n\n        // file upload\n        this.uploadbox = this.$(\".upload-box\").uploadbox({\n            url: this.app.options.nginx_upload_path,\n            announce: function(index, file) {\n                self._eventAnnounce(index, file);\n            },\n            initialize: function(index) {\n                return self.app.toData([self.collection.get(index)], self.history_id);\n            },\n            progress: function(index, percentage) {\n                self._eventProgress(index, percentage);\n            },\n            success: function(index, message) {\n                self._eventSuccess(index, message);\n            },\n            error: function(index, message) {\n                self._eventError(index, message);\n            },\n            complete: function() {\n                self._eventComplete();\n            },\n            ondragover: function() {\n                self.$(\".upload-box\").addClass(\"highlight\");\n            },\n            ondragleave: function() {\n                self.$(\".upload-box\").removeClass(\"highlight\");\n            }\n        });\n\n        // add ftp file viewer\n        this.ftp = new Popover.View({\n            title: _l(\"FTP files\"),\n            container: this.btnFtp.$el\n        });\n\n        // select extension\n        this.select_extension = new Select.View({\n            css: \"upload-footer-selection-compressed\",\n            container: this.$(\".upload-footer-extension\"),\n            data: _.filter(this.list_extensions, ext => !ext.composite_files),\n            value: this.options.default_extension,\n            onchange: function(extension) {\n                self.updateExtension(extension);\n            }\n        });\n\n        this.collectionType = \"list\";\n        this.select_collection = new Select.View({\n            css: \"upload-footer-selection-compressed\",\n            container: this.$(\".upload-footer-collection-type\"),\n            data: [\n                { id: \"list\", text: \"List\" },\n                { id: \"paired\", text: \"Paired\" },\n                { id: \"list:paired\", text: \"List of Pairs\" }\n            ],\n            value: \"list\",\n            onchange: function(collectionType) {\n                self.updateCollectionType(collectionType);\n            }\n        });\n\n        // handle extension info popover\n        this.$(\".upload-footer-extension-info\")\n            .on(\"click\", e => {\n                new UploadExtension({\n                    $el: $(e.target),\n                    title: self.select_extension.text(),\n                    extension: self.select_extension.value(),\n                    list: self.list_extensions,\n                    placement: \"top\"\n                });\n            })\n            .on(\"mousedown\", e => {\n                e.preventDefault();\n            });\n\n        // genome extension\n        this.select_genome = new Select.View({\n            css: \"upload-footer-selection\",\n            container: this.$(\".upload-footer-genome\"),\n            data: this.list_genomes,\n            value: this.options.default_genome,\n            onchange: function(genome) {\n                self.updateGenome(genome);\n            }\n        });\n\n        // events\n        this.collection.on(\"remove\", model => {\n            self._eventRemove(model);\n        });\n        this._updateScreen();\n    },\n\n    /** A new file has been dropped/selected through the uploadbox plugin */\n    _eventAnnounce: function(index, file) {\n        this.counter.announce++;\n        var new_model = new UploadModel.Model({\n            id: index,\n            file_name: file.name,\n            file_size: file.size,\n            file_mode: file.mode || \"local\",\n            file_path: file.path,\n            file_data: file,\n            extension: this.select_extension.value(),\n            genome: this.select_genome.value()\n        });\n        this.collection.add(new_model);\n        var upload_row = new UploadRow(this, { model: new_model });\n        this.$(\".upload-table > tbody:first\").append(upload_row.$el);\n        this._updateScreen();\n        upload_row.render();\n    },\n\n    /** Progress */\n    _eventProgress: function(index, percentage) {\n        var it = this.collection.get(index);\n        it.set(\"percentage\", percentage);\n        this.ui_button.model.set(\"percentage\", this._uploadPercentage(percentage, it.get(\"file_size\")));\n    },\n\n    /** Success */\n    _eventSuccess: function(index, message) {\n        // var hdaId = message[\"outputs\"][0][\"id\"];\n        var hids = _.pluck(message[\"outputs\"], \"hid\");\n        var it = this.collection.get(index);\n        it.set({ percentage: 100, status: \"success\", hids: hids });\n        this.ui_button.model.set(\"percentage\", this._uploadPercentage(100, it.get(\"file_size\")));\n        this.upload_completed += it.get(\"file_size\") * 100;\n        this.counter.announce--;\n        this.counter.success++;\n        this._updateScreen();\n        Galaxy.currHistoryPanel.refreshContents();\n    },\n\n    /** Error */\n    _eventError: function(index, message) {\n        var it = this.collection.get(index);\n        it.set({ percentage: 100, status: \"error\", info: message });\n        this.ui_button.model.set({\n            percentage: this._uploadPercentage(100, it.get(\"file_size\")),\n            status: \"danger\"\n        });\n        this.upload_completed += it.get(\"file_size\") * 100;\n        this.counter.announce--;\n        this.counter.error++;\n        this._updateScreen();\n    },\n\n    /** Queue is done */\n    _eventComplete: function() {\n        this.collection.each(model => {\n            model.get(\"status\") == \"queued\" && model.set(\"status\", \"init\");\n        });\n        this.counter.running = 0;\n        this._updateScreen();\n    },\n\n    _eventBuild: function() {\n        var allHids = [];\n        _.forEach(this.collection.models, upload => {\n            allHids.push.apply(allHids, upload.get(\"hids\"));\n        });\n        var models = _.map(allHids, hid => Galaxy.currHistoryPanel.collection.getByHid(hid));\n        var selection = new Galaxy.currHistoryPanel.collection.constructor(models);\n        // I'm building the selection wrong because I need to set this historyId directly.\n        selection.historyId = Galaxy.currHistoryPanel.collection.historyId;\n        Galaxy.currHistoryPanel.buildCollection(this.collectionType, selection, true);\n        this.counter.running = 0;\n        this._updateScreen();\n        this._eventReset();\n        this.app.modal.hide();\n    },\n\n    /** Remove model from upload list */\n    _eventRemove: function(model) {\n        var status = model.get(\"status\");\n        if (status == \"success\") {\n            this.counter.success--;\n        } else if (status == \"error\") {\n            this.counter.error--;\n        } else {\n            this.counter.announce--;\n        }\n        this.uploadbox.remove(model.id);\n        this._updateScreen();\n    },\n\n    //\n    // events triggered by this view\n    //\n\n    /** Show/hide ftp popup */\n    _eventFtp: function() {\n        if (!this.ftp.visible) {\n            this.ftp.empty();\n            var self = this;\n            this.ftp.append(\n                new UploadFtp({\n                    collection: this.collection,\n                    ftp_upload_site: this.ftp_upload_site,\n                    onadd: function(ftp_file) {\n                        return self.uploadbox.add([\n                            {\n                                mode: \"ftp\",\n                                name: ftp_file.path,\n                                size: ftp_file.size,\n                                path: ftp_file.path\n                            }\n                        ]);\n                    },\n                    onremove: function(model_index) {\n                        self.collection.remove(model_index);\n                    }\n                }).$el\n            );\n            this.ftp.show();\n        } else {\n            this.ftp.hide();\n        }\n    },\n\n    /** Create a new file */\n    _eventCreate: function() {\n        this.uploadbox.add([{ name: \"New File\", size: 0, mode: \"new\" }]);\n    },\n\n    /** Start upload process */\n    _eventStart: function() {\n        if (this.counter.announce == 0 || this.counter.running > 0) {\n            return;\n        }\n        var self = this;\n        this.upload_size = 0;\n        this.upload_completed = 0;\n        this.collection.each(model => {\n            if (model.get(\"status\") == \"init\") {\n                model.set(\"status\", \"queued\");\n                self.upload_size += model.get(\"file_size\");\n            }\n        });\n        this.ui_button.model.set({ percentage: 0, status: \"success\" });\n        this.counter.running = this.counter.announce;\n        this.history_id = this.app.currentHistory();\n        this.uploadbox.start();\n        this._updateScreen();\n    },\n\n    /** Pause upload process */\n    _eventStop: function() {\n        if (this.counter.running > 0) {\n            this.ui_button.model.set(\"status\", \"info\");\n            $(\".upload-top-info\").html(\"Queue will pause after completing the current file...\");\n            this.uploadbox.stop();\n        }\n    },\n\n    /** Remove all */\n    _eventReset: function() {\n        if (this.counter.running == 0) {\n            this.collection.reset();\n            this.counter.reset();\n            this.uploadbox.reset();\n            this.select_extension.value(this.options.default_extension);\n            this.select_genome.value(this.options.default_genome);\n            this.ui_button.model.set(\"percentage\", 0);\n            this._updateScreen();\n        }\n    },\n\n    /** Update extension for all models */\n    updateExtension: function(extension, defaults_only) {\n        var self = this;\n        this.collection.each(model => {\n            if (\n                model.get(\"status\") == \"init\" &&\n                (model.get(\"extension\") == self.options.default_extension || !defaults_only)\n            ) {\n                model.set(\"extension\", extension);\n            }\n        });\n    },\n\n    /** Update collection type */\n    updateCollectionType: function(collectionType) {\n        var self = this;\n        this.collectionType = collectionType;\n    },\n\n    /** Update genome for all models */\n    updateGenome: function(genome, defaults_only) {\n        var self = this;\n        this.collection.each(model => {\n            if (\n                model.get(\"status\") == \"init\" &&\n                (model.get(\"genome\") == self.options.default_genome || !defaults_only)\n            ) {\n                model.set(\"genome\", genome);\n            }\n        });\n    },\n\n    /** Set screen */\n    _updateScreen: function() {\n        var message = \"\";\n        if (this.counter.announce == 0) {\n            if (this.uploadbox.compatible()) {\n                message = \"&nbsp;\";\n            } else {\n                message =\n                    \"Browser does not support Drag & Drop. Try Firefox 4+, Chrome 7+, IE 10+, Opera 12+ or Safari 6+.\";\n            }\n        } else {\n            if (this.counter.running == 0) {\n                message = `You added ${\n                    this.counter.announce\n                } file(s) to the queue. Add more files or click 'Start' to proceed.`;\n            } else {\n                message = `Please wait...${this.counter.announce} out of ${this.counter.running} remaining.`;\n            }\n        }\n        this.$(\".upload-top-info\").html(message);\n        var enable_reset =\n            this.counter.running == 0 && this.counter.announce + this.counter.success + this.counter.error > 0;\n        var enable_start = this.counter.running == 0 && this.counter.announce > 0;\n        var enable_build =\n            this.counter.running == 0 &&\n            this.counter.announce == 0 &&\n            this.counter.success > 0 &&\n            this.counter.error == 0;\n        var enable_sources = this.counter.running == 0;\n        var show_table = this.counter.announce + this.counter.success + this.counter.error > 0;\n        this.btnReset[enable_reset ? \"enable\" : \"disable\"]();\n        this.btnStart[enable_start ? \"enable\" : \"disable\"]();\n        this.btnStart.$el[enable_start ? \"addClass\" : \"removeClass\"](\"btn-primary\");\n        this.btnBuild[enable_build ? \"enable\" : \"disable\"]();\n        this.btnBuild.$el[enable_build ? \"addClass\" : \"removeClass\"](\"btn-primary\");\n        this.btnStop[this.counter.running > 0 ? \"enable\" : \"disable\"]();\n        this.btnLocal[enable_sources ? \"enable\" : \"disable\"]();\n        this.btnFtp[enable_sources ? \"enable\" : \"disable\"]();\n        this.btnCreate[enable_sources ? \"enable\" : \"disable\"]();\n        this.btnFtp.$el[this.ftp_upload_site ? \"show\" : \"hide\"]();\n        this.$(\".upload-table\")[show_table ? \"show\" : \"hide\"]();\n        this.$(\".upload-helper\")[show_table ? \"hide\" : \"show\"]();\n    },\n\n    /** Calculate percentage of all queued uploads */\n    _uploadPercentage: function(percentage, size) {\n        return (this.upload_completed + percentage * size) / this.upload_size;\n    },\n\n    /** Template */\n    _template: function() {\n        return (\n            '<div class=\"upload-view-default\">' +\n            '<div class=\"upload-top\">' +\n            '<h6 class=\"upload-top-info\"/>' +\n            \"</div>\" +\n            '<div class=\"upload-box\">' +\n            '<div class=\"upload-helper\"><i class=\"fa fa-files-o\"/>Drop files here</div>' +\n            '<table class=\"upload-table ui-table-striped\" style=\"display: none;\">' +\n            \"<thead>\" +\n            \"<tr>\" +\n            \"<th>Name</th>\" +\n            \"<th>Size</th>\" +\n            \"<th>Status</th>\" +\n            \"<th/>\" +\n            \"</tr>\" +\n            \"</thead>\" +\n            \"<tbody/>\" +\n            \"</table>\" +\n            \"</div>\" +\n            '<div class=\"upload-footer\">' +\n            '<span class=\"upload-footer-title-compressed\">Collection Type:</span>' +\n            '<span class=\"upload-footer-collection-type\"/>' +\n            '<span class=\"upload-footer-title-compressed\">File Type:</span>' +\n            '<span class=\"upload-footer-extension\"/>' +\n            '<span class=\"upload-footer-extension-info upload-icon-button fa fa-search\"/> ' +\n            '<span class=\"upload-footer-title-compressed\">Genome (set all):</span>' +\n            '<span class=\"upload-footer-genome\"/>' +\n            \"</div>\" +\n            '<div class=\"upload-buttons\"/>' +\n            \"</div>\"\n        );\n    }\n});\n"]}