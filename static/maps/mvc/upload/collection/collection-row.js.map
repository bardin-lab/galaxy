{"version":3,"sources":["mvc/upload/collection/collection-row.js"],"names":["Backbone","View","extend","status_classes","init","queued","running","success","error","initialize","app","options","self","this","model","setElement","_template","$mode","$","$title","$text","$size","$info_text","settings","_uiPopover2","default","container","placement","select_genome","value","select_extension","$symbol","$info_progress","$text_content","on","e","set","url_paste","target","val","title","length","listenTo","default_genome","_refreshStatus","_removeRow","_refreshInfo","file_size","collection","remove","render","file_name","html","_utils2","bytesToString","addClass","_refreshFileSize","$el","width","top","height","file_mode","attributes","escape","info","_refreshPercentage","percentage","parseInt","get","$progress_bar","css","status","hide","removeClass","enabled","$percentage","indexOf","_showSettings","visible","empty","append","_uploadSettings2","show","id"],"mappings":"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","file":"../../../../scripts/mvc/upload/collection/collection-row.js","sourcesContent":["import _l from \"utils/localization\";\n/** Renders the collection uploader rows */\nimport Utils from \"utils/utils\";\nimport UploadModel from \"mvc/upload/upload-model\";\nimport UploadSettings from \"mvc/upload/upload-settings\";\nimport Popover from \"mvc/ui/ui-popover\";\nimport Select from \"mvc/ui/ui-select\";\nexport default Backbone.View.extend({\n    /** Dictionary of upload states and associated icons */\n    status_classes: {\n        init: \"upload-icon-button fa fa-trash-o\",\n        queued: \"upload-icon fa fa-spinner fa-spin\",\n        running: \"upload-icon fa fa-spinner fa-spin\",\n        success: \"upload-icon-button fa fa-check\",\n        error: \"upload-icon-button fa fa-exclamation-triangle\"\n    },\n\n    initialize: function(app, options) {\n        var self = this;\n        this.app = app;\n        this.model = options.model;\n        this.setElement(this._template(options.model));\n        this.$mode = this.$(\".upload-mode\");\n        this.$title = this.$(\".upload-title-extended\");\n        this.$text = this.$(\".upload-text\");\n        this.$size = this.$(\".upload-size\");\n        this.$info_text = this.$(\".upload-info-text\");\n        this.$info_progress = this.$(\".upload-info-progress\");\n        this.$text_content = this.$(\".upload-text-content\");\n        this.$symbol = this.$(\".upload-symbol\");\n        this.$progress_bar = this.$(\".upload-progress-bar\");\n        this.$percentage = this.$(\".upload-percentage\");\n\n        // append popup to settings icon\n        this.settings = new Popover.View({\n            title: _l(\"Upload configuration\"),\n            container: this.$(\".upload-settings\"),\n            placement: \"bottom\"\n        });\n\n        // identify default genome and extension values\n        var default_genome = this.app.select_genome.value();\n        var default_extension = this.app.select_extension.value();\n\n        // handle click event\n        this.$symbol.on(\"click\", () => {\n            self._removeRow();\n        });\n\n        // handle text editing event\n        this.$text_content.on(\"change input\", e => {\n            self.model.set({\n                url_paste: $(e.target).val(),\n                file_size: $(e.target).val().length\n            });\n        });\n\n        // model events\n        this.listenTo(this.model, \"change:percentage\", () => {\n            self._refreshPercentage();\n        });\n        this.listenTo(this.model, \"change:status\", () => {\n            self._refreshStatus();\n        });\n        this.listenTo(this.model, \"change:info\", () => {\n            self._refreshInfo();\n        });\n        this.listenTo(this.model, \"change:file_size\", () => {\n            self._refreshFileSize();\n        });\n        this.listenTo(this.model, \"remove\", () => {\n            self.remove();\n        });\n        this.app.collection.on(\"reset\", () => {\n            self.remove();\n        });\n    },\n\n    render: function() {\n        var options = this.model.attributes;\n        this.$title.html(_.escape(options.file_name));\n        this.$size.html(Utils.bytesToString(options.file_size));\n        this.$mode\n            .removeClass()\n            .addClass(\"upload-mode\")\n            .addClass(\"text-primary\");\n        if (options.file_mode == \"new\") {\n            this.$text\n                .css({\n                    width: `${this.$el.width() - 16}px`,\n                    top: `${this.$el.height() - 8}px`\n                })\n                .show();\n            this.$el.height(this.$el.height() - 8 + this.$text.height() + 16);\n            this.$mode.addClass(\"fa fa-edit\");\n        } else if (options.file_mode == \"local\") {\n            this.$mode.addClass(\"fa fa-laptop\");\n        } else if (options.file_mode == \"ftp\") {\n            this.$mode.addClass(\"fa fa-folder-open-o\");\n        }\n    },\n\n    /** Refresh info text */\n    _refreshInfo: function() {\n        var info = this.model.get(\"info\");\n        if (info) {\n            this.$info_text.html(`<strong>Failed: </strong>${info}`).show();\n        } else {\n            this.$info_text.hide();\n        }\n    },\n\n    /** Refresh percentage status */\n    _refreshPercentage: function() {\n        var percentage = parseInt(this.model.get(\"percentage\"));\n        this.$progress_bar.css({ width: `${percentage}%` });\n        this.$percentage.html(percentage != 100 ? `${percentage}%` : \"Adding to history...\");\n    },\n\n    /** Refresh status */\n    _refreshStatus: function() {\n        var status = this.model.get(\"status\");\n        this.$symbol\n            .removeClass()\n            .addClass(\"upload-symbol\")\n            .addClass(this.status_classes[status]);\n        this.model.set(\"enabled\", status == \"init\");\n        var enabled = this.model.get(\"enabled\");\n        this.$text_content.attr(\"disabled\", !enabled);\n        if (status == \"success\") {\n            this.$el.addClass(\"success\");\n            this.$percentage.html(\"100%\");\n        }\n        if (status == \"error\") {\n            this.$el.addClass(\"danger\");\n            this.$info_progress.hide();\n        }\n    },\n\n    /** Refresh file size */\n    _refreshFileSize: function() {\n        this.$size.html(Utils.bytesToString(this.model.get(\"file_size\")));\n    },\n\n    /** Remove row */\n    _removeRow: function() {\n        if ([\"init\", \"success\", \"error\"].indexOf(this.model.get(\"status\")) !== -1) {\n            this.app.collection.remove(this.model);\n        }\n    },\n\n    /** Attach file info popup */\n    _showSettings: function() {\n        if (!this.settings.visible) {\n            this.settings.empty();\n            this.settings.append(new UploadSettings(this).$el);\n            this.settings.show();\n        } else {\n            this.settings.hide();\n        }\n    },\n\n    /** View template */\n    _template: function(options) {\n        return `<tr id=\"upload-row-${\n            options.id\n        }\" class=\"upload-row\"><td><div class=\"upload-text-column\"><div class=\"upload-mode\"/><div class=\"upload-title-extended\"/><div class=\"upload-text\"><div class=\"upload-text-info\">You can tell Galaxy to download data from web by entering URL in this box (one per line). You can also directly paste the contents of a file.</div><textarea class=\"upload-text-content form-control\"/></div></div></td><td><div class=\"upload-size\"/></td><td><div class=\"upload-info\"><div class=\"upload-info-text\"/><div class=\"upload-info-progress progress\"><div class=\"upload-progress-bar progress-bar progress-bar-success\"/><div class=\"upload-percentage\">0%</div></div></div></td><td><div class=\"upload-symbol ${\n            this.status_classes.init\n        }\"/></td></tr>`;\n    }\n});\n"]}