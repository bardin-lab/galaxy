{"version":3,"sources":["mvc/upload/upload-button.js"],"names":["View","Backbone","extend","initialize","options","self","this","model","Model","icon","tooltip","_localization2","default","label","percentage","status","onunload","onclick","set","$","listenTo","render","get","attributes","off","on","setElement","$progress","e","window","placement","removeClass","addClass","css","$el"],"mappings":"0MAGIA,EAAOC,SAASD,KAAKE,QACrBC,WAAY,SAASC,GACjB,IAAIC,EAAOC,KACXA,KAAKC,MACAH,GAAWA,EAAQG,OACpB,IAAIN,SAASO,OACTC,KAAM,YACNC,SAAS,EAAAC,EAAAC,SAAG,+CACZC,MAAO,YACPC,WAAY,EACZC,OAAQ,GACRC,SAAU,aAb1BC,QAAA,eAeeC,IAAId,GAbfJ,KAAAA,WAAgBA,KAAKE,aACrBC,KAAAA,UAAYG,KAAAa,EAAA,iBACRb,KAAAc,SAAIf,KAAJE,MAAA,SAAAD,KAAAe,OAAAf,MACAA,KAAAe,SAGQZ,EAAAA,QAAAA,GAAAA,eADe,WAAA,OAAAJ,EAAAE,MAAAe,IAAA,WAAAjB,MAIfS,OAAAA,WACAC,IACAC,EAAAA,KAAUT,MAAAgB,WACVN,KAAAA,IAPJO,IAQGN,SACPO,GAAA,QAAKC,SAAAA,GACLtB,EAAKuB,QAAYC,KAEjBlB,SACEmB,MAAQJ,KAAGlB,MAAAe,IAAA,WAAgBQ,UAAMzB,WACtCC,KAnB2BqB,UAkCnBI,cAbTV,SAAQ,gBACJW,SAAI3B,6BACJ2B,SAAyBT,IAArBnB,EAAUW,QAAVX,gBAAJA,EAAAW,QACAkB,KAAKC,MACI9B,EACDU,WAFHoB,OAOGJ,UAAAA,WAFK,MAIb,gOAsBS9B,KAAMA","file":"../../../scripts/mvc/upload/upload-button.js","sourcesContent":["import _l from \"utils/localization\";\n/** View for upload/progress bar button */\n\nvar View = Backbone.View.extend({\n    initialize: function(options) {\n        var self = this;\n        this.model =\n            (options && options.model) ||\n            new Backbone.Model({\n                icon: \"fa-upload\",\n                tooltip: _l(\"Download from URL or upload files from disk\"),\n                label: \"Load Data\",\n                percentage: 0,\n                status: \"\",\n                onunload: function() {},\n                onclick: function() {}\n            }).set(options);\n        this.setElement(this._template());\n        this.$progress = this.$(\".progress-bar\");\n        this.listenTo(this.model, \"change\", this.render, this);\n        this.render();\n        $(window).on(\"beforeunload\", () => self.model.get(\"onunload\")());\n    },\n\n    render: function() {\n        var self = this;\n        var options = this.model.attributes;\n        this.$el\n            .off(\"click\")\n            .on(\"click\", e => {\n                options.onclick(e);\n            })\n            .tooltip({\n                title: this.model.get(\"tooltip\"),\n                placement: \"bottom\"\n            });\n        this.$progress\n            .removeClass()\n            .addClass(\"progress-bar\")\n            .addClass(\"progress-bar-notransition\")\n            .addClass(options.status != \"\" && `progress-bar-${options.status}`)\n            .css({ width: `${options.percentage}%` });\n    },\n\n    /** Template */\n    _template: function() {\n        return (\n            '<div class=\"upload-button\">' +\n            '<div class=\"progress\">' +\n            '<div class=\"progress-bar\"/>' +\n            '<a class=\"panel-header-button\" href=\"javascript:void(0)\" id=\"tool-panel-upload-button\">' +\n            '<span class=\"fa fa-upload\"/>' +\n            \"</a>\" +\n            \"</div>\" +\n            \"</div>\"\n        );\n    }\n});\nexport default { View: View };\n"]}