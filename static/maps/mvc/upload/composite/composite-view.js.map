{"version":3,"sources":["mvc/upload/composite/composite-view.js"],"names":["Backbone","View","extend","collection","_uploadModel2","default","Collection","initialize","app","self","this","options","list_extensions","list_genomes","ftp_upload_site","currentFtp","setElement","_template","btnStart","_uiMisc2","Button","title","_localization2","onclick","_eventStart","btnClose","modal","hide","_","each","$el","select_extension","_uiSelect2","css","$","ext","composite_files","reset","details","findWhere","item","add","id","size","file_desc","description","name","container","data","text","onchange","value","placement","on","select_genome","default_genome","listenTo","model","target","extension","list","render","first","disable","enable","where","status","length","_eventAnnounce","removeClass","upload_row","_compositeRow2","append","set","genome","uploadpost","url","nginx_upload_path","toData","filter","success","message","error","_eventError","progress","percentage","_eventProgress","it","_eventSuccess","info"],"mappings":"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","file":"../../../../scripts/mvc/upload/composite/composite-view.js","sourcesContent":["import _l from \"utils/localization\";\n/** Renders contents of the composite uploader */\nimport Utils from \"utils/utils\";\nimport UploadModel from \"mvc/upload/upload-model\";\nimport UploadRow from \"mvc/upload/composite/composite-row\";\nimport UploadExtension from \"mvc/upload/upload-extension\";\nimport Popover from \"mvc/ui/ui-popover\";\nimport Select from \"mvc/ui/ui-select\";\nimport Ui from \"mvc/ui/ui-misc\";\nexport default Backbone.View.extend({\n    collection: new UploadModel.Collection(),\n    initialize: function(app) {\n        var self = this;\n        this.app = app;\n        this.options = app.options;\n        this.list_extensions = app.list_extensions;\n        this.list_genomes = app.list_genomes;\n        this.ftp_upload_site = app.currentFtp();\n        this.setElement(this._template());\n\n        // create button section\n        this.btnStart = new Ui.Button({\n            title: _l(\"Start\"),\n            onclick: function() {\n                self._eventStart();\n            }\n        });\n        this.btnClose = new Ui.Button({\n            title: _l(\"Close\"),\n            onclick: function() {\n                self.app.modal.hide();\n            }\n        });\n\n        // append buttons to dom\n        _.each([this.btnStart, this.btnClose], button => {\n            self.$(\".upload-buttons\").prepend(button.$el);\n        });\n\n        // select extension\n        this.select_extension = new Select.View({\n            css: \"upload-footer-selection\",\n            container: this.$(\".upload-footer-extension\"),\n            data: _.filter(this.list_extensions, ext => ext.composite_files),\n            onchange: function(extension) {\n                self.collection.reset();\n                var details = _.findWhere(self.list_extensions, {\n                    id: extension\n                });\n                if (details && details.composite_files) {\n                    _.each(details.composite_files, item => {\n                        self.collection.add({\n                            id: self.collection.size(),\n                            file_desc: item.description || item.name\n                        });\n                    });\n                }\n            }\n        });\n\n        // handle extension info popover\n        this.$(\".upload-footer-extension-info\")\n            .on(\"click\", e => {\n                new UploadExtension({\n                    $el: $(e.target),\n                    title: self.select_extension.text(),\n                    extension: self.select_extension.value(),\n                    list: self.list_extensions,\n                    placement: \"top\"\n                });\n            })\n            .on(\"mousedown\", e => {\n                e.preventDefault();\n            });\n\n        // genome extension\n        this.select_genome = new Select.View({\n            css: \"upload-footer-selection\",\n            container: this.$(\".upload-footer-genome\"),\n            data: this.list_genomes,\n            value: this.options.default_genome\n        });\n\n        // listener for collection triggers on change in composite datatype and extension selection\n        this.listenTo(this.collection, \"add\", model => {\n            self._eventAnnounce(model);\n        });\n        this.listenTo(this.collection, \"change add\", () => {\n            self.render();\n        });\n        this.select_extension.options.onchange(this.select_extension.value());\n        this.render();\n    },\n\n    render: function() {\n        var model = this.collection.first();\n        if (model && model.get(\"status\") == \"running\") {\n            this.select_genome.disable();\n            this.select_extension.disable();\n        } else {\n            this.select_genome.enable();\n            this.select_extension.enable();\n        }\n        if (this.collection.where({ status: \"ready\" }).length == this.collection.length && this.collection.length > 0) {\n            this.btnStart.enable();\n            this.btnStart.$el.addClass(\"btn-primary\");\n        } else {\n            this.btnStart.disable();\n            this.btnStart.$el.removeClass(\"btn-primary\");\n        }\n        this.$(\".upload-table\")[this.collection.length > 0 ? \"show\" : \"hide\"]();\n    },\n\n    //\n    // upload events / process pipeline\n    //\n\n    /** Builds the basic ui with placeholder rows for each composite data type file */\n    _eventAnnounce: function(model) {\n        var upload_row = new UploadRow(this, { model: model });\n        this.$(\".upload-table > tbody:first\").append(upload_row.$el);\n        this.$(\".upload-table\")[this.collection.length > 0 ? \"show\" : \"hide\"]();\n        upload_row.render();\n    },\n\n    /** Start upload process */\n    _eventStart: function() {\n        var self = this;\n        this.collection.each(model => {\n            model.set({\n                genome: self.select_genome.value(),\n                extension: self.select_extension.value()\n            });\n        });\n        $.uploadpost({\n            url: this.app.options.nginx_upload_path,\n            data: this.app.toData(this.collection.filter()),\n            success: function(message) {\n                self._eventSuccess(message);\n            },\n            error: function(message) {\n                self._eventError(message);\n            },\n            progress: function(percentage) {\n                self._eventProgress(percentage);\n            }\n        });\n    },\n\n    /** Refresh progress state */\n    _eventProgress: function(percentage) {\n        this.collection.each(it => {\n            it.set(\"percentage\", percentage);\n        });\n    },\n\n    /** Refresh success state */\n    _eventSuccess: function(message) {\n        this.collection.each(it => {\n            it.set(\"status\", \"success\");\n        });\n        Galaxy.currHistoryPanel.refreshContents();\n    },\n\n    /** Refresh error state */\n    _eventError: function(message) {\n        this.collection.each(it => {\n            it.set({ status: \"error\", info: message });\n        });\n    },\n\n    /** Load html template */\n    _template: function() {\n        return (\n            '<div class=\"upload-view-composite\">' +\n            '<div class=\"upload-top\">' +\n            '<h6 class=\"upload-top-info\"/>' +\n            \"</div>\" +\n            '<div class=\"upload-box\">' +\n            '<table class=\"upload-table ui-table-striped\" style=\"display: none;\">' +\n            \"<thead>\" +\n            \"<tr>\" +\n            \"<th/>\" +\n            \"<th/>\" +\n            \"<th>Description</th>\" +\n            \"<th>Name</th>\" +\n            \"<th>Size</th>\" +\n            \"<th>Settings</th>\" +\n            \"<th>Status</th>\" +\n            \"</tr>\" +\n            \"</thead>\" +\n            \"<tbody/>\" +\n            \"</table>\" +\n            \"</div>\" +\n            '<div class=\"upload-footer\">' +\n            '<span class=\"upload-footer-title\">Composite Type:</span>' +\n            '<span class=\"upload-footer-extension\"/>' +\n            '<span class=\"upload-footer-extension-info upload-icon-button fa fa-search\"/> ' +\n            '<span class=\"upload-footer-title\">Genome/Build:</span>' +\n            '<span class=\"upload-footer-genome\"/>' +\n            \"</div>\" +\n            '<div class=\"upload-buttons\"/>' +\n            \"</div>\"\n        );\n    }\n});\n"]}