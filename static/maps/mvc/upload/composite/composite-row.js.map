{"version":3,"sources":["mvc/upload/composite/composite-row.js"],"names":["Backbone","View","extend","status_classes","init","ready","running","success","error","initialize","app","options","self","this","model","setElement","_template","$source","$","$settings","$status","$text","$text_content","$percentage","uploadinput","$el","ondragover","addClass","ondragleave","onchange","files","get","length","$info_text","reset","$info_progress","$file_name","name","$file_desc","size","$file_size","mode","button_menu","_uiMisc2","default","ButtonMenu","pull","append","file_data","file_name","file_size","file_mode","ftp_upload_site","addMenu","icon","title","_localization2","onclick","_showFtp","placement","_uiPopover2","on","e","set","url_paste","target","val","settings","container","listenTo","_refreshStatus","_refreshInfo","preventDefault","_refreshMode","collection","attr","id","_","html","_utils2","bytesToString","apply","_refreshReady","removeClass","prototype","remove","height","css","width","top","each","hide","info","show","_refreshPercentage","percentage","parseInt","$progress_bar","status","offsetHeight","find","_refreshFileName","_refreshFileSize","ftp","visible","empty","_uploadFtp2","ftp_file","path","file_path","_showSettings","_uploadSettings2"],"mappings":"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","file":"../../../../scripts/mvc/upload/composite/composite-row.js","sourcesContent":["import _l from \"utils/localization\";\n/** Renders the composite upload row view */\nimport Utils from \"utils/utils\";\nimport UploadSettings from \"mvc/upload/upload-settings\";\nimport UploadFtp from \"mvc/upload/upload-ftp\";\nimport Popover from \"mvc/ui/ui-popover\";\nimport Ui from \"mvc/ui/ui-misc\";\nimport Select from \"mvc/ui/ui-select\";\nimport \"utils/uploadbox\";\nexport default Backbone.View.extend({\n    /** Dictionary of upload states and associated icons */\n    status_classes: {\n        init: \"upload-mode fa fa-exclamation text-primary\",\n        ready: \"upload-mode fa fa-check text-success\",\n        running: \"upload-mode fa fa-spinner fa-spin\",\n        success: \"upload-mode fa fa-check\",\n        error: \"upload-mode fa fa-exclamation-triangle\"\n    },\n\n    initialize: function(app, options) {\n        var self = this;\n        this.app = app;\n        this.model = options.model;\n        this.setElement(this._template());\n        this.$source = this.$(\".upload-source\");\n        this.$settings = this.$(\".upload-settings\");\n        this.$status = this.$(\".upload-status\");\n        this.$text = this.$(\".upload-text\");\n        this.$text_content = this.$(\".upload-text-content\");\n        this.$info_text = this.$(\".upload-info-text\");\n        this.$info_progress = this.$(\".upload-info-progress\");\n        this.$file_name = this.$(\".upload-file-name\");\n        this.$file_desc = this.$(\".upload-file-desc\");\n        this.$file_size = this.$(\".upload-file-size\");\n        this.$progress_bar = this.$(\".upload-progress-bar\");\n        this.$percentage = this.$(\".upload-percentage\");\n\n        // build upload functions\n        this.uploadinput = this.$el.uploadinput({\n            ondragover: function() {\n                self.model.get(\"enabled\") && self.$el.addClass(\"warning\");\n            },\n            ondragleave: function() {\n                self.$el.removeClass(\"warning\");\n            },\n            onchange: function(files) {\n                if (self.model.get(\"status\") != \"running\" && files && files.length > 0) {\n                    self.model.reset({\n                        file_data: files[0],\n                        file_name: files[0].name,\n                        file_size: files[0].size,\n                        file_mode: files[0].mode || \"local\"\n                    });\n                    self._refreshReady();\n                }\n            }\n        });\n\n        // source selection popup\n        this.button_menu = new Ui.ButtonMenu({\n            icon: \"fa-caret-down\",\n            title: _l(\"Select\"),\n            pull: \"left\"\n        });\n        this.$source.append(this.button_menu.$el);\n        this.button_menu.addMenu({\n            icon: \"fa-laptop\",\n            title: _l(\"Choose local file\"),\n            onclick: function() {\n                self.uploadinput.dialog();\n            }\n        });\n        if (this.app.ftp_upload_site) {\n            this.button_menu.addMenu({\n                icon: \"fa-folder-open-o\",\n                title: _l(\"Choose FTP file\"),\n                onclick: function() {\n                    self._showFtp();\n                }\n            });\n        }\n        this.button_menu.addMenu({\n            icon: \"fa-edit\",\n            title: \"Paste/Fetch data\",\n            onclick: function() {\n                self.model.reset({\n                    file_mode: \"new\",\n                    file_name: \"New File\"\n                });\n            }\n        });\n\n        // add ftp file viewer\n        this.ftp = new Popover.View({\n            title: \"Choose FTP file:\",\n            container: this.$source.find(\".ui-button-menu\"),\n            placement: \"right\"\n        });\n\n        // append popup to settings icon\n        this.settings = new Popover.View({\n            title: _l(\"Upload configuration\"),\n            container: this.$settings,\n            placement: \"bottom\"\n        });\n\n        // handle text editing event\n        this.$text_content.on(\"change input\", e => {\n            self.model.set({\n                url_paste: $(e.target).val(),\n                file_size: $(e.target).val().length\n            });\n            self._refreshReady();\n        });\n\n        // handle settings popover\n        this.$settings\n            .on(\"click\", e => {\n                self._showSettings();\n            })\n            .on(\"mousedown\", e => {\n                e.preventDefault();\n            });\n\n        // model events\n        this.listenTo(this.model, \"change:percentage\", () => {\n            self._refreshPercentage();\n        });\n        this.listenTo(this.model, \"change:status\", () => {\n            self._refreshStatus();\n        });\n        this.listenTo(this.model, \"change:info\", () => {\n            self._refreshInfo();\n        });\n        this.listenTo(this.model, \"change:file_name\", () => {\n            self._refreshFileName();\n        });\n        this.listenTo(this.model, \"change:file_mode\", () => {\n            self._refreshMode();\n        });\n        this.listenTo(this.model, \"change:file_size\", () => {\n            self._refreshFileSize();\n        });\n        this.listenTo(this.model, \"remove\", () => {\n            self.remove();\n        });\n        this.app.collection.on(\"reset\", () => {\n            self.remove();\n        });\n    },\n\n    render: function() {\n        this.$el.attr(\"id\", `upload-row-${this.model.id}`);\n        this.$file_name.html(_.escape(this.model.get(\"file_name\") || \"-\"));\n        this.$file_desc.html(this.model.get(\"file_desc\") || \"Unavailable\");\n        this.$file_size.html(Utils.bytesToString(this.model.get(\"file_size\")));\n        this.$status.removeClass().addClass(this.status_classes.init);\n    },\n\n    /** Remove view */\n    remove: function() {\n        // call the base class remove method\n        Backbone.View.prototype.remove.apply(this);\n    },\n\n    //\n    // handle model events\n    //\n\n    /** Refresh ready or not states */\n    _refreshReady: function() {\n        this.app.collection.each(model => {\n            model.set(\"status\", (model.get(\"file_size\") > 0 && \"ready\") || \"init\");\n        });\n    },\n\n    /** Refresh mode and e.g. show/hide textarea field */\n    _refreshMode: function() {\n        var file_mode = this.model.get(\"file_mode\");\n        if (file_mode == \"new\") {\n            this.height = this.$el.height();\n            this.$text\n                .css({\n                    width: `${this.$el.width() - 16}px`,\n                    top: `${this.$el.height() - 8}px`\n                })\n                .show();\n            this.$el.height(this.$el.height() - 8 + this.$text.height() + 16);\n            this.$text_content.val(\"\").trigger(\"keyup\");\n        } else {\n            this.$el.height(this.height);\n            this.$text.hide();\n        }\n    },\n\n    /** Refresh information */\n    _refreshInfo: function() {\n        var info = this.model.get(\"info\");\n        if (info) {\n            this.$info_text.html(`<strong>Failed: </strong>${info}`).show();\n        } else {\n            this.$info_text.hide();\n        }\n    },\n\n    /** Refresh percentage */\n    _refreshPercentage: function() {\n        var percentage = parseInt(this.model.get(\"percentage\"));\n        if (percentage != 0) {\n            this.$progress_bar.css({ width: `${percentage}%` });\n        } else {\n            this.$progress_bar.addClass(\"no-transition\");\n            this.$progress_bar.css({ width: \"0%\" });\n            this.$progress_bar[0].offsetHeight;\n            this.$progress_bar.removeClass(\"no-transition\");\n        }\n        this.$percentage.html(percentage != 100 ? `${percentage}%` : \"Adding to history...\");\n    },\n\n    /** Refresh status */\n    _refreshStatus: function() {\n        var status = this.model.get(\"status\");\n        this.$status.removeClass().addClass(this.status_classes[status]);\n        this.model.set(\"enabled\", status != \"running\");\n        this.$text_content.attr(\"disabled\", !this.model.get(\"enabled\"));\n        this.$el.removeClass(\"success danger warning\");\n        if (status == \"running\" || status == \"ready\") {\n            this.model.set(\"percentage\", 0);\n        }\n        this.$source.find(\".button\")[status == \"running\" ? \"addClass\" : \"removeClass\"](\"disabled\");\n        if (status == \"success\") {\n            this.$el.addClass(\"success\");\n            this.model.set(\"percentage\", 100);\n            this.$percentage.html(\"100%\");\n        }\n        if (status == \"error\") {\n            this.$el.addClass(\"danger\");\n            this.model.set(\"percentage\", 0);\n            this.$info_progress.hide();\n            this.$info_text.show();\n        } else {\n            this.$info_progress.show();\n            this.$info_text.hide();\n        }\n    },\n\n    /** File name */\n    _refreshFileName: function() {\n        this.$file_name.html(this.model.get(\"file_name\") || \"-\");\n    },\n\n    /** File size */\n    _refreshFileSize: function() {\n        this.$file_size.html(Utils.bytesToString(this.model.get(\"file_size\")));\n    },\n\n    /** Show/hide ftp popup */\n    _showFtp: function() {\n        if (!this.ftp.visible) {\n            var self = this;\n            this.ftp.empty();\n            this.ftp.append(\n                new UploadFtp({\n                    ftp_upload_site: this.app.ftp_upload_site,\n                    onchange: function(ftp_file) {\n                        self.ftp.hide();\n                        if (self.model.get(\"status\") != \"running\" && ftp_file) {\n                            self.model.reset({\n                                file_mode: \"ftp\",\n                                file_name: ftp_file.path,\n                                file_size: ftp_file.size,\n                                file_path: ftp_file.path\n                            });\n                            self._refreshReady();\n                        }\n                    }\n                }).$el\n            );\n            this.ftp.show();\n        } else {\n            this.ftp.hide();\n        }\n    },\n\n    /** Show/hide settings popup */\n    _showSettings: function() {\n        if (!this.settings.visible) {\n            this.settings.empty();\n            this.settings.append(new UploadSettings(this).$el);\n            this.settings.show();\n        } else {\n            this.settings.hide();\n        }\n    },\n\n    /** Template */\n    _template: function() {\n        return (\n            '<tr class=\"upload-row\">' +\n            \"<td>\" +\n            '<div class=\"upload-source\"/>' +\n            '<div class=\"upload-text-column\">' +\n            '<div class=\"upload-text\">' +\n            '<div class=\"upload-text-info\">You can tell Galaxy to download data from web by entering URL in this box (one per line). You can also directly paste the contents of a file.</div>' +\n            '<textarea class=\"upload-text-content form-control\"/>' +\n            \"</div>\" +\n            \"</div>\" +\n            \"</td>\" +\n            \"<td>\" +\n            '<div class=\"upload-status\"/>' +\n            \"</td>\" +\n            \"<td>\" +\n            '<div class=\"upload-file-desc upload-title\"/>' +\n            \"</td>\" +\n            \"<td>\" +\n            '<div class=\"upload-file-name upload-title\"/>' +\n            \"</td>\" +\n            \"<td>\" +\n            '<div class=\"upload-file-size upload-size\"/>' +\n            \"</td>\" +\n            '<td><div class=\"upload-settings upload-icon-button fa fa-gear\"/></td>' +\n            \"<td>\" +\n            '<div class=\"upload-info\">' +\n            '<div class=\"upload-info-text\"/>' +\n            '<div class=\"upload-info-progress progress\">' +\n            '<div class=\"upload-progress-bar progress-bar progress-bar-success\"/>' +\n            '<div class=\"upload-percentage\">0%</div>' +\n            \"</div>\" +\n            \"</div>\" +\n            \"</td>\" +\n            \"</tr>\"\n        );\n    }\n});\n"]}