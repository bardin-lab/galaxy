{"version":3,"sources":["mvc/history/history-list.js"],"names":["HistoryGridView","_gridView2","default","extend","_showCopyDialog","id","history","_historyModel2","History","fetch","fail","alert","done","_copyDialog2","window","parent","Galaxy","currHistoryPanel","loadCurrentHistory","location","reload","popup","operation","item","self","label","onclick","settings","allowed","allow_popup","html","href","url_args","target","confirmation_text","confirm","_add_operation","e","operation_config","encode_id","execute","this","findItemByHtml","func","initialize","options","model","Backbone","Model","url","root","action_id","$","param","params","success","response","set","render","title","attributes","$el","append","grid"],"mappings":"0UAOIA,EAAkBC,EAAAC,QAASC,QAC3BC,gBAAiB,SAASC,GACtB,IAAIC,EAAU,IAAIC,EAAAL,QAAaM,SAAUH,GAAIA,IAC7CC,EACKG,QACAC,KAAK,WACFC,MAAM,mEAETC,KAAK,YACF,EAAAC,EAAAX,SAAkBI,MAAaM,KAAK,WAC5BE,OAAOC,QAAUD,OAAOC,OAAOC,QAAUF,OAAOC,OAAOC,OAAOC,kBAC9DH,OAAOC,OAAOC,OAAOC,iBAAiBC,qBAE1CJ,OAAOK,SAASC,QAAO,QAZvChB,eAAAA,SAAiBiB,EAAAC,EAAAC,GACb,IAAAC,EAAIlB,KACJA,EACKG,EACAC,iBAAWY,EAAAG,OACF,QAANd,EAAMc,QACTH,EACKI,QAAM,SAAArB,GACRmB,EAAApB,gBAAAC,KAGKsB,EAAAC,SAAAN,EAAAO,aACDf,EAAAA,SACHgB,KALDR,EAAAG,MANRM,KAAAJ,EAAAK,SAH8BC,OAAAN,EAAAM,OAiBlCC,kBAAAZ,EAAAa,QACAC,KAAAA,SAAgBC,GACRb,EAAAA,iBACAG,IAAAA,EAAgBW,EAAAA,EAAAA,QAAAA,OAChBhB,EAAAI,QACAJ,EAAAI,QAAoBH,EAAAgB,WAApBf,EAAAgB,QAAAC,KAAAC,eAAAjB,UAUIkB,EAAAA,SAAAA,KAAAA,QACIN,OAAAA,EAAAA,EAAAA,SAAAA,aACAO,WAAA,SAAAC,GACA,IAAArB,EAAAiB,KACInB,KAAAA,WAAAA,EAAAA,WACHmB,KAAAK,MAAA,IAFDC,SAEOC,MACHxB,EAAAA,QAAAA,KACHyB,IAAAjC,OAAAkC,KAAA,WAAAL,EAAAM,UAAA,IAAAC,EAAAC,MAAArC,OAAAsC,QACJC,QAAA,SAAAC,GAbShC,EAAdsB,MAAAW,IAAAD,GAeHhC,EAAAkC,aAKLC,OAAAA,WACAf,IAAAA,EAAAA,IAAY5C,EAAAyC,KAASI,MAASe,YAC1BnB,KAAAoB,IAAIrC,QAAOsC,OAAXC,EAAAF,mBAKIN,KAAAA","file":"../../../scripts/mvc/history/history-list.js","sourcesContent":["import _l from \"utils/localization\";\n/** This class renders the grid list. */\nimport Utils from \"utils/utils\";\nimport GridView from \"mvc/grid/grid-view\";\nimport HistoryModel from \"mvc/history/history-model\";\nimport historyCopyDialog from \"mvc/history/copy-dialog\";\n\nvar HistoryGridView = GridView.extend({\n    _showCopyDialog: function(id) {\n        var history = new HistoryModel.History({ id: id });\n        history\n            .fetch()\n            .fail(() => {\n                alert(\"History could not be fetched. Please contact an administrator\");\n            })\n            .done(() => {\n                historyCopyDialog(history, {}).done(() => {\n                    if (window.parent && window.parent.Galaxy && window.parent.Galaxy.currHistoryPanel) {\n                        window.parent.Galaxy.currHistoryPanel.loadCurrentHistory();\n                    }\n                    window.location.reload(true);\n                });\n            });\n    },\n    /** Add an operation to the items menu */\n    _add_operation: function(popup, operation, item) {\n        var self = this;\n        var settings = item.operation_config[operation.label];\n        if (operation.label == \"Copy\") {\n            operation.onclick = id => {\n                self._showCopyDialog(id);\n            };\n        }\n        if (settings.allowed && operation.allow_popup) {\n            popup.addItem({\n                html: operation.label,\n                href: settings.url_args,\n                target: settings.target,\n                confirmation_text: operation.confirm,\n                func: function(e) {\n                    e.preventDefault();\n                    var label = $(e.target).html();\n                    if (operation.onclick) {\n                        operation.onclick(item.encode_id);\n                    } else {\n                        self.execute(this.findItemByHtml(label));\n                    }\n                }\n            });\n        }\n    }\n});\n\nvar View = Backbone.View.extend({\n    title: _l(\"Histories\"),\n    initialize: function(options) {\n        var self = this;\n        this.setElement($(\"<div/>\"));\n        this.model = new Backbone.Model();\n        Utils.get({\n            url: `${Galaxy.root}history/${options.action_id}?${$.param(Galaxy.params)}`,\n            success: function(response) {\n                self.model.set(response);\n                self.render();\n            }\n        });\n    },\n\n    render: function() {\n        var grid = new HistoryGridView(this.model.attributes);\n        this.$el.empty().append(grid.$el);\n    }\n});\n\nexport default {\n    View: View\n};\n"]}