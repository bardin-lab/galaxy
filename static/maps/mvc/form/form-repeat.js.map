{"version":3,"sources":["mvc/form/form-repeat.js"],"names":["View","Backbone","extend","initialize","options","this","list","_utils2","default","merge","title","_localization2","empty_text","max","min","button_new","_uiMisc2","ButtonIcon","icon","tooltip","cls","onclick","onnew","$list","$","append","$el","add","id","button_delete","size","ondel","portlet","_uiPortlet2","addClass","hide","fadeIn","disable","Galaxy","emit","debug","del","find","remove","enable","_refresh","hideOptions","_","each","hideOperation","delAll","html","index","isEmpty"],"mappings":"qSAMWA,EAAAA,EAAAA,KAAOC,SAASD,KAAKE,QAC5BC,WAAY,SAASC,GACjBC,KAAKC,QACLD,KAAKD,QAAUG,EAAAC,QAAMC,MAAML,GACvBM,OAAO,EAAAC,EAAAH,SAAG,UACVI,WAAY,iBACZC,IAAK,KACLC,IAAK,OAETT,KAAKU,WAAa,IAAIC,EAAAR,QAAGS,YACrBC,KAAM,UACNR,MAAAA,UAAiBL,KAAKD,QAAQM,MAC9BS,QAAAA,WAAoBd,KAAKD,QAAQM,MAAjC,SACAU,IAAK,gDACLC,QAAS,WACDjB,EAAQkB,OAfjBtB,EAAAA,WAICU,KAAAA,WACAE,EAAAA,UACAC,OAHgCR,KAAAkB,MAAAC,EAAA,WAIhCV,OAAKU,EAAA,UAAAC,OAAApB,KAAAU,WAAAW,QAKLP,KAAAA,WACAC,OAAAA,EAAAA,KAAKf,KAAAC,OAIAqB,IAAA,SAAAvB,GACJ,GAAAA,EAAAwB,KAAAvB,KAAAC,KAAAF,EAAAwB,IAAA,CAoBL,IAAIC,EAAgB,IAAIb,EAAAR,QAAGS,YAX/BC,KAAA,aACAY,SAAM,EAAAnB,EAAAH,SAAA,4BACFY,IAAA,0CA7B+BC,QAAA,WA2CnBjB,EAAQ2B,OAXxB3B,EAAA2B,WAIQC,EAAA,IAAAC,EAAAzB,QAAAR,MACH4B,GAAAxB,EAAAwB,GACDlB,OAAImB,EAAAA,EAAAA,SAAAA,eACAX,IAAAA,EAAME,KAAA,oBACND,YAASU,cAAAA,KAETR,EAAAA,OAAAA,EAASK,KACLM,EAAAN,IAAAQ,SAAI9B,eAAe+B,OACf/B,KAAAA,KAAAA,EAAAA,IAAQ2B,EACX1B,KAAAkB,MAAAE,OAAAO,EAAAN,IAAAU,OAAA,SACJ/B,KAAAD,QAAAS,IAAA,GAAAR,KAAAyB,QAAAzB,KAAAD,QAAAS,KARiCR,KAAtCU,WAAAsB,UAWIT,KAAAA,gBAxCgCU,OAApCC,KAAAC,MAAA,qBAAA,0CAuC+BC,IAAA,SAA/Bb,GAMAI,KAAAA,KAAQP,IAIRpB,KAAAkB,MAAImB,KAAJ,IAAId,GAAAe,gBACAtC,KAAAC,KAAKS,GACRV,KAAAU,WAAA6B,SACDvC,KAAAwC,YANAb,OAAAA,KAAYE,MAAAA,qBAAZ,6BAUJO,OAAAA,WACI,IAAA,IAAKb,KAAKtB,KAAKsB,KACXU,KAAAA,IAAAA,IAKJQ,YAAK/B,WACLV,KAAAU,WAAK8B,IAALV,OACHY,EA1EkCC,KAAA3C,KAAAC,KAAA,SAAA0B,GAuF3BA,EAAQiB,cAAc,mBAV9BC,EAAAA,QAAQ7C,KAAAC,OACJD,KAAKqB,IAAIE,OACLJ,EAAA,UACHU,SAAA,gBAhF8BiB,KAAA9C,KAAAD,QAAAQ,cAuF3BoB,SAAAA,WACH,IAAAoB,EAFD,EAGA,IAAA,IAAIL,KAAEM,KAAQ/C,KAAKA,CACf,IAAA0B,EAASP,KAATnB,KACMsB,GAITI,EAAAtB,QAAA0C,EAAA,KAAA/C,KAAAD,QAAAM,OA/F8BsB,EAAA3B,KAAAyB,OAAAzB,KAAAD,QAAAU,IAAA,gBAAA,iBAAA,gCAsG3Bd,KAAAA","file":"../../../scripts/mvc/form/form-repeat.js","sourcesContent":["import _l from \"utils/localization\";\n/** This class creates a ui component which enables the dynamic creation of portlets */\nimport Utils from \"utils/utils\";\nimport Portlet from \"mvc/ui/ui-portlet\";\nimport Ui from \"mvc/ui/ui-misc\";\n\nexport var View = Backbone.View.extend({\n    initialize: function(options) {\n        this.list = {};\n        this.options = Utils.merge(options, {\n            title: _l(\"Repeat\"),\n            empty_text: \"Not available.\",\n            max: null,\n            min: null\n        });\n        this.button_new = new Ui.ButtonIcon({\n            icon: \"fa-plus\",\n            title: `Insert ${this.options.title}`,\n            tooltip: `Add new ${this.options.title} block`,\n            cls: \"ui-button-icon ui-clear-float form-repeat-add\",\n            onclick: function() {\n                if (options.onnew) {\n                    options.onnew();\n                }\n            }\n        });\n        this.setElement(\n            $(\"<div/>\")\n                .append((this.$list = $(\"<div/>\")))\n                .append($(\"<div/>\").append(this.button_new.$el))\n        );\n    },\n\n    /** Number of repeat blocks */\n    size: function() {\n        return _.size(this.list);\n    },\n\n    /** Add new repeat block */\n    add: function(options) {\n        if (!options.id || this.list[options.id]) {\n            Galaxy.emit.debug(\"form-repeat::add()\", \"Duplicate or invalid repeat block id.\");\n            return;\n        }\n        var button_delete = new Ui.ButtonIcon({\n            icon: \"fa-trash-o\",\n            tooltip: _l(\"Delete this repeat block\"),\n            cls: \"ui-button-icon-plain form-repeat-delete\",\n            onclick: function() {\n                if (options.ondel) {\n                    options.ondel();\n                }\n            }\n        });\n        var portlet = new Portlet.View({\n            id: options.id,\n            title: _l(\"placeholder\"),\n            cls: options.cls || \"ui-portlet-repeat\",\n            operations: { button_delete: button_delete }\n        });\n        portlet.append(options.$el);\n        portlet.$el.addClass(\"section-row\").hide();\n        this.list[options.id] = portlet;\n        this.$list.append(portlet.$el.fadeIn(\"fast\"));\n        if (this.options.max > 0 && this.size() >= this.options.max) {\n            this.button_new.disable();\n        }\n        this._refresh();\n    },\n\n    /** Delete repeat block */\n    del: function(id) {\n        if (!this.list[id]) {\n            Galaxy.emit.debug(\"form-repeat::del()\", \"Invalid repeat block id.\");\n            return;\n        }\n        this.$list.find(`#${id}`).remove();\n        delete this.list[id];\n        this.button_new.enable();\n        this._refresh();\n    },\n\n    /** Remove all */\n    delAll: function() {\n        for (var id in this.list) {\n            this.del(id);\n        }\n    },\n\n    /** Hides add/del options */\n    hideOptions: function() {\n        this.button_new.$el.hide();\n        _.each(this.list, portlet => {\n            portlet.hideOperation(\"button_delete\");\n        });\n        if (_.isEmpty(this.list)) {\n            this.$el.append(\n                $(\"<div/>\")\n                    .addClass(\"ui-form-info\")\n                    .html(this.options.empty_text)\n            );\n        }\n    },\n\n    /** Refresh view */\n    _refresh: function() {\n        var index = 0;\n        for (var id in this.list) {\n            var portlet = this.list[id];\n            portlet.title(`${++index}: ${this.options.title}`);\n            portlet[this.size() > this.options.min ? \"showOperation\" : \"hideOperation\"](\"button_delete\");\n        }\n    }\n});\n\nexport default {\n    View: View\n};\n"]}