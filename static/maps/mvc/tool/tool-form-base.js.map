{"version":3,"sources":["mvc/tool/tool-form-base.js"],"names":["_formView2","default","extend","initialize","options","self","this","deferred","_deferred2","prototype","call","_update","model","get","parent","Galaxy","currHistoryPanel","listenTo","collection","$el","on","_destroy","callback","reset","execute","process","hide","remove","emit","_render","attributes","set","title","fixed_title","name","description","version","operations","hide_operations","_operations","off","render","append","onchange","id","show_message","persistent","_uiMisc2","ButtonMenu","icon","narrow","tooltip","sustain_version","versions","length","i","versions_button","addMenu","replace","func","biostar_url","onclick","menu_button","_localization2","window","location","origin","root","user","prompt","href","requirements","requirements_visible","portlet","collapsed","expand","update","message","_templateRequirements","status","sharable_url","open","webhooks","each","webhook","toJSON","activate","config","function","menu","_footer","_templateHelp","citationInstance","_vue2","_Citations2","vm","document","createElement","$mount","source","$tmpl","$","addClass","help","find","attr","img_src","indexOf","nreq","requirements_message","_","req","text","requirements_link"],"mappings":"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","file":"../../../scripts/mvc/tool/tool-form-base.js","sourcesContent":["import _l from \"utils/localization\";\n/**\n    This is the base class of the tool form plugin. This class is e.g. inherited by the regular and the workflow tool form.\n*/\nimport Utils from \"utils/utils\";\nimport Deferred from \"utils/deferred\";\nimport Ui from \"mvc/ui/ui-misc\";\nimport FormBase from \"mvc/form/form-view\";\nimport Webhooks from \"mvc/webhooks\";\nimport Citations from \"components/Citations.vue\";\nimport Vue from \"vue\";\nexport default FormBase.extend({\n    initialize: function(options) {\n        var self = this;\n        this.deferred = new Deferred();\n        FormBase.prototype.initialize.call(this, options);\n\n        // optional model update\n        this._update(this.model.get(\"initialmodel\"));\n\n        // listen to history panel\n        if (this.model.get(\"listen_to_history\") && parent.Galaxy && parent.Galaxy.currHistoryPanel) {\n            this.listenTo(parent.Galaxy.currHistoryPanel.collection, \"change\", () => {\n                self.model.get(\"onchange\")();\n            });\n        }\n        // destroy dom elements\n        this.$el.on(\"remove\", () => {\n            self._destroy();\n        });\n    },\n\n    /** Allows tool form variation to update tool model */\n    _update: function(callback) {\n        var self = this;\n        callback = callback || this.model.get(\"buildmodel\");\n        if (callback) {\n            this.deferred.reset();\n            this.deferred.execute(process => {\n                callback(process, self);\n                process.then(() => {\n                    self._render();\n                });\n            });\n        } else {\n            this._render();\n        }\n    },\n\n    /** Wait for deferred build processes before removal */\n    _destroy: function() {\n        var self = this;\n        this.$el.off().hide();\n        this.deferred.execute(() => {\n            FormBase.prototype.remove.call(self);\n            Galaxy.emit.debug(\"tool-form-base::_destroy()\", \"Destroy view.\");\n        });\n    },\n\n    /** Build form */\n    _render: function() {\n        var self = this;\n        var options = this.model.attributes;\n        this.model.set({\n            title:\n                options.fixed_title ||\n                `<b>${options.name}</b> ${options.description} (Galaxy Version ${options.version})`,\n            operations: !options.hide_operations && this._operations(),\n            onchange: function() {\n                self.deferred.reset();\n                self.deferred.execute(process => {\n                    self.model.get(\"postchange\")(process, self);\n                });\n            }\n        });\n        this.render();\n        if (!this.model.get(\"collapsible\")) {\n            this.$el.append(\n                $(\"<div/>\")\n                    .addClass(\"ui-margin-top-large\")\n                    .append(this._footer())\n            );\n        }\n        this.show_message &&\n            this.message.update({\n                status: \"success\",\n                message: `Now you are using '${options.name}' version ${options.version}, id '${options.id}'.`,\n                persistent: false\n            });\n        this.show_message = true;\n    },\n\n    /** Create tool operation menu */\n    _operations: function() {\n        var self = this;\n        var options = this.model.attributes;\n\n        // button for version selection\n        var versions_button = new Ui.ButtonMenu({\n            icon: \"fa-cubes\",\n            title: (!options.narrow && \"Versions\") || null,\n            tooltip: \"Select another tool version\"\n        });\n        if (!options.sustain_version && options.versions && options.versions.length > 1) {\n            for (var i in options.versions) {\n                var version = options.versions[i];\n                if (version != options.version) {\n                    versions_button.addMenu({\n                        title: `Switch to ${version}`,\n                        version: version,\n                        icon: \"fa-cube\",\n                        onclick: function() {\n                            // here we update the tool version (some tools encode the version also in the id)\n                            self.model.set(\"id\", options.id.replace(options.version, this.version));\n                            self.model.set(\"version\", this.version);\n                            self._update();\n                        }\n                    });\n                }\n            }\n        } else {\n            versions_button.$el.hide();\n        }\n\n        // button for options e.g. search, help\n        var menu_button = new Ui.ButtonMenu({\n            id: \"options\",\n            icon: \"fa-caret-down\",\n            title: (!options.narrow && \"Options\") || null,\n            tooltip: \"View available options\"\n        });\n        if (options.biostar_url) {\n            menu_button.addMenu({\n                icon: \"fa-question-circle\",\n                title: \"Question?\",\n                onclick: function() {\n                    window.open(`${options.biostar_url}/p/new/post/`);\n                }\n            });\n            menu_button.addMenu({\n                icon: \"fa-search\",\n                title: _l(\"Search\"),\n                onclick: function() {\n                    window.open(`${options.biostar_url}/local/search/page/?q=${options.name}`);\n                }\n            });\n        }\n        menu_button.addMenu({\n            icon: \"fa-share\",\n            title: _l(\"Share\"),\n            onclick: function() {\n                prompt(\n                    \"Copy to clipboard: Ctrl+C, Enter\",\n                    `${window.location.origin + Galaxy.root}root?tool_id=${options.id}`\n                );\n            }\n        });\n\n        // add admin operations\n        if (Galaxy.user && Galaxy.user.get(\"is_admin\")) {\n            menu_button.addMenu({\n                icon: \"fa-download\",\n                title: _l(\"Download\"),\n                onclick: function() {\n                    window.location.href = `${Galaxy.root}api/tools/${options.id}/download`;\n                }\n            });\n        }\n\n        // button for version selection\n        if (options.requirements && options.requirements.length > 0) {\n            menu_button.addMenu({\n                icon: \"fa-info-circle\",\n                title: _l(\"Requirements\"),\n                onclick: function() {\n                    if (!this.requirements_visible || self.portlet.collapsed) {\n                        this.requirements_visible = true;\n                        self.portlet.expand();\n                        self.message.update({\n                            persistent: true,\n                            message: self._templateRequirements(options),\n                            status: \"info\"\n                        });\n                    } else {\n                        this.requirements_visible = false;\n                        self.message.update({ message: \"\" });\n                    }\n                }\n            });\n        }\n\n        // add toolshed url\n        if (options.sharable_url) {\n            menu_button.addMenu({\n                icon: \"fa-external-link\",\n                title: _l(\"See in Tool Shed\"),\n                onclick: function() {\n                    window.open(options.sharable_url);\n                }\n            });\n        }\n\n        // add tool menu webhooks\n        Webhooks.load({\n            type: \"tool-menu\",\n            callback: function(webhooks) {\n                webhooks.each(model => {\n                    var webhook = model.toJSON();\n                    if (webhook.activate && webhook.config.function) {\n                        menu_button.addMenu({\n                            icon: webhook.config.icon,\n                            title: webhook.config.title,\n                            onclick: function() {\n                                var func = new Function(\"options\", webhook.config.function);\n                                func(options);\n                            }\n                        });\n                    }\n                });\n            }\n        });\n\n        return {\n            menu: menu_button,\n            versions: versions_button\n        };\n    },\n\n    /** Create footer */\n    _footer: function() {\n        var options = this.model.attributes;\n        var $el = $(\"<div/>\").append(this._templateHelp(options));\n        if (options.citations) {\n            var citationInstance = Vue.extend(Citations);\n            var vm = document.createElement(\"div\");\n            $el.append(vm);\n            new citationInstance({\n                propsData: {\n                    id: options.id,\n                    source: \"tools\"\n                }\n            }).$mount(vm);\n        }\n        return $el;\n    },\n\n    /** Templates */\n    _templateHelp: function(options) {\n        var $tmpl = $(\"<div/>\")\n            .addClass(\"ui-form-help\")\n            .append(options.help);\n        $tmpl.find(\"a\").attr(\"target\", \"_blank\");\n        $tmpl.find(\"img\").each(function() {\n            var img_src = $(this).attr(\"src\");\n            if (img_src.indexOf(\"admin_toolshed\") !== -1) {\n                $(this).attr(\"src\", Galaxy.root + img_src);\n            }\n        });\n        return $tmpl;\n    },\n\n    _templateRequirements: function(options) {\n        var nreq = options.requirements.length;\n        if (nreq > 0) {\n            var requirements_message = \"This tool requires \";\n            _.each(options.requirements, (req, i) => {\n                requirements_message +=\n                    req.name +\n                    (req.version ? ` (Version ${req.version})` : \"\") +\n                    (i < nreq - 2 ? \", \" : i == nreq - 2 ? \" and \" : \"\");\n            });\n            var requirements_link = $(\"<a/>\")\n                .attr(\"target\", \"_blank\")\n                .attr(\"href\", \"https://galaxyproject.org/tools/requirements/\")\n                .text(\"here\");\n            return $(\"<span/>\")\n                .append(`${requirements_message}. Click `)\n                .append(requirements_link)\n                .append(\" for more information.\");\n        }\n        return \"No requirements found.\";\n    }\n});\n"]}